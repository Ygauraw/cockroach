android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    java.util.HashMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    java.util.HashMap children -> children
    java.util.ArrayList fragments -> fragments
    java.util.HashMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.ContextCompat -> android.support.v4.a.a:
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
    boolean verifyPurchase(java.lang.String,java.lang.String,java.lang.String) -> verifyPurchase
    java.security.PublicKey generatePublicKey(java.lang.String) -> generatePublicKey
    boolean verify(java.security.PublicKey,java.lang.String,java.lang.String) -> verify
    void a(byte[]) -> a
    byte[] a(java.lang.String) -> a
    byte[] a(byte[],java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    java.lang.String a(java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.Object a(java.lang.String,java.lang.Class) -> a
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    int a(android.content.Context,float,int) -> a
    void a(android.content.Intent,java.lang.String) -> a
    void a(android.webkit.WebSettings,com.google.ads.n) -> a
android.support.v4.content.IntentCompat -> android.support.v4.a.b:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.a.c:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.a.d:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.a.e:
android.support.v4.content.Loader -> android.support.v4.a.f:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void stopLoading() -> b
    void abandon() -> c
    void reset() -> d
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.g:
android.support.v4.util.LogWriter -> android.support.v4.b.a:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.b.b:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    void remove(int) -> b
    void removeAt(int) -> c
    void gc() -> c
    void put(int,java.lang.Object) -> a
    int size() -> a
    int keyAt(int) -> d
    java.lang.Object valueAt(int) -> e
    int indexOfKey(int) -> f
    void clear() -> b
    int binarySearch(int[],int,int,int) -> a
    int idealIntArraySize(int) -> g
android.support.v4.view.PagerAdapter -> android.support.v4.c.a:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
com.android.vending.billing.IInAppBillingService -> com.android.vending.billing.IInAppBillingService:
    int isBillingSupported(int,java.lang.String,java.lang.String) -> a
    android.os.Bundle getSkuDetails(int,java.lang.String,java.lang.String,android.os.Bundle) -> a
    android.os.Bundle getBuyIntent(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    android.os.Bundle getPurchases(int,java.lang.String,java.lang.String,java.lang.String) -> a
    int consumePurchase(int,java.lang.String,java.lang.String) -> b
com.android.vending.billing.IInAppBillingService$Stub -> com.android.vending.billing.IInAppBillingService$Stub:
    com.android.vending.billing.IInAppBillingService asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.android.vending.billing.IInAppBillingService$Stub$Proxy -> com.android.vending.billing.IInAppBillingService$Stub$Proxy:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    int isBillingSupported(int,java.lang.String,java.lang.String) -> a
    android.os.Bundle getSkuDetails(int,java.lang.String,java.lang.String,android.os.Bundle) -> a
    android.os.Bundle getBuyIntent(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    android.os.Bundle getPurchases(int,java.lang.String,java.lang.String,java.lang.String) -> a
    int consumePurchase(int,java.lang.String,java.lang.String) -> b
com.gark.android.billing.util.Base64 -> com.a.a.a.a.a:
    byte[] DECODABET -> a
    int decode4to3(byte[],int,byte[],int,byte[]) -> a
    byte[] decode(java.lang.String) -> a
com.gark.android.billing.util.Base64DecoderException -> com.a.a.a.a.b:
com.gark.android.billing.util.IabException -> com.a.a.a.a.c:
    com.gark.android.billing.util.IabResult mResult -> a
    com.gark.android.billing.util.IabResult getResult() -> a
com.gark.android.billing.util.IabHelper -> com.a.a.a.a.d:
    boolean mDebugLog -> e
    java.lang.String mDebugTag -> f
    boolean mSetupDone -> a
    boolean mSubscriptionsSupported -> b
    boolean mAsyncInProgress -> g
    java.lang.String mAsyncOperation -> h
    android.content.Context mContext -> c
    com.android.vending.billing.IInAppBillingService mService -> d
    android.content.ServiceConnection mServiceConn -> i
    int mRequestCode -> j
    java.lang.String mPurchasingItemType -> k
    java.lang.String mSignatureBase64 -> l
    com.gark.android.billing.util.IabHelper$OnIabPurchaseFinishedListener mPurchaseListener -> m
    void enableDebugLogging(boolean) -> a
    void startSetup(com.gark.android.billing.util.IabHelper$OnIabSetupFinishedListener) -> a
    void dispose() -> a
    void launchPurchaseFlow(android.app.Activity,java.lang.String,int,com.gark.android.billing.util.IabHelper$OnIabPurchaseFinishedListener,java.lang.String) -> a
    boolean handleActivityResult(int,int,android.content.Intent) -> a
    com.gark.android.billing.util.Inventory queryInventory$59f6af5f(boolean,java.util.List) -> a
    void queryInventoryAsync(com.gark.android.billing.util.IabHelper$QueryInventoryFinishedListener) -> a
    java.lang.String getResponseDesc(int) -> a
    void checkSetupDone(java.lang.String) -> b
    int getResponseCodeFromBundle(android.os.Bundle) -> a
    void flagStartAsync(java.lang.String) -> c
    void flagEndAsync() -> b
    int queryPurchases(com.gark.android.billing.util.Inventory,java.lang.String) -> a
    int querySkuDetails(java.lang.String,com.gark.android.billing.util.Inventory,java.util.List) -> a
    void logDebug(java.lang.String) -> a
    void logError(java.lang.String) -> d
    void logWarn(java.lang.String) -> e
com.gark.android.billing.util.IabHelper$1 -> com.a.a.a.a.e:
    com.gark.android.billing.util.IabHelper this$0 -> a
    com.gark.android.billing.util.IabHelper$OnIabSetupFinishedListener val$listener -> b
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.gark.android.billing.util.IabHelper$2 -> com.a.a.a.a.f:
    com.gark.android.billing.util.IabHelper this$0 -> a
    boolean val$querySkuDetails -> b
    java.util.List val$moreSkus -> c
    android.os.Handler val$handler -> d
    com.gark.android.billing.util.IabHelper$QueryInventoryFinishedListener val$listener -> e
    void run() -> run
com.gark.android.billing.util.IabHelper$2$1 -> com.a.a.a.a.g:
    com.gark.android.billing.util.IabHelper$QueryInventoryFinishedListener val$listener -> a
    com.gark.android.billing.util.IabResult val$result_f -> b
    com.gark.android.billing.util.Inventory val$inv_f -> c
    void run() -> run
com.gark.android.billing.util.IabHelper$OnIabPurchaseFinishedListener -> com.a.a.a.a.h:
    void onIabPurchaseFinished(com.gark.android.billing.util.IabResult,com.gark.android.billing.util.Purchase) -> onIabPurchaseFinished
com.gark.android.billing.util.IabHelper$OnIabSetupFinishedListener -> com.a.a.a.a.i:
    void onIabSetupFinished(com.gark.android.billing.util.IabResult) -> onIabSetupFinished
com.gark.android.billing.util.IabHelper$QueryInventoryFinishedListener -> com.a.a.a.a.j:
    void onQueryInventoryFinished(com.gark.android.billing.util.IabResult,com.gark.android.billing.util.Inventory) -> onQueryInventoryFinished
com.gark.android.billing.util.IabResult -> com.a.a.a.a.k:
    int mResponse -> b
    java.lang.String mMessage -> a
    boolean isSuccess() -> a
    boolean isFailure() -> b
    java.lang.String toString() -> toString
com.gark.android.billing.util.Inventory -> com.a.a.a.a.l:
    java.util.Map mSkuMap -> a
    java.util.Map mPurchaseMap -> b
    com.gark.android.billing.util.Purchase getPurchase(java.lang.String) -> a
    java.util.List getAllOwnedSkus(java.lang.String) -> b
com.gark.android.billing.util.Purchase -> com.a.a.a.a.m:
    java.lang.String mItemType -> a
    java.lang.String mSku -> b
    java.lang.String mToken -> c
    java.lang.String mOriginalJson -> d
    java.lang.String getSku() -> a
    java.lang.String toString() -> toString
com.gark.android.billing.util.SkuDetails -> com.a.a.a.a.n:
    java.lang.String mSku -> a
    java.lang.String mJson -> b
    java.lang.String toString() -> toString
com.google.ads.AdActivity -> com.google.ads.AdActivity:
    com.google.ads.internal.a a -> a
    java.lang.Object b -> b
    com.google.ads.AdActivity c -> c
    com.google.ads.internal.d d -> d
    com.google.ads.AdActivity e -> e
    com.google.ads.AdActivity f -> f
    com.google.ads.AdActivity$StaticMethodWrapper g -> g
    com.google.ads.internal.AdWebView h -> h
    android.widget.FrameLayout i -> i
    int j -> j
    android.view.ViewGroup k -> k
    boolean l -> l
    long m -> m
    android.widget.RelativeLayout n -> n
    com.google.ads.AdActivity o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    boolean s -> s
    com.google.ads.internal.AdVideoView t -> t
    void a(java.lang.String) -> a
    com.google.ads.internal.AdVideoView getAdVideoView() -> a
    boolean isShowing() -> b
    boolean leftApplication() -> c
    void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e) -> a
    void moveAdVideoView(int,int,int,int) -> a
    void newAdVideoView(int,int,int,int) -> b
    android.widget.RelativeLayout$LayoutParams a(int,int,int,int) -> c
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void a(com.google.ads.internal.AdWebView,boolean,int,boolean,boolean) -> a
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void e() -> h
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void setCustomClose(boolean) -> a
    java.lang.Object a() -> d
    com.google.ads.AdActivity b() -> e
    com.google.ads.AdActivity c() -> f
    com.google.ads.internal.d d() -> g
    com.google.ads.internal.d b(com.google.ads.internal.d) -> a
com.google.ads.AdActivity$StaticMethodWrapper -> com.google.ads.a:
    boolean isShowing() -> a
    boolean leftApplication() -> b
    void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e) -> a
com.google.ads.AdListener -> com.google.ads.b:
com.google.ads.AdRequest -> com.google.ads.c:
    java.text.SimpleDateFormat a -> b
    java.lang.reflect.Method b -> c
    java.lang.reflect.Method c -> d
    com.google.ads.AdRequest$Gender d -> e
    java.util.Date e -> f
    java.util.Set f -> g
    java.util.Map g -> h
    java.util.Map h -> i
    android.location.Location i -> j
    boolean j -> k
    boolean k -> l
    java.lang.String TEST_EMULATOR -> a
    java.util.Set l -> m
    com.google.ads.AdRequest setKeywords(java.util.Set) -> a
    com.google.ads.AdRequest setNetworkExtras$46c6ddd1(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    java.lang.Object getNetworkExtras(java.lang.Class) -> a
    java.util.Map getRequestMap(android.content.Context) -> a
    com.google.ads.AdRequest setTestDevices(java.util.Set) -> b
    boolean isTestDevice(android.content.Context) -> b
com.google.ads.AdRequest$ErrorCode -> com.google.ads.d:
    com.google.ads.AdRequest$ErrorCode INVALID_REQUEST -> a
    com.google.ads.AdRequest$ErrorCode NO_FILL -> b
    com.google.ads.AdRequest$ErrorCode NETWORK_ERROR -> c
    com.google.ads.AdRequest$ErrorCode INTERNAL_ERROR -> d
    java.lang.String a -> e
    java.lang.String toString() -> toString
com.google.ads.AdRequest$Gender -> com.google.ads.e:
    com.google.ads.AdRequest$Gender UNKNOWN -> a
    com.google.ads.AdRequest$Gender MALE -> b
    com.google.ads.AdRequest$Gender FEMALE -> c
com.google.ads.AdSize -> com.google.ads.f:
    com.google.ads.AdSize SMART_BANNER -> a
    com.google.ads.AdSize BANNER -> b
    com.google.ads.AdSize IAB_MRECT -> c
    com.google.ads.AdSize IAB_BANNER -> d
    com.google.ads.AdSize IAB_LEADERBOARD -> e
    com.google.ads.AdSize IAB_WIDE_SKYSCRAPER -> f
    int a -> g
    int b -> h
    boolean c -> i
    boolean d -> j
    boolean e -> k
    java.lang.String f -> l
    com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int getWidth() -> a
    int getHeight() -> b
    boolean a() -> f
    boolean isFullWidth() -> c
    boolean isAutoHeight() -> d
    boolean isCustomAdSize() -> e
    java.lang.String toString() -> toString
com.google.ads.AdView -> com.google.ads.AdView:
    com.google.ads.internal.d a -> a
    com.google.ads.internal.a b -> b
    void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> b
    void a(android.content.Context,java.lang.String,com.google.ads.AdSize,android.util.AttributeSet) -> a
    com.google.ads.AdSize[] a(java.lang.String) -> a
    boolean a(java.lang.String,android.content.Context,android.util.AttributeSet,boolean) -> a
    java.lang.String b(java.lang.String,android.content.Context,android.util.AttributeSet,boolean) -> b
    java.util.Set c(java.lang.String,android.content.Context,android.util.AttributeSet,boolean) -> c
    void a(android.app.Activity,com.google.ads.AdSize,java.lang.String) -> a
    void loadAd(com.google.ads.AdRequest) -> a
    void a(com.google.ads.AdSize[]) -> a
    void onMeasure(int,int) -> onMeasure
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
com.google.ads.InterstitialAd -> com.google.ads.g:
com.google.ads.aa -> com.google.ads.h:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ab -> com.google.ads.i:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ac -> com.google.ads.j:
    com.google.ads.internal.a a -> a
    int a(java.util.HashMap,java.lang.String,int,android.util.DisplayMetrics) -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ae -> com.google.ads.k:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.google.ads.af -> com.google.ads.l:
    java.lang.ref.WeakReference a -> a
    void run() -> run
com.google.ads.ag -> com.google.ads.m:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    int E -> E
    int F -> F
    int G -> G
    int H -> H
    int I -> I
    int J -> J
    int K -> K
    int L -> L
    int M -> M
    int N -> N
    int O -> O
    int P -> P
    int Q -> Q
    int R -> R
    int S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    int aa -> aa
    int ab -> ab
    int ac -> ac
    int ad -> ad
    int ae -> ae
    int af -> af
    int ag -> ag
    int ah -> ah
    int ai -> ai
    int aj -> aj
    int ak -> ak
    int al -> al
    int am -> am
    int an -> an
    int ao -> ao
    int ap -> ap
    int aq -> aq
    int ar -> ar
    int as -> as
    int at -> at
    int au -> au
    int av -> av
    int aw -> aw
    int ax -> ax
    int ay -> ay
    int az -> az
    int aA -> aA
    int aB -> aB
    int aC -> aC
    int aD -> aD
    int aE -> aE
    int aF -> aF
    int aG -> aG
    int aH -> aH
    int aI -> aI
    int aJ -> aJ
    int aK -> aK
    int aL -> aL
    int aM -> aM
    int aN -> aN
    int aO -> aO
    int aP -> aP
    int aQ -> aQ
    int aR -> aR
    int aS -> aS
    int aT -> aT
    int aU -> aU
    int aV -> aV
    int aW -> aW
    int aX -> aX
    int aY -> aY
    int aZ -> aZ
    int ba -> ba
    int bb -> bb
    int bc -> bc
    int bd -> bd
    int be -> be
    int bf -> bf
    int bg -> bg
    int bh -> bh
    int bi -> bi
    int bj -> bj
    int bk -> bk
    int bl -> bl
    int bm -> bm
    int bn -> bn
    int bo -> bo
    int bp -> bp
    int bq -> bq
    int br -> br
    int bs -> bs
    int bt -> bt
    int bu -> bu
    int bv -> bv
    int bw -> bw
    int bx -> bx
    int by -> by
    int bz -> bz
    int bA -> bA
    int bB -> bB
    int bC -> bC
    int bD -> bD
    int bE -> bE
    int bF -> bF
    int bG -> bG
    int bH -> bH
    int bI -> bI
    int bJ -> bJ
    int bK -> bK
    int bL -> bL
    int bM -> bM
    int bN -> bN
    int bO -> bO
    int bP -> bP
    int bQ -> bQ
    int bR -> bR
    int bS -> bS
    int bT -> bT
    int bU -> bU
    int bV -> bV
    int bW -> bW
    int bX -> bX
    int bY -> bY
    int bZ -> bZ
    int ca -> ca
    int cb -> cb
    int cc -> cc
    int cd -> cd
    int ce -> ce
    int cf -> cf
    int cg -> cg
    int ch -> ch
    int ci -> ci
    int cj -> cj
    int ck -> ck
    int cl -> cl
    int cm -> cm
    int cn -> cn
    int co -> co
    int cp -> cp
    int cq -> cq
    int cr -> cr
    int cs -> cs
    int ct -> ct
    int cu -> cu
    int cv -> cv
    int cw -> cw
    int cx -> cx
    int cy -> cy
    int cz -> cz
    int cA -> cA
    int cB -> cB
    int cC -> cC
    int cD -> cD
    int cE -> cE
    int cF -> cF
    int cG -> cG
    int cH -> cH
    int cI -> cI
    int cJ -> cJ
    int cK -> cK
    int cL -> cL
    int cM -> cM
    com.google.ads.ag$a[] cN -> cN
    void a(byte[],byte[]) -> a
com.google.ads.ag$a -> com.google.ads.n:
    void a(byte[],byte[]) -> a
com.google.ads.ag$b -> com.google.ads.o:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$c -> com.google.ads.p:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$d -> com.google.ads.q:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$e -> com.google.ads.r:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$f -> com.google.ads.s:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$g -> com.google.ads.t:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$h -> com.google.ads.u:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$i -> com.google.ads.v:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$j -> com.google.ads.w:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$k -> com.google.ads.x:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$l -> com.google.ads.y:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$m -> com.google.ads.z:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ah -> com.google.ads.A:
com.google.ads.ai -> com.google.ads.B:
    java.lang.String a(android.content.Context,java.lang.String) -> a
com.google.ads.aj -> com.google.ads.C:
    com.google.ads.at c -> c
    java.io.ByteArrayOutputStream d -> d
    android.view.MotionEvent a -> a
    android.util.DisplayMetrics b -> b
    void b(android.content.Context) -> a
    void c(android.content.Context) -> b
    java.lang.String a(android.content.Context) -> c
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String,boolean) -> a
    void a(int,long) -> a
    void a(int,java.lang.String) -> a
    void a() -> a
    byte[] b() -> b
com.google.ads.ak -> com.google.ads.D:
    java.lang.reflect.Method d -> c
    java.lang.reflect.Method e -> d
    java.lang.reflect.Method f -> e
    java.lang.reflect.Method g -> f
    java.lang.reflect.Method h -> g
    java.lang.String i -> h
    long j -> i
    boolean c -> j
    com.google.ads.ak a(java.lang.String,android.content.Context) -> a
    void b(java.lang.String,android.content.Context) -> b
    void b(android.content.Context) -> a
    void c(android.content.Context) -> b
    java.lang.String a() -> a
    java.lang.Long b() -> b
    java.lang.String d(android.content.Context) -> d
    java.lang.String c() -> c
    java.util.ArrayList a(android.view.MotionEvent,android.util.DisplayMetrics) -> a
    java.lang.String e(android.content.Context) -> e
    java.lang.String b(byte[],java.lang.String) -> a
com.google.ads.ak$a -> com.google.ads.E:
com.google.ads.al -> com.google.ads.F:
    java.lang.String[] c -> a
    com.google.ads.ai d -> b
    boolean a(android.net.Uri) -> a
    void a(java.lang.String) -> a
    android.net.Uri a(android.net.Uri,android.content.Context) -> a
    android.net.Uri a(android.net.Uri,android.content.Context,java.lang.String,boolean) -> a
com.google.ads.am$a -> com.google.ads.G:
com.google.ads.ao -> com.google.ads.H:
com.google.ads.ap -> com.google.ads.I:
    char[] b -> a
    byte[] c -> b
    java.lang.String a(byte[],boolean) -> a
    int a(char[],int,byte[],int,byte[]) -> a
    byte[] a(java.lang.String) -> a
com.google.ads.aq -> com.google.ads.J:
    byte[] a -> a
    int b -> b
    int c -> c
    void a(byte[]) -> a
com.google.ads.ar -> com.google.ads.K:
    android.net.Uri a -> a
    java.lang.String[] b -> b
com.google.ads.as -> com.google.ads.L:
    boolean a(android.content.Context,long) -> a
    void a(android.app.Activity) -> a
com.google.ads.as$1 -> com.google.ads.M:
    android.content.Context a -> a
    void run() -> run
com.google.ads.as$a -> com.google.ads.N:
    java.lang.ref.WeakReference a -> a
    android.content.SharedPreferences$Editor b -> b
    void run() -> run
com.google.ads.at -> com.google.ads.O:
    byte[] a -> a
    int b -> b
    int c -> c
    int d -> d
    java.io.OutputStream e -> e
    com.google.ads.at a(java.io.OutputStream,int) -> a
    void b() -> b
    void a() -> a
    void a(int) -> a
    void a(byte[],int,int) -> a
    void a(int,int) -> a
    void b(int) -> b
com.google.ads.at$a -> com.google.ads.P:
com.google.ads.au -> com.google.ads.Q:
    int a(int,int) -> a
com.google.ads.b -> com.google.ads.R:
    java.math.BigInteger a -> a
    java.math.BigInteger b -> b
    com.google.ads.b c -> c
    com.google.ads.b a() -> a
    java.math.BigInteger b() -> b
    java.math.BigInteger c() -> c
    java.math.BigInteger d() -> d
com.google.ads.c -> com.google.ads.S:
    java.util.Map a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.List d -> d
    java.lang.Integer e -> e
    java.lang.Integer f -> f
    java.util.List g -> g
    java.util.List h -> h
    java.util.List i -> i
    com.google.ads.c a(java.lang.String) -> a
    boolean a() -> a
    int b() -> b
    java.lang.String c() -> c
    boolean d() -> d
    int e() -> e
    java.util.List f() -> f
    java.util.List g() -> g
    java.util.List h() -> h
    java.util.List i() -> i
    com.google.ads.util.g a$1943613e(org.json.JSONObject) -> a
    com.google.ads.internal.h j() -> j
    java.util.List a(org.json.JSONObject,java.lang.String) -> a
com.google.ads.c$1 -> com.google.ads.T:
com.google.ads.d -> com.google.ads.U:
    com.google.ads.c a -> a
    long b -> b
    boolean a() -> a
    void a(com.google.ads.c,int) -> a
    com.google.ads.c b() -> b
com.google.ads.doubleclick.DfpAdView -> com.google.ads.a.a:
com.google.ads.doubleclick.DfpExtras -> com.google.ads.a.b:
    java.lang.String getPublisherProvidedId() -> a
    com.google.ads.mediation.admob.AdMobAdapterExtras clearExtras() -> b
com.google.ads.doubleclick.SwipeableDfpAdView -> com.google.ads.a.c:
com.google.ads.e -> com.google.ads.V:
    com.google.ads.internal.d a -> a
    com.google.ads.h b -> b
    java.lang.Object c -> c
    java.lang.Thread d -> d
    java.lang.Object e -> e
    boolean f -> f
    java.lang.Object g -> g
    boolean a() -> a
    void a(com.google.ads.c,com.google.ads.AdRequest) -> a
    boolean d() -> b
    boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long) -> a
    boolean e(com.google.ads.h) -> b
    void d(com.google.ads.h) -> a
    void a(com.google.ads.e,com.google.ads.c,com.google.ads.AdRequest) -> a
    java.lang.Object a(com.google.ads.e) -> a
    java.lang.Thread a(com.google.ads.e,java.lang.Thread) -> a
    com.google.ads.internal.d b(com.google.ads.e) -> b
    boolean a(com.google.ads.e,com.google.ads.h) -> a
com.google.ads.e$1 -> com.google.ads.W:
    com.google.ads.c a -> a
    com.google.ads.AdRequest b -> b
    com.google.ads.e c -> c
    void run() -> run
com.google.ads.e$7 -> com.google.ads.X:
    com.google.ads.c a -> a
    com.google.ads.e b -> b
    void run() -> run
com.google.ads.e$8 -> com.google.ads.Y:
    com.google.ads.h a -> a
    android.view.View b -> b
    com.google.ads.f c -> c
    com.google.ads.e d -> d
    void run() -> run
com.google.ads.f -> com.google.ads.Z:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.List d -> d
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.util.List d() -> d
com.google.ads.g$a -> com.google.ads.aa:
    com.google.ads.g$a a -> d
    com.google.ads.g$a b -> e
    com.google.ads.g$a c -> f
    com.google.ads.g$a d -> a
    com.google.ads.g$a e -> b
    com.google.ads.g$a f -> c
com.google.ads.h -> com.google.ads.ab:
    com.google.ads.internal.h a -> a
    boolean c -> b
    boolean d -> c
    com.google.ads.g$a e -> d
    com.google.ads.mediation.MediationAdapter g -> e
    boolean h -> f
    boolean i -> g
    android.view.View j -> h
    java.lang.String k -> i
    com.google.ads.AdRequest l -> j
    java.util.HashMap m -> k
    void a(android.app.Activity) -> a
    void b() -> a
    boolean c() -> b
    boolean d() -> c
    com.google.ads.g$a e() -> d
    android.view.View f() -> e
    java.lang.String h() -> f
    void a(boolean,com.google.ads.g$a) -> a
    void a(com.google.ads.mediation.MediationAdapter) -> a
    void k() -> g
    boolean l() -> h
    com.google.ads.mediation.MediationAdapter a(com.google.ads.h) -> a
com.google.ads.h$1 -> com.google.ads.ac:
    com.google.ads.h a -> a
    void run() -> run
com.google.ads.i -> com.google.ads.ad:
    com.google.ads.h a -> a
    java.lang.String b -> b
    com.google.ads.AdRequest c -> c
    java.util.HashMap d -> d
    boolean e -> e
    java.lang.ref.WeakReference f -> f
    void run() -> run
    void a(java.lang.String,java.lang.Throwable,com.google.ads.g$a) -> a
com.google.ads.i$a -> com.google.ads.ae:
com.google.ads.internal.ActivationOverlay -> com.google.ads.b.a:
    boolean b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.google.ads.internal.i f -> f
    void setOverlayEnabled(boolean) -> a
    void setOverlayActivated(boolean) -> b
    boolean a() -> a
    boolean b() -> b
    int c() -> c
    void setYPosition(int) -> a
    int d() -> d
    void setXPosition(int) -> b
    com.google.ads.internal.i e() -> e
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScrollVertically(int) -> canScrollVertically
com.google.ads.internal.ActivationOverlay$1 -> com.google.ads.b.b:
    com.google.ads.internal.ActivationOverlay a -> a
    com.google.ads.internal.ActivationOverlay b -> b
    void run() -> run
com.google.ads.internal.AdVideoView -> com.google.ads.b.c:
    com.google.ads.internal.a b -> a
    java.lang.ref.WeakReference c -> b
    com.google.ads.internal.AdWebView d -> c
    android.widget.MediaController a -> d
    long e -> e
    android.widget.VideoView f -> f
    java.lang.String g -> g
    void b() -> a
    void setMediaControllerEnabled(boolean) -> a
    void setSrc(java.lang.String) -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void c() -> b
    void d() -> c
    void a(int) -> a
    void a(android.view.MotionEvent) -> a
    void e() -> d
    void f() -> e
com.google.ads.internal.AdVideoView$a -> com.google.ads.b.d:
    java.lang.ref.WeakReference a -> a
    void run() -> run
    void a() -> a
com.google.ads.internal.AdWebView -> com.google.ads.b.e:
    java.lang.ref.WeakReference b -> b
    com.google.ads.AdSize c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    com.google.ads.n a -> a
    void f() -> f
    void g() -> g
    void h() -> h
    com.google.ads.AdActivity i() -> i
    boolean j() -> j
    boolean k() -> k
    void setAdActivity(com.google.ads.AdActivity) -> a
    void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> loadDataWithBaseURL
    void loadUrl(java.lang.String) -> loadUrl
    void stopLoading() -> stopLoading
    void destroy() -> destroy
    void setAdSize(com.google.ads.AdSize) -> a
    void onMeasure(int,int) -> onMeasure
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setCustomClose(boolean) -> c
    void setIsExpandedMraid(boolean) -> d
    void a(boolean) -> e
com.google.ads.internal.AdWebView$1 -> com.google.ads.b.f:
    com.google.ads.internal.AdWebView a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.google.ads.internal.AdWebView$2 -> com.google.ads.b.g:
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.ads.internal.a -> com.google.ads.b.h:
    com.google.ads.internal.a e -> e
    com.google.ads.util.f a -> a
    java.util.Map b -> b
    java.util.Map c -> c
    java.util.Map d -> d
    void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView) -> a
    boolean a(android.net.Uri) -> a
    boolean b(android.net.Uri) -> b
    boolean c(android.net.Uri) -> c
    void a(android.webkit.WebView,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,java.util.Map) -> a
    void a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
    com.google.ads.internal.a a() -> a
com.google.ads.internal.a$1 -> com.google.ads.b.i:
com.google.ads.internal.a$2 -> com.google.ads.b.j:
    java.lang.Object b() -> a
com.google.ads.internal.a$3 -> com.google.ads.b.k:
com.google.ads.internal.a$4 -> com.google.ads.b.l:
com.google.ads.internal.b -> com.google.ads.b.m:
    boolean a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
com.google.ads.internal.c -> com.google.ads.b.n:
    java.lang.String b -> a
    java.lang.String c -> b
    java.lang.String d -> c
    java.lang.String e -> d
    boolean f -> e
    com.google.ads.internal.f g -> f
    com.google.ads.AdRequest h -> g
    android.webkit.WebView i -> h
    com.google.ads.l j -> i
    java.lang.String k -> j
    java.lang.String l -> k
    java.util.LinkedList m -> l
    java.lang.String n -> m
    com.google.ads.AdSize o -> n
    boolean p -> o
    boolean q -> p
    boolean r -> q
    com.google.ads.AdRequest$ErrorCode s -> r
    boolean t -> s
    int u -> t
    java.lang.Thread v -> u
    boolean w -> v
    com.google.ads.internal.c$d x -> w
    boolean a -> x
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void a(com.google.ads.AdRequest) -> a
    void run() -> run
    void a(java.lang.String,com.google.ads.c,com.google.ads.d) -> a
    java.lang.String a(java.util.Map,android.app.Activity) -> a
    java.lang.String d() -> b
    java.lang.String g() -> c
    java.lang.String h() -> d
    void a(com.google.ads.AdRequest$ErrorCode,boolean) -> a
    void b(boolean) -> b
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String) -> a
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void a(com.google.ads.AdSize) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void c() -> a
    void c(boolean) -> c
    void a(int) -> a
    void d(boolean) -> d
    void a(com.google.ads.internal.c$d) -> a
    void e(boolean) -> e
    boolean a(com.google.ads.internal.c) -> a
    com.google.ads.l b(com.google.ads.internal.c) -> b
    java.lang.String c(com.google.ads.internal.c) -> c
    android.webkit.WebView d(com.google.ads.internal.c) -> d
    java.lang.String e(com.google.ads.internal.c) -> e
    com.google.ads.AdSize f(com.google.ads.internal.c) -> f
com.google.ads.internal.c$1 -> com.google.ads.b.o:
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.c$2 -> com.google.ads.b.p:
    com.google.ads.c a -> a
    com.google.ads.internal.c b -> b
    void run() -> run
com.google.ads.internal.c$3 -> com.google.ads.b.q:
    int[] a -> a
com.google.ads.internal.c$a -> com.google.ads.b.r:
    com.google.ads.internal.d a -> a
    android.webkit.WebView b -> b
    com.google.ads.internal.f c -> c
    com.google.ads.AdRequest$ErrorCode d -> d
    boolean e -> e
    void run() -> run
com.google.ads.internal.c$b -> com.google.ads.b.s:
com.google.ads.internal.c$c -> com.google.ads.b.t:
    java.lang.String b -> a
    java.lang.String c -> b
    android.webkit.WebView d -> c
    com.google.ads.internal.c a -> d
    void run() -> run
com.google.ads.internal.c$d -> com.google.ads.b.u:
    com.google.ads.internal.c$d a -> a
    com.google.ads.internal.c$d b -> b
    com.google.ads.internal.c$d c -> c
    com.google.ads.internal.c$d d -> d
    java.lang.String e -> e
    com.google.ads.internal.c$d[] f -> f
    com.google.ads.internal.c$d[] values() -> a
com.google.ads.internal.c$e -> com.google.ads.b.v:
    com.google.ads.internal.d b -> a
    android.webkit.WebView c -> b
    java.util.LinkedList d -> c
    int e -> d
    boolean f -> e
    java.lang.String g -> f
    com.google.ads.AdSize h -> g
    com.google.ads.internal.c a -> h
    void run() -> run
com.google.ads.internal.d -> com.google.ads.b.w:
    java.lang.Object a -> a
    com.google.ads.n b -> b
    com.google.ads.internal.c c -> c
    com.google.ads.AdRequest d -> d
    com.google.ads.internal.g e -> e
    com.google.ads.internal.AdWebView f -> f
    com.google.ads.internal.i g -> g
    boolean h -> h
    long i -> i
    boolean j -> j
    boolean l -> k
    boolean m -> l
    boolean n -> m
    android.content.SharedPreferences o -> n
    long p -> o
    com.google.ads.af q -> p
    boolean r -> q
    java.util.LinkedList s -> r
    java.util.LinkedList t -> s
    int u -> t
    com.google.ads.d w -> u
    com.google.ads.e x -> v
    java.lang.String z -> w
    java.lang.String A -> x
    void a() -> a
    void a(java.lang.String) -> a
    java.lang.String c() -> b
    java.lang.String d() -> c
    void e() -> d
    void f() -> e
    void g() -> f
    com.google.ads.n i() -> g
    com.google.ads.d j() -> h
    com.google.ads.internal.c k() -> i
    com.google.ads.internal.AdWebView l() -> j
    com.google.ads.internal.i m() -> k
    com.google.ads.internal.g n() -> l
    void a(int) -> a
    int o() -> m
    long p() -> n
    boolean q() -> w
    boolean r() -> o
    boolean t() -> p
    void a(com.google.ads.AdRequest) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void a(com.google.ads.c) -> a
    void a(android.view.View,com.google.ads.h,com.google.ads.f,boolean) -> a
    void b(com.google.ads.c) -> b
    void u() -> q
    void v() -> r
    void w() -> s
    void a(java.lang.String,java.lang.String) -> a
    void x() -> t
    void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String) -> a
    void y() -> x
    void z() -> u
    void a(long) -> a
    void a(boolean) -> a
    void a(android.view.View) -> a
    void a(float) -> a
    void b(long) -> b
    void C() -> y
    void D() -> v
    void b(java.lang.String) -> b
    void a(java.util.LinkedList) -> a
    void b(boolean) -> b
    void a$68797ecb(boolean,int,int,int,int) -> a
    void a(int,int,int,int) -> a
com.google.ads.internal.e -> com.google.ads.b.x:
    java.lang.String a -> a
    java.util.HashMap b -> b
    android.os.Bundle a() -> a
    java.lang.String b() -> b
    java.util.HashMap c() -> c
com.google.ads.internal.f -> com.google.ads.b.y:
    com.google.ads.l a -> a
    com.google.ads.internal.f$a b -> b
    boolean c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.Thread f -> f
    void a() -> a
    void a(java.net.HttpURLConnection) -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void run() -> run
com.google.ads.internal.f$a -> com.google.ads.b.z:
    java.net.HttpURLConnection a(java.net.URL) -> a
com.google.ads.internal.g -> com.google.ads.b.A:
    java.util.LinkedList a -> a
    long b -> b
    long c -> c
    long d -> d
    java.util.LinkedList e -> e
    long f -> f
    long g -> g
    long h -> h
    long i -> i
    long j -> j
    boolean k -> k
    boolean l -> l
    java.lang.String m -> m
    long n -> n
    java.util.LinkedList o -> o
    java.util.LinkedList p -> p
    void a() -> a
    void b() -> b
    void c() -> c
    void a(com.google.ads.g$a) -> a
    java.lang.String d() -> d
    java.lang.String e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    long j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    long m() -> m
    long n() -> n
    long o() -> o
    long p() -> p
    void q() -> q
    void r() -> r
    long s() -> s
    void t() -> t
    void u() -> u
    long v() -> v
    void w() -> w
    void x() -> x
    boolean y() -> y
    void z() -> z
    boolean A() -> A
    void B() -> B
    void C() -> C
    java.lang.String D() -> D
    void a(java.lang.String) -> a
    long E() -> E
com.google.ads.internal.h -> com.google.ads.b.B:
    com.google.ads.AdSize b -> b
    boolean c -> c
    boolean d -> d
    com.google.ads.internal.h a -> a
    com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context) -> a
    com.google.ads.internal.h a(com.google.ads.AdSize) -> a
    boolean a() -> a
    boolean b() -> b
    com.google.ads.AdSize c() -> c
    void b(com.google.ads.AdSize) -> b
    void a(boolean) -> a
com.google.ads.internal.i -> com.google.ads.b.C:
    com.google.ads.internal.a c -> c
    com.google.ads.internal.d a -> a
    java.util.Map d -> d
    boolean b -> b
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    boolean a() -> a
com.google.ads.internal.j -> com.google.ads.b.D:
    java.lang.String a -> a
    android.content.Context b -> b
    void run() -> run
com.google.ads.internal.j$a -> com.google.ads.b.E:
    java.lang.String a -> a
    org.json.JSONObject a() -> a
com.google.ads.internal.k -> com.google.ads.b.F:
    byte[] a -> a
    android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d) -> a
com.google.ads.internal.k$a -> com.google.ads.b.G:
    android.gesture.GestureStore a -> a
    android.app.Activity b -> b
    com.google.ads.internal.d c -> c
    void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture) -> onGesturePerformed
    com.google.ads.internal.d a(com.google.ads.internal.k$a) -> a
    android.app.Activity b(com.google.ads.internal.k$a) -> b
com.google.ads.internal.k$a$1 -> com.google.ads.b.H:
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.internal.k$a$2 -> com.google.ads.b.I:
    com.google.ads.internal.k$a a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.internal.k$a$3 -> com.google.ads.b.J:
    java.lang.String a -> a
    com.google.ads.internal.k$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.j -> com.google.ads.af:
com.google.ads.k -> com.google.ads.ag:
com.google.ads.l -> com.google.ads.ah:
    com.google.ads.util.i$b a -> a
    com.google.ads.util.i$c b -> b
    com.google.ads.util.i$c c -> c
com.google.ads.m -> com.google.ads.ai:
    com.google.ads.m c -> c
    com.google.ads.util.i$b a -> a
    com.google.ads.util.i$b b -> b
    com.google.ads.m a() -> a
com.google.ads.m$a -> com.google.ads.aj:
    com.google.ads.util.i$c a -> a
    com.google.ads.util.i$c b -> b
    com.google.ads.util.i$c c -> c
    com.google.ads.util.i$c d -> d
    com.google.ads.util.i$c e -> e
    com.google.ads.util.i$c f -> f
    com.google.ads.util.i$c g -> g
    com.google.ads.util.i$c h -> h
    com.google.ads.util.i$c i -> i
    com.google.ads.util.i$c j -> j
    com.google.ads.util.i$c k -> k
    com.google.ads.util.i$c l -> l
    com.google.ads.util.i$c m -> m
    com.google.ads.util.i$c n -> n
    com.google.ads.util.i$c o -> o
com.google.ads.mediation.MediationAdRequest -> com.google.ads.c.a:
com.google.ads.mediation.MediationAdapter -> com.google.ads.c.b:
    void destroy() -> a
    java.lang.Class getAdditionalParametersType() -> b
    java.lang.Class getServerParametersType() -> c
com.google.ads.mediation.MediationBannerAdapter -> com.google.ads.c.c:
    void requestBannerAd$3a67d0d9() -> d
com.google.ads.mediation.MediationInterstitialAdapter -> com.google.ads.c.d:
    void requestInterstitialAd$732d5d79() -> d
com.google.ads.mediation.MediationServerParameters -> com.google.ads.c.e:
    void load(java.util.Map) -> a
com.google.ads.mediation.MediationServerParameters$MappingException -> com.google.ads.c.f:
com.google.ads.mediation.MediationServerParameters$Parameter -> com.google.ads.c.g:
    java.lang.String name() -> a
    boolean required() -> b
com.google.ads.mediation.admob.AdMobAdapterExtras -> com.google.ads.c.a.a:
    java.util.Map b -> a
    java.util.Map getExtras() -> c
    com.google.ads.mediation.admob.AdMobAdapterExtras clearExtras() -> b
com.google.ads.n -> com.google.ads.ak:
    com.google.ads.util.i$b a -> a
    com.google.ads.util.i$b b -> b
    com.google.ads.util.i$d c -> c
    com.google.ads.util.i$b d -> d
    com.google.ads.util.i$b e -> e
    com.google.ads.util.i$b f -> f
    com.google.ads.util.i$b g -> g
    com.google.ads.util.i$b h -> h
    com.google.ads.util.i$b i -> i
    com.google.ads.util.i$b j -> j
    com.google.ads.util.i$b l -> k
    com.google.ads.util.i$b m -> l
    com.google.ads.util.i$c n -> m
    com.google.ads.util.i$c o -> n
    com.google.ads.util.i$c p -> o
    com.google.ads.util.i$c q -> p
    com.google.ads.util.i$c r -> q
    com.google.ads.util.i$c s -> r
    boolean a() -> a
    boolean b() -> b
com.google.ads.o -> com.google.ads.al:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.p -> com.google.ads.am:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.q -> com.google.ads.an:
    com.google.ads.internal.a a -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.r -> com.google.ads.ao:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.s -> com.google.ads.ap:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.searchads.SearchAdRequest -> com.google.ads.d.a:
    java.util.Map getRequestMap(android.content.Context) -> a
    java.lang.String a(int) -> a
com.google.ads.t -> com.google.ads.aq:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.u -> com.google.ads.ar:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.util.AdUtil -> com.google.ads.e.a:
    int a -> a
    java.lang.Boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.media.AudioManager f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String i -> i
    boolean a(android.content.Intent,android.content.Context) -> a
    java.lang.String a(java.lang.Readable) -> a
    int a(java.lang.String) -> b
    java.lang.String a(android.content.Context) -> a
    int a() -> a
    int b() -> b
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    boolean b(android.content.Context) -> b
    boolean a(int,int,java.lang.String) -> a
    boolean c(android.content.Context) -> c
    boolean c() -> c
    boolean a(android.net.Uri) -> a
    java.lang.String b(java.lang.String) -> a
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    com.google.ads.util.AdUtil$a g(android.content.Context) -> g
    android.util.DisplayMetrics a(android.app.Activity) -> a
    java.util.HashMap b(android.net.Uri) -> b
    boolean d() -> d
    void a(boolean) -> a
    void h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    void a(android.webkit.WebView) -> a
    void a(java.net.HttpURLConnection,android.content.Context) -> a
    java.lang.String a(java.util.Map) -> a
    org.json.JSONObject b(java.util.Map) -> b
    org.json.JSONArray a(java.util.Set) -> a
    int a(android.content.Context,int) -> a
com.google.ads.util.AdUtil$UserActivityReceiver -> com.google.ads.e.b:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.ads.util.AdUtil$a -> com.google.ads.e.c:
    com.google.ads.util.AdUtil$a a -> e
    com.google.ads.util.AdUtil$a b -> a
    com.google.ads.util.AdUtil$a c -> f
    com.google.ads.util.AdUtil$a d -> b
    com.google.ads.util.AdUtil$a e -> c
    com.google.ads.util.AdUtil$a f -> d
com.google.ads.util.IcsUtil$IcsAdWebView -> com.google.ads.e.d:
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScrollVertically(int) -> canScrollVertically
com.google.ads.util.IcsUtil$a -> com.google.ads.e.e:
    void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
com.google.ads.util.a -> com.google.ads.e.f:
    boolean a -> a
    void a(boolean,java.lang.String) -> a
    void b(boolean) -> a
    void b(boolean,java.lang.String) -> b
    void b(java.lang.Object) -> a
    void a(java.lang.Object,java.lang.Object) -> a
    void a(java.lang.String) -> a
    void c(boolean,java.lang.String) -> c
com.google.ads.util.a$a -> com.google.ads.e.g:
com.google.ads.util.b -> com.google.ads.e.h:
    com.google.ads.AdListener a$7100a53 -> a
    int b -> b
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,java.lang.Throwable) -> b
    void c(java.lang.String) -> c
    void c(java.lang.String,java.lang.Throwable) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void d(java.lang.String,java.lang.Throwable) -> d
    boolean a(java.lang.String,int) -> a
com.google.ads.util.b$a -> com.google.ads.e.i:
    com.google.ads.util.b$a a -> a
    com.google.ads.util.b$a b -> b
    com.google.ads.util.b$a c -> c
    com.google.ads.util.b$a d -> d
    com.google.ads.util.b$a e -> e
com.google.ads.util.c -> com.google.ads.e.j:
    byte[] a(java.lang.String) -> a
com.google.ads.util.c$a -> com.google.ads.e.k:
    byte[] a -> a
    int b -> b
com.google.ads.util.c$b -> com.google.ads.e.l:
    int[] c -> c
    int[] d -> d
    int e -> e
    int f -> f
    int[] g -> g
    boolean a(byte[],int,int,boolean) -> a
com.google.ads.util.d -> com.google.ads.e.m:
    java.lang.String a -> d
    java.lang.String b -> e
    java.lang.String c -> f
    com.google.ads.util.d d -> a
    com.google.ads.util.d e -> b
    com.google.ads.util.d f -> c
    boolean equals(java.lang.Object) -> equals
    boolean a(java.lang.String,java.lang.String) -> a
    int hashCode() -> hashCode
com.google.ads.util.f -> com.google.ads.e.n:
    java.lang.Object b() -> a
com.google.ads.util.g -> com.google.ads.e.o:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.HashMap e -> e
    void a(android.webkit.WebSettings,com.google.ads.n) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.util.List c() -> c
    java.util.List d() -> d
    java.util.HashMap e() -> e
com.google.ads.util.g$1 -> com.google.ads.e.p:
    int[] a -> a
com.google.ads.util.g$a -> com.google.ads.e.q:
    com.google.ads.n a -> a
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    boolean a(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsResult,android.webkit.JsPromptResult,boolean) -> a
com.google.ads.util.g$a$1 -> com.google.ads.e.r:
    android.webkit.JsResult a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.ads.util.g$a$2 -> com.google.ads.e.s:
    android.webkit.JsResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$3 -> com.google.ads.e.t:
    android.webkit.JsResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$4 -> com.google.ads.e.u:
    android.webkit.JsPromptResult a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.ads.util.g$a$5 -> com.google.ads.e.v:
    android.webkit.JsPromptResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$6 -> com.google.ads.e.w:
    android.webkit.JsPromptResult a -> a
    android.widget.EditText b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$b -> com.google.ads.e.x:
    android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
    android.webkit.WebResourceResponse a(java.lang.String,android.content.Context) -> a
com.google.ads.util.i -> com.google.ads.e.y:
    java.lang.Object a -> a
    int b -> b
    java.util.HashMap c -> c
    int t -> d
    java.util.ArrayList d -> e
    void finalize() -> finalize
    java.lang.String toString() -> toString
    void a(com.google.ads.util.i,com.google.ads.util.i$a) -> a
com.google.ads.util.i$a -> com.google.ads.e.z:
    java.lang.Object a -> a
    java.lang.String b -> b
    com.google.ads.util.i c -> c
    java.lang.String toString() -> toString
com.google.ads.util.i$b -> com.google.ads.e.A:
    java.lang.Object a() -> a
    java.lang.String toString() -> toString
com.google.ads.util.i$c -> com.google.ads.e.B:
    boolean e -> c
    com.google.ads.util.i d -> d
    java.lang.Object a() -> a
    void a(java.lang.Object) -> a
    java.lang.String toString() -> toString
com.google.ads.util.i$d -> com.google.ads.e.C:
    com.google.ads.util.i d -> c
    java.lang.Object a() -> a
    java.lang.String toString() -> toString
com.google.ads.v -> com.google.ads.as:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.w -> com.google.ads.at:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.x -> com.google.ads.au:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
    void a(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> a
    void b(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> b
    void c(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> c
com.google.ads.y -> com.google.ads.av:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.z -> com.google.ads.aw:
    com.google.ads.AdActivity$StaticMethodWrapper a -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.analytics.tracking.android.AdHitIdGenerator -> com.google.a.a.a.a:
    boolean mAdMobSdkInstalled -> a
    int getAdHitId() -> a
    int version() -> b
    java.lang.String encode(java.lang.String) -> a
com.google.analytics.tracking.android.AdMobInfo -> com.google.a.a.a.b:
    com.google.analytics.tracking.android.AdMobInfo INSTANCE -> a
    int mAdHitId -> b
    java.util.Random mRandom -> c
    com.google.analytics.tracking.android.AdMobInfo getInstance() -> a
    int generateAdHitId() -> b
com.google.analytics.tracking.android.AnalyticsClient -> com.google.a.a.a.c:
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
    void connect() -> b
    void disconnect() -> c
com.google.analytics.tracking.android.AnalyticsGmsCoreClient -> com.google.a.a.a.d:
    android.content.ServiceConnection mConnection -> a
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener mOnConnectedListener -> b
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener mOnConnectionFailedListener -> c
    android.content.Context mContext -> d
    com.google.android.gms.analytics.internal.IAnalyticsService mService -> e
    void connect() -> b
    void disconnect() -> c
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
    com.google.android.gms.analytics.internal.IAnalyticsService getService() -> d
    com.google.android.gms.analytics.internal.IAnalyticsService access$002(com.google.analytics.tracking.android.AnalyticsGmsCoreClient,com.google.android.gms.analytics.internal.IAnalyticsService) -> a
    void access$100(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> a
    android.content.Context access$200(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> b
    android.content.ServiceConnection access$302(com.google.analytics.tracking.android.AnalyticsGmsCoreClient,android.content.ServiceConnection) -> a
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener access$400(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> c
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener access$500(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> d
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$AnalyticsServiceConnection -> com.google.a.a.a.e:
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener -> com.google.a.a.a.f:
    void onConnected() -> a
    void onDisconnected() -> b
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener -> com.google.a.a.a.g:
    void onConnectionFailed$10b55c15(int) -> a
com.google.analytics.tracking.android.AnalyticsStore -> com.google.a.a.a.h:
    void putHit(java.util.Map,long,java.lang.String,java.util.Collection) -> a
    void clearHits(long) -> a
    void dispatch() -> a
com.google.analytics.tracking.android.AnalyticsStoreStateListener -> com.google.a.a.a.i:
    com.google.analytics.tracking.android.GAServiceManager this$0 -> a
    void reportStoreIsEmpty(boolean) -> a
com.google.analytics.tracking.android.AnalyticsThread -> com.google.a.a.a.j:
    void sendHit(java.util.Map) -> a
    void dispatch() -> a
    void requestAppOptOut(com.google.analytics.tracking.android.GoogleAnalytics$AppOptOutCallback) -> a
    void requestClientId(com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback) -> a
    java.util.concurrent.LinkedBlockingQueue getQueue() -> b
    java.lang.Thread getThread() -> c
com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback -> com.google.a.a.a.k:
    com.google.analytics.tracking.android.GoogleAnalytics this$0 -> a
    void reportClientId(java.lang.String) -> a
com.google.analytics.tracking.android.Clock -> com.google.a.a.a.l:
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.Dispatcher -> com.google.a.a.a.m:
    int dispatchHits(java.util.List) -> a
    boolean okToDispatch() -> a
com.google.analytics.tracking.android.EasyTracker -> com.google.a.a.a.n:
    com.google.analytics.tracking.android.EasyTracker sInstance -> a
    boolean mIsEnabled -> b
    java.lang.String mTrackingId -> c
    java.lang.String mAppName -> d
    java.lang.String mAppVersion -> e
    int mDispatchPeriod -> f
    boolean mDebug -> g
    java.lang.Double mSampleRate -> h
    boolean mIsAnonymizeIpEnabled -> i
    boolean mIsReportUncaughtExceptionsEnabled -> j
    boolean mIsAutoActivityTracking -> k
    int mActivitiesActive -> l
    long mSessionTimeout -> m
    long mLastOnStopTime -> n
    android.content.Context mContext -> o
    java.util.Map mActivityNameMap -> p
    com.google.analytics.tracking.android.Tracker mTracker -> q
    com.google.analytics.tracking.android.ParameterLoader mParameterFetcher -> r
    com.google.analytics.tracking.android.GoogleAnalytics mAnalyticsInstance -> s
    com.google.analytics.tracking.android.ServiceManager mServiceManager -> t
    com.google.analytics.tracking.android.Clock mClock -> u
    java.util.Timer mTimer -> v
    java.util.TimerTask mTimerTask -> w
    boolean mIsInForeground -> x
    com.google.analytics.tracking.android.EasyTracker getInstance() -> a
    void setContext(android.content.Context) -> a
    void activityStart(android.app.Activity) -> a
    void activityStop(android.app.Activity) -> b
    void clearExistingTimer() -> b
    boolean access$102(com.google.analytics.tracking.android.EasyTracker,boolean) -> a
com.google.analytics.tracking.android.EasyTracker$1 -> com.google.a.a.a.o:
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.EasyTracker$NoopTracker -> com.google.a.a.a.p:
    void setStartSession(boolean) -> a
    void setAppName(java.lang.String) -> a
    void setAppVersion(java.lang.String) -> b
    void sendView(java.lang.String) -> c
    void sendException(java.lang.String,boolean) -> a
    void setAnonymizeIp(boolean) -> b
    void setSampleRate(double) -> a
    java.util.Map constructException(java.lang.String,boolean) -> b
com.google.analytics.tracking.android.EasyTracker$NotInForegroundTimerTask -> com.google.a.a.a.q:
    com.google.analytics.tracking.android.EasyTracker this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.ExceptionParser -> com.google.a.a.a.r:
    java.lang.String getDescription(java.lang.String,java.lang.Throwable) -> a
com.google.analytics.tracking.android.ExceptionReporter -> com.google.a.a.a.s:
    java.lang.Thread$UncaughtExceptionHandler mOriginalHandler -> a
    com.google.analytics.tracking.android.Tracker mTracker -> b
    com.google.analytics.tracking.android.ServiceManager mServiceManager -> c
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.google.analytics.tracking.android.GANetworkReceiver -> com.google.a.a.a.t:
    com.google.analytics.tracking.android.ServiceManager mManager -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.analytics.tracking.android.GAServiceManager -> com.google.a.a.a.u:
    java.lang.Object MSG_OBJECT -> a
    android.content.Context ctx -> b
    com.google.analytics.tracking.android.AnalyticsStore store -> c
    com.google.analytics.tracking.android.AnalyticsThread thread -> d
    int dispatchPeriodInSeconds -> e
    boolean pendingDispatch -> f
    boolean connected -> g
    boolean listenForNetwork -> h
    com.google.analytics.tracking.android.AnalyticsStoreStateListener listener -> i
    android.os.Handler handler -> j
    com.google.analytics.tracking.android.GANetworkReceiver networkReceiver -> k
    boolean storeIsEmpty -> l
    com.google.analytics.tracking.android.GAServiceManager instance -> m
    com.google.analytics.tracking.android.GAServiceManager getInstance() -> a
    void initialize(android.content.Context,com.google.analytics.tracking.android.AnalyticsThread) -> a
    com.google.analytics.tracking.android.AnalyticsStore getStore() -> b
    void dispatch() -> c
    void setDispatchPeriod(int) -> a
    void updatePowerSaveMode(boolean,boolean) -> a
    void updateConnectivityStatus(boolean) -> a
    boolean access$000(com.google.analytics.tracking.android.GAServiceManager) -> a
    java.lang.Object access$100() -> d
    int access$200(com.google.analytics.tracking.android.GAServiceManager) -> b
    boolean access$300(com.google.analytics.tracking.android.GAServiceManager) -> c
    android.os.Handler access$400(com.google.analytics.tracking.android.GAServiceManager) -> d
com.google.analytics.tracking.android.GAServiceManager$2 -> com.google.a.a.a.v:
    com.google.analytics.tracking.android.GAServiceManager this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.google.analytics.tracking.android.GAServiceProxy -> com.google.a.a.a.w:
    long lastRequestTime -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState state -> b
    com.google.analytics.tracking.android.AnalyticsClient client -> c
    com.google.analytics.tracking.android.AnalyticsStore store -> d
    com.google.analytics.tracking.android.AnalyticsStore testStore -> e
    com.google.analytics.tracking.android.AnalyticsThread thread -> f
    android.content.Context ctx -> g
    java.util.Queue queue -> h
    int connectTries -> i
    java.util.Timer reConnectTimer -> j
    java.util.Timer failedConnectTimer -> k
    java.util.Timer disconnectCheckTimer -> l
    boolean pendingDispatch -> m
    boolean pendingClearHits -> n
    com.google.analytics.tracking.android.Clock clock -> o
    long idleTimeout -> p
    void putHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void dispatch() -> c
    java.util.Timer cancelTimer(java.util.Timer) -> a
    void clearAllTimers() -> e
    void createService() -> d
    void sendQueue() -> f
    void dispatchToStore() -> g
    void useStore() -> h
    void connectToService() -> i
    void disconnectFromService() -> j
    void onConnected() -> a
    void onDisconnected() -> b
    void onConnectionFailed$10b55c15(int) -> a
    void fireReconnectAttempt() -> k
    void access$000(com.google.analytics.tracking.android.GAServiceProxy) -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState access$400(com.google.analytics.tracking.android.GAServiceProxy) -> b
    void access$500(com.google.analytics.tracking.android.GAServiceProxy) -> c
    void access$600(com.google.analytics.tracking.android.GAServiceProxy) -> d
    java.util.Queue access$700(com.google.analytics.tracking.android.GAServiceProxy) -> e
    long access$800(com.google.analytics.tracking.android.GAServiceProxy) -> f
    long access$900(com.google.analytics.tracking.android.GAServiceProxy) -> g
    com.google.analytics.tracking.android.Clock access$1000(com.google.analytics.tracking.android.GAServiceProxy) -> h
    void access$1100(com.google.analytics.tracking.android.GAServiceProxy) -> i
    java.util.Timer access$1200(com.google.analytics.tracking.android.GAServiceProxy) -> j
com.google.analytics.tracking.android.GAServiceProxy$1 -> com.google.a.a.a.x:
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.GAServiceProxy$2 -> com.google.a.a.a.y:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$3 -> com.google.a.a.a.z:
    int[] $SwitchMap$com$google$analytics$tracking$android$GAServiceProxy$ConnectState -> a
com.google.analytics.tracking.android.GAServiceProxy$ConnectState -> com.google.a.a.a.A:
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTING -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTED_SERVICE -> b
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTED_LOCAL -> c
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState BLOCKED -> g
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState PENDING_CONNECTION -> d
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState PENDING_DISCONNECT -> e
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState DISCONNECTED -> f
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState[] $VALUES -> h
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState[] values() -> a
com.google.analytics.tracking.android.GAServiceProxy$DisconnectCheckTask -> com.google.a.a.a.B:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$FailedConnectTask -> com.google.a.a.a.C:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$HitParams -> com.google.a.a.a.D:
    java.util.Map wireFormatParams -> a
    long hitTimeInMilliseconds -> b
    java.lang.String path -> c
    java.util.List commands -> d
    java.util.Map getWireFormatParams() -> a
    long getHitTimeInMilliseconds() -> b
    java.lang.String getPath() -> c
    java.util.List getCommands() -> d
com.google.analytics.tracking.android.GAServiceProxy$ReconnectTask -> com.google.a.a.a.E:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAThread -> com.google.a.a.a.F:
    java.util.concurrent.LinkedBlockingQueue queue -> a
    boolean mDisabled -> b
    boolean mClosed -> c
    boolean mAppOptOut -> d
    java.util.List mCommands -> e
    com.google.analytics.tracking.android.MetaModel mMetaModel -> f
    java.lang.String mInstallCampaign -> g
    java.lang.String mClientId -> h
    com.google.analytics.tracking.android.GAThread sInstance -> i
    com.google.analytics.tracking.android.ServiceProxy mServiceProxy -> j
    android.content.Context mContext -> k
    com.google.analytics.tracking.android.GAThread getInstance(android.content.Context) -> a
    void sendHit(java.util.Map) -> a
    void putIfAbsent(java.util.Map,java.lang.String,java.lang.String) -> a
    void dispatch() -> a
    void requestAppOptOut(com.google.analytics.tracking.android.GoogleAnalytics$AppOptOutCallback) -> a
    void requestClientId(com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback) -> a
    void queueToThread(java.lang.Runnable) -> a
    boolean storeClientId(java.lang.String) -> a
    java.lang.String initializeClientId() -> d
    java.lang.String getAndClearCampaign(android.content.Context) -> b
    java.lang.String printStackTrace(java.lang.Throwable) -> a
    void run() -> run
    java.util.concurrent.LinkedBlockingQueue getQueue() -> b
    java.lang.Thread getThread() -> c
    java.lang.String access$000(com.google.analytics.tracking.android.GAThread) -> a
    boolean access$100(com.google.analytics.tracking.android.GAThread) -> b
    boolean access$200(com.google.analytics.tracking.android.GAThread,java.util.Map) -> a
    java.lang.String access$300(com.google.analytics.tracking.android.GAThread) -> c
    java.lang.String access$302(com.google.analytics.tracking.android.GAThread,java.lang.String) -> a
    void access$400(com.google.analytics.tracking.android.GAThread,java.util.Map) -> b
    void access$500(com.google.analytics.tracking.android.GAThread,java.util.Map) -> c
    void access$600(com.google.analytics.tracking.android.GAThread,java.util.Map) -> d
    com.google.analytics.tracking.android.MetaModel access$700(com.google.analytics.tracking.android.GAThread) -> d
    java.lang.String access$800(com.google.analytics.tracking.android.GAThread,java.util.Map) -> e
    java.util.List access$900(com.google.analytics.tracking.android.GAThread) -> e
    com.google.analytics.tracking.android.ServiceProxy access$1000(com.google.analytics.tracking.android.GAThread) -> f
com.google.analytics.tracking.android.GAThread$1 -> com.google.a.a.a.G:
    java.util.Map val$hitCopy -> a
    long val$hitTime -> b
    com.google.analytics.tracking.android.GAThread this$0 -> c
    void run() -> run
com.google.analytics.tracking.android.GAThread$2 -> com.google.a.a.a.H:
    com.google.analytics.tracking.android.GAThread this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAThread$4 -> com.google.a.a.a.I:
    com.google.analytics.tracking.android.GoogleAnalytics$AppOptOutCallback val$callback -> a
    com.google.analytics.tracking.android.GAThread this$0 -> b
    void run() -> run
com.google.analytics.tracking.android.GAThread$5 -> com.google.a.a.a.J:
    com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback val$callback -> a
    com.google.analytics.tracking.android.GAThread this$0 -> b
    void run() -> run
com.google.analytics.tracking.android.GAUsage -> com.google.a.a.a.K:
    java.util.SortedSet mUsedFields -> a
    java.lang.StringBuilder mSequence -> b
    boolean mDisableUsage -> c
    com.google.analytics.tracking.android.GAUsage INSTANCE -> d
    com.google.analytics.tracking.android.GAUsage getInstance() -> a
    void setDisableUsage(boolean) -> a
    void setUsage(com.google.analytics.tracking.android.GAUsage$Field) -> a
    java.lang.String getAndClearUsage() -> b
    java.lang.String getAndClearSequence() -> c
com.google.analytics.tracking.android.GAUsage$Field -> com.google.a.a.a.L:
    com.google.analytics.tracking.android.GAUsage$Field TRACK_VIEW -> m
    com.google.analytics.tracking.android.GAUsage$Field TRACK_VIEW_WITH_APPSCREEN -> a
    com.google.analytics.tracking.android.GAUsage$Field TRACK_EVENT -> n
    com.google.analytics.tracking.android.GAUsage$Field TRACK_TRANSACTION -> o
    com.google.analytics.tracking.android.GAUsage$Field TRACK_EXCEPTION_WITH_DESCRIPTION -> b
    com.google.analytics.tracking.android.GAUsage$Field TRACK_EXCEPTION_WITH_THROWABLE -> p
    com.google.analytics.tracking.android.GAUsage$Field BLANK_06 -> q
    com.google.analytics.tracking.android.GAUsage$Field TRACK_TIMING -> r
    com.google.analytics.tracking.android.GAUsage$Field TRACK_SOCIAL -> s
    com.google.analytics.tracking.android.GAUsage$Field GET -> t
    com.google.analytics.tracking.android.GAUsage$Field SET -> u
    com.google.analytics.tracking.android.GAUsage$Field SEND -> v
    com.google.analytics.tracking.android.GAUsage$Field SET_START_SESSION -> c
    com.google.analytics.tracking.android.GAUsage$Field BLANK_13 -> w
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_NAME -> d
    com.google.analytics.tracking.android.GAUsage$Field BLANK_15 -> x
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_VERSION -> e
    com.google.analytics.tracking.android.GAUsage$Field BLANK_17 -> y
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_SCREEN -> z
    com.google.analytics.tracking.android.GAUsage$Field GET_TRACKING_ID -> A
    com.google.analytics.tracking.android.GAUsage$Field SET_ANONYMIZE_IP -> f
    com.google.analytics.tracking.android.GAUsage$Field GET_ANONYMIZE_IP -> B
    com.google.analytics.tracking.android.GAUsage$Field SET_SAMPLE_RATE -> g
    com.google.analytics.tracking.android.GAUsage$Field GET_SAMPLE_RATE -> C
    com.google.analytics.tracking.android.GAUsage$Field SET_USE_SECURE -> D
    com.google.analytics.tracking.android.GAUsage$Field GET_USE_SECURE -> E
    com.google.analytics.tracking.android.GAUsage$Field SET_REFERRER -> F
    com.google.analytics.tracking.android.GAUsage$Field SET_CAMPAIGN -> G
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_ID -> H
    com.google.analytics.tracking.android.GAUsage$Field GET_APP_ID -> I
    com.google.analytics.tracking.android.GAUsage$Field SET_EXCEPTION_PARSER -> J
    com.google.analytics.tracking.android.GAUsage$Field GET_EXCEPTION_PARSER -> K
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_TRANSACTION -> L
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_EXCEPTION -> h
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_RAW_EXCEPTION -> M
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_TIMING -> N
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_SOCIAL -> O
    com.google.analytics.tracking.android.GAUsage$Field SET_DEBUG -> i
    com.google.analytics.tracking.android.GAUsage$Field GET_DEBUG -> P
    com.google.analytics.tracking.android.GAUsage$Field GET_TRACKER -> j
    com.google.analytics.tracking.android.GAUsage$Field GET_DEFAULT_TRACKER -> Q
    com.google.analytics.tracking.android.GAUsage$Field SET_DEFAULT_TRACKER -> R
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_OPT_OUT -> S
    com.google.analytics.tracking.android.GAUsage$Field REQUEST_APP_OPT_OUT -> T
    com.google.analytics.tracking.android.GAUsage$Field DISPATCH -> k
    com.google.analytics.tracking.android.GAUsage$Field SET_DISPATCH_PERIOD -> l
    com.google.analytics.tracking.android.GAUsage$Field BLANK_48 -> U
    com.google.analytics.tracking.android.GAUsage$Field REPORT_UNCAUGHT_EXCEPTIONS -> V
    com.google.analytics.tracking.android.GAUsage$Field SET_AUTO_ACTIVITY_TRACKING -> W
    com.google.analytics.tracking.android.GAUsage$Field SET_SESSION_TIMEOUT -> X
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_EVENT -> Y
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_ITEM -> Z
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_INSTALLER_ID -> aa
    com.google.analytics.tracking.android.GAUsage$Field GET_APP_INSTALLER_ID -> ab
com.google.analytics.tracking.android.GoogleAnalytics -> com.google.a.a.a.M:
    com.google.analytics.tracking.android.AnalyticsThread mThread -> a
    android.content.Context mContext -> b
    com.google.analytics.tracking.android.Tracker mDefaultTracker -> c
    com.google.analytics.tracking.android.AdHitIdGenerator mAdHitIdGenerator -> d
    java.lang.String mClientId -> e
    java.lang.Boolean mAppOptOut -> f
    java.util.Map mTrackers -> g
    com.google.analytics.tracking.android.GoogleAnalytics sInstance -> h
    com.google.analytics.tracking.android.GoogleAnalytics getInstance(android.content.Context) -> a
    void setDebug(boolean) -> a
    com.google.analytics.tracking.android.Tracker getTracker(java.lang.String) -> a
    void sendHit(java.util.Map) -> a
    java.lang.Boolean access$002(com.google.analytics.tracking.android.GoogleAnalytics,java.lang.Boolean) -> a
    java.lang.String access$102(com.google.analytics.tracking.android.GoogleAnalytics,java.lang.String) -> a
com.google.analytics.tracking.android.GoogleAnalytics$AppOptOutCallback -> com.google.a.a.a.N:
    com.google.analytics.tracking.android.GoogleAnalytics this$0 -> a
    void reportAppOptOut(boolean) -> a
com.google.analytics.tracking.android.Hit -> com.google.a.a.a.O:
    java.lang.String mHitString -> a
    long mHitId -> b
    long mHitTime -> c
    java.lang.String mHitUrl -> d
    java.lang.String getHitParams() -> a
    void setHitString(java.lang.String) -> a
    long getHitId() -> b
    long getHitTime() -> c
    java.lang.String getHitUrl() -> d
    void setHitUrl(java.lang.String) -> b
com.google.analytics.tracking.android.HttpClientFactory -> com.google.a.a.a.P:
    org.apache.http.client.HttpClient newInstance() -> a
com.google.analytics.tracking.android.Log -> com.google.a.a.a.Q:
    boolean sDebug -> a
    void setDebug(boolean) -> a
    boolean isDebugEnabled() -> a
    int dDebug(java.lang.String) -> a
    int e(java.lang.String) -> b
    int i(java.lang.String) -> c
    int iDebug(java.lang.String) -> d
    int vDebug(java.lang.String) -> e
    int w(java.lang.String) -> f
    int wDebug(java.lang.String) -> g
    java.lang.String formatMessage(java.lang.String) -> h
com.google.analytics.tracking.android.MetaModel -> com.google.a.a.a.R:
    java.util.Map mMetaInfos -> a
    com.google.analytics.tracking.android.MetaModel$MetaInfo getMetaInfo(java.lang.String) -> a
    void addField(java.lang.String,java.lang.String,java.lang.String,com.google.analytics.tracking.android.MetaModel$Formatter) -> a
com.google.analytics.tracking.android.MetaModel$Formatter -> com.google.a.a.a.S:
    java.lang.String format(java.lang.String) -> a
com.google.analytics.tracking.android.MetaModel$MetaInfo -> com.google.a.a.a.T:
    java.lang.String mUrlParam -> a
    java.lang.String mDefaultValue -> b
    com.google.analytics.tracking.android.MetaModel$Formatter mFormatter -> c
    java.lang.String getUrlParam(java.lang.String) -> a
    java.lang.String getDefaultValue() -> a
    com.google.analytics.tracking.android.MetaModel$Formatter getFormatter() -> b
com.google.analytics.tracking.android.MetaModelInitializer -> com.google.a.a.a.U:
    com.google.analytics.tracking.android.MetaModel$Formatter BOOLEAN_FORMATTER -> a
    com.google.analytics.tracking.android.MetaModel$Formatter UP_TO_TWO_DIGIT_FLOAT_FORMATTER -> b
    void set(com.google.analytics.tracking.android.MetaModel) -> a
com.google.analytics.tracking.android.MetaModelInitializer$1 -> com.google.a.a.a.V:
    java.lang.String format(java.lang.String) -> a
com.google.analytics.tracking.android.MetaModelInitializer$2 -> com.google.a.a.a.W:
    java.text.DecimalFormat mFloatFormat -> a
    java.lang.String format(java.lang.String) -> a
com.google.analytics.tracking.android.ParameterLoader -> com.google.a.a.a.X:
    android.content.Context mContext -> a
    java.lang.String getString(java.lang.String) -> a
    java.lang.Double getDoubleFromString(java.lang.String) -> b
    boolean getBoolean(java.lang.String) -> c
    int getInt(java.lang.String,int) -> a
    int getResourceIdForType(java.lang.String,java.lang.String) -> a
com.google.analytics.tracking.android.PersistentAnalyticsStore -> com.google.a.a.a.Y:
    java.lang.String CREATE_HITS_TABLE -> a
    com.google.analytics.tracking.android.PersistentAnalyticsStore$AnalyticsDatabaseHelper mDbHelper -> b
    com.google.analytics.tracking.android.Dispatcher mDispatcher -> c
    com.google.analytics.tracking.android.AnalyticsStoreStateListener mListener -> d
    android.content.Context mContext -> e
    java.lang.String mDatabaseName -> f
    long mLastDeleteStaleHitsTime -> g
    com.google.analytics.tracking.android.Clock mClock -> h
    void clearHits(long) -> a
    void putHit(java.util.Map,long,java.lang.String,java.util.Collection) -> a
    java.lang.String generateHitString(java.util.Map) -> a
    java.util.List peekHits(int) -> a
    void deleteHits(java.util.Collection) -> a
    int getNumStoredHits() -> c
    void dispatch() -> a
    android.database.sqlite.SQLiteDatabase getWritableDatabase(java.lang.String) -> a
    com.google.analytics.tracking.android.Clock access$000(com.google.analytics.tracking.android.PersistentAnalyticsStore) -> a
    java.lang.String access$100(com.google.analytics.tracking.android.PersistentAnalyticsStore) -> b
    android.content.Context access$200(com.google.analytics.tracking.android.PersistentAnalyticsStore) -> c
    java.lang.String access$300() -> b
com.google.analytics.tracking.android.PersistentAnalyticsStore$1 -> com.google.a.a.a.Z:
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.PersistentAnalyticsStore$AnalyticsDatabaseHelper -> com.google.a.a.a.aa:
    boolean mBadDatabase -> a
    long mLastDatabaseCheckTime -> b
    com.google.analytics.tracking.android.PersistentAnalyticsStore this$0 -> c
    boolean tablePresent(java.lang.String,android.database.sqlite.SQLiteDatabase) -> a
    android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.google.analytics.tracking.android.ServiceManager -> com.google.a.a.a.ab:
    void dispatch() -> c
    void setDispatchPeriod(int) -> a
    void updateConnectivityStatus(boolean) -> a
com.google.analytics.tracking.android.ServiceProxy -> com.google.a.a.a.ac:
    void putHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void dispatch() -> c
    void createService() -> d
com.google.analytics.tracking.android.SimpleNetworkDispatcher -> com.google.a.a.a.ad:
    java.lang.String userAgent -> a
    com.google.analytics.tracking.android.HttpClientFactory httpClientFactory -> b
    android.content.Context ctx -> c
    boolean okToDispatch() -> a
    int dispatchHits(java.util.List) -> a
    org.apache.http.HttpEntityEnclosingRequest buildRequest(java.lang.String,java.lang.String) -> a
    void logDebugInformation(boolean,org.apache.http.HttpEntityEnclosingRequest) -> a
    java.net.URL getUrl(com.google.analytics.tracking.android.Hit) -> a
com.google.analytics.tracking.android.StandardExceptionParser -> com.google.a.a.a.ae:
    java.util.TreeSet includedPackages -> a
    void setIncludedPackages(android.content.Context,java.util.Collection) -> a
    java.lang.Throwable getCause(java.lang.Throwable) -> a
    java.lang.String getDescription(java.lang.String,java.lang.Throwable) -> a
com.google.analytics.tracking.android.Tracker -> com.google.a.a.a.af:
    com.google.analytics.tracking.android.TrackerHandler mHandler -> a
    com.google.analytics.tracking.android.Tracker$SimpleModel mModel -> b
    boolean mIsTrackerClosed -> c
    boolean mIsTrackingStarted -> d
    long mTokens -> e
    long mLastTrackTime -> f
    boolean mIsThrottlingEnabled -> g
    void setStartSession(boolean) -> a
    void setAppName(java.lang.String) -> a
    void setAppVersion(java.lang.String) -> b
    void sendView(java.lang.String) -> c
    void sendException(java.lang.String,boolean) -> a
    void internalSend(java.lang.String,java.util.Map) -> a
    void setAnonymizeIp(boolean) -> b
    void setSampleRate(double) -> a
    java.util.Map constructException(java.lang.String,boolean) -> b
    boolean tokensAvailable() -> a
com.google.analytics.tracking.android.Tracker$SimpleModel -> com.google.a.a.a.ag:
    java.util.Map temporaryMap -> a
    java.util.Map permanentMap -> b
    void setForNextHit(java.lang.String,java.lang.String) -> a
    void set(java.lang.String,java.lang.String) -> b
    void clearTemporaryValues() -> a
    void setAll(java.util.Map,java.lang.Boolean) -> a
    java.util.Map getKeysAndValues() -> b
com.google.analytics.tracking.android.TrackerHandler -> com.google.a.a.a.ah:
    void sendHit(java.util.Map) -> a
com.google.analytics.tracking.android.Utils -> com.google.a.a.a.ai:
    java.util.Map parseURLParameters(java.lang.String) -> a
    double safeParseDouble(java.lang.String) -> b
    boolean safeParseBoolean(java.lang.String) -> c
    java.lang.String filterCampaign(java.lang.String) -> d
    java.lang.String getLanguage(java.util.Locale) -> a
    int fromHexDigit(char) -> a
    byte[] hexDecode(java.lang.String) -> e
com.google.android.gms.analytics.internal.Command -> com.google.b.a.a.a.a:
    java.lang.String id -> b
    java.lang.String urlParam -> c
    java.lang.String value -> d
    android.os.Parcelable$Creator CREATOR -> a
    java.lang.String getId() -> a
    java.lang.String getUrlParam() -> b
    java.lang.String getValue() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.analytics.internal.Command$1 -> com.google.b.a.a.a.b:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.analytics.internal.IAnalyticsService -> com.google.b.a.a.a.c:
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
com.google.android.gms.analytics.internal.IAnalyticsService$Stub -> com.google.b.a.a.a.d:
    com.google.android.gms.analytics.internal.IAnalyticsService asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.analytics.internal.IAnalyticsService$Stub$Proxy -> com.google.b.a.a.a.e:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
gark.tap.cockroach.BuildConfig -> gark.tap.cockroach.BuildConfig:
    boolean DEBUG -> DEBUG
gark.tap.cockroach.Config -> gark.tap.cockroach.Config:
    int ETALON_WIDTH -> ETALON_WIDTH
    float SCALE -> SCALE
    float SPEED -> SPEED
    int INIT_SPEED -> INIT_SPEED
    int CAMERA_WIDTH -> CAMERA_WIDTH
    int CAMERA_HEIGHT -> CAMERA_HEIGHT
    int HEALTH_SCORE -> HEALTH_SCORE
    java.lang.String HEALTH -> HEALTH
    java.lang.String SCORE -> SCORE
    float CONTROL_MARGIN -> CONTROL_MARGIN
gark.tap.cockroach.GameActivity -> gark.tap.cockroach.GameActivity:
    gark.tap.cockroach.mathengine.MathEngine mMathEngine -> mMathEngine
    java.lang.String TAG -> TAG
    java.lang.String SKU_ADS -> SKU_ADS
    int RC_REQUEST -> RC_REQUEST
    boolean isAdsVisible -> isAdsVisible
    com.gark.android.billing.util.IabHelper mHelper -> mHelper
    com.gark.android.billing.util.IabHelper$QueryInventoryFinishedListener mGotInventoryListener -> mGotInventoryListener
    com.gark.android.billing.util.IabHelper$OnIabPurchaseFinishedListener mPurchaseFinishedListener -> mPurchaseFinishedListener
    android.support.v4.content.Loader$OnLoadCompleteListener mConsumeFinishedListener$65d334bb -> mConsumeFinishedListener$65d334bb
    void onCreateScene(org.andengine.ui.IGameInterface$OnCreateSceneCallback) -> onCreateScene
    boolean isAdsVisible() -> isAdsVisible
    void setAdsVisible(boolean) -> setAdsVisible
    void disableAds() -> disableAds
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean verifyDeveloperPayload(com.gark.android.billing.util.Purchase) -> verifyDeveloperPayload
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onStart() -> onStart
    void onStop() -> onStop
    gark.tap.cockroach.mathengine.MathEngine access$0(gark.tap.cockroach.GameActivity) -> access$0
    com.gark.android.billing.util.IabHelper access$1(gark.tap.cockroach.GameActivity) -> access$1
gark.tap.cockroach.GameActivity$1 -> gark.tap.cockroach.GameActivity$1:
    gark.tap.cockroach.GameActivity this$0 -> this$0
    void onQueryInventoryFinished(com.gark.android.billing.util.IabResult,com.gark.android.billing.util.Inventory) -> onQueryInventoryFinished
gark.tap.cockroach.GameActivity$2 -> gark.tap.cockroach.GameActivity$2:
    gark.tap.cockroach.GameActivity this$0 -> this$0
    void onIabPurchaseFinished(com.gark.android.billing.util.IabResult,com.gark.android.billing.util.Purchase) -> onIabPurchaseFinished
gark.tap.cockroach.GameActivity$3 -> gark.tap.cockroach.GameActivity$3:
    gark.tap.cockroach.GameActivity this$0 -> this$0
    void onConsumeFinished(com.gark.android.billing.util.Purchase,com.gark.android.billing.util.IabResult) -> onConsumeFinished
gark.tap.cockroach.GameActivity$4 -> gark.tap.cockroach.GameActivity$4:
    gark.tap.cockroach.GameActivity this$0 -> this$0
    void onIabSetupFinished(com.gark.android.billing.util.IabResult) -> onIabSetupFinished
gark.tap.cockroach.LaunchActivity -> gark.tap.cockroach.LaunchActivity:
    void onCreateScene(org.andengine.ui.IGameInterface$OnCreateSceneCallback) -> onCreateScene
    void onPopulateScene(org.andengine.entity.scene.Scene,org.andengine.ui.IGameInterface$OnPopulateSceneCallback) -> onPopulateScene
    boolean onAreaTouched(org.andengine.input.touch.TouchEvent,org.andengine.entity.scene.ITouchArea,float,float) -> onAreaTouched
gark.tap.cockroach.LaunchActivity1 -> gark.tap.cockroach.LaunchActivity1:
    android.widget.ToggleButton soundToogle -> soundToogle
    android.widget.Button start -> start
    android.widget.Button instruction -> instruction
    android.widget.Button more_games -> more_games
    android.widget.Button remove_ads -> remove_ads
    android.widget.CompoundButton$OnCheckedChangeListener onCheckedChangeListener -> onCheckedChangeListener
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    android.widget.ToggleButton access$0(gark.tap.cockroach.LaunchActivity1) -> access$0
gark.tap.cockroach.LaunchActivity1$1 -> gark.tap.cockroach.LaunchActivity1$1:
    gark.tap.cockroach.LaunchActivity1 this$0 -> this$0
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
gark.tap.cockroach.MainActivity -> gark.tap.cockroach.MainActivity:
    org.andengine.engine.options.EngineOptions engineOptions -> engineOptions
    org.andengine.engine.camera.Camera mCamera -> mCamera
    gark.tap.cockroach.ResourceManager mResourceManager -> mResourceManager
    org.andengine.entity.scene.Scene mScene -> mScene
    org.andengine.engine.options.EngineOptions onCreateEngineOptions() -> onCreateEngineOptions
    void onCreateResources(org.andengine.ui.IGameInterface$OnCreateResourcesCallback) -> onCreateResources
    void onCreateScene(org.andengine.ui.IGameInterface$OnCreateSceneCallback) -> onCreateScene
    void onPopulateScene(org.andengine.entity.scene.Scene,org.andengine.ui.IGameInterface$OnPopulateSceneCallback) -> onPopulateScene
    gark.tap.cockroach.ResourceManager getResourceManager() -> getResourceManager
    org.andengine.engine.camera.Camera getCamera() -> getCamera
    org.andengine.entity.scene.Scene getScene() -> getScene
gark.tap.cockroach.R -> gark.tap.cockroach.R:
gark.tap.cockroach.R$attr -> gark.tap.cockroach.R$attr:
gark.tap.cockroach.R$bool -> gark.tap.cockroach.R$bool:
    int ga_autoActivityTracking -> ga_autoActivityTracking
    int ga_reportUncaughtExceptions -> ga_reportUncaughtExceptions
gark.tap.cockroach.R$color -> gark.tap.cockroach.R$color:
    int grey -> grey
gark.tap.cockroach.R$drawable -> gark.tap.cockroach.R$drawable:
    int btn_bg -> btn_bg
    int btn_bg_1 -> btn_bg_1
    int btn_bg_2 -> btn_bg_2
    int btn_bg_main_menu -> btn_bg_main_menu
    int btn_bg_main_menu_1 -> btn_bg_main_menu_1
    int btn_bg_main_menu_2 -> btn_bg_main_menu_2
    int game_over_bg -> game_over_bg
    int ic_launcher -> ic_launcher
    int icon -> icon
    int icon_cockroach -> icon_cockroach
    int icon_roach1 -> icon_roach1
    int icon_roach2 -> icon_roach2
    int list_selector -> list_selector
    int list_selector_tem -> list_selector_tem
    int main_bg -> main_bg
    int roach_icon -> roach_icon
    int single_bat -> single_bat
    int single_big_lady -> single_big_lady
    int single_bous -> single_bous
    int single_bug -> single_bug
    int single_cockroach -> single_cockroach
    int single_cockroach_medic -> single_cockroach_medic
    int single_fly -> single_fly
    int single_grey -> single_grey
    int single_hands_up -> single_hands_up
    int single_health -> single_health
    int single_larva -> single_larva
    int single_small_lady -> single_small_lady
    int single_spider -> single_spider
    int sound_selector -> sound_selector
gark.tap.cockroach.R$id -> gark.tap.cockroach.R$id:
    int adView -> adView
    int attention -> attention
    int btn_continue -> btn_continue
    int btn_instruction -> btn_instruction
    int btn_open_more -> btn_open_more
    int btn_remove_ads -> btn_remove_ads
    int btn_start -> btn_start
    int close -> close
    int dead_count -> dead_count
    int dead_image -> dead_image
    int game_over -> game_over
    int game_over_layout -> game_over_layout
    int highScore -> highScore
    int list_statistic -> list_statistic
    int menu_settings -> menu_settings
    int pause_layout -> pause_layout
    int quit -> quit
    int resume -> resume
    int score_value -> score_value
    int sound_swither -> sound_swither
    int start_layout -> start_layout
    int statistic_title -> statistic_title
    int text_1 -> text_1
    int text_2 -> text_2
    int text_3 -> text_3
    int text_4 -> text_4
    int text_5 -> text_5
    int text_6 -> text_6
    int text_7 -> text_7
    int try_again -> try_again
    int vawe_number -> vawe_number
gark.tap.cockroach.R$layout -> gark.tap.cockroach.R$layout:
    int activity_main -> activity_main
    int game_over -> game_over
    int game_over_list_item -> game_over_list_item
    int pause_layout -> pause_layout
    int tips -> tips
    int vawe -> vawe
gark.tap.cockroach.R$menu -> gark.tap.cockroach.R$menu:
    int activity_main -> activity_main
gark.tap.cockroach.R$string -> gark.tap.cockroach.R$string:
    int app_name -> app_name
    int attention -> attention
    int btn_continue -> btn_continue
    int close -> close
    int ga_trackingId -> ga_trackingId
    int game_over -> game_over
    int high_score -> high_score
    int instrucion -> instrucion
    int larva_cockroach -> larva_cockroach
    int menu_settings -> menu_settings
    int more_games -> more_games
    int new_high_score -> new_high_score
    int no_more_health -> no_more_health
    int play_again -> play_again
    int quit -> quit
    int remove_ads -> remove_ads
    int resume -> resume
    int simple_cockroach -> simple_cockroach
    int simple_dont_touch -> simple_dont_touch
    int single_bonus_heart -> single_bonus_heart
    int single_bug -> single_bug
    int single_medic -> single_medic
    int single_spider -> single_spider
    int start -> start
    int statisctic -> statisctic
    int times -> times
    int wave -> wave
gark.tap.cockroach.R$style -> gark.tap.cockroach.R$style:
    int AppBaseTheme -> AppBaseTheme
    int button_style -> button_style
    int tips_style -> tips_style
gark.tap.cockroach.ResourceManager -> gark.tap.cockroach.ResourceManager:
    org.andengine.opengl.texture.region.TiledTextureRegion mCockroachTextureRegion -> mCockroachTextureRegion
    org.andengine.opengl.texture.region.TiledTextureRegion mSpider -> mSpider
    org.andengine.opengl.texture.region.TiledTextureRegion mHeartAnimated -> mHeartAnimated
    org.andengine.opengl.texture.region.TiledTextureRegion mPlane -> mPlane
    org.andengine.opengl.texture.region.TiledTextureRegion mBat -> mBat
    org.andengine.opengl.texture.region.TiledTextureRegion mGreyCockroach -> mGreyCockroach
    org.andengine.opengl.texture.region.TiledTextureRegion mBigCockroach -> mBigCockroach
    org.andengine.opengl.texture.region.TiledTextureRegion mLagyBug -> mLagyBug
    org.andengine.opengl.texture.region.TiledTextureRegion mLagySmall -> mLagySmall
    org.andengine.opengl.texture.region.TiledTextureRegion mCockroachFly -> mCockroachFly
    org.andengine.opengl.texture.region.TiledTextureRegion mCockroachHandsUP_1 -> mCockroachHandsUP_1
    org.andengine.opengl.texture.region.TiledTextureRegion mBug -> mBug
    org.andengine.opengl.texture.region.TiledTextureRegion mSmoke -> mSmoke
    org.andengine.opengl.texture.region.TiledTextureRegion mLarva -> mLarva
    org.andengine.opengl.texture.region.TiledTextureRegion mCockroachLavra -> mCockroachLavra
    org.andengine.opengl.texture.region.TiledTextureRegion mBatHiding -> mBatHiding
    org.andengine.opengl.texture.region.TextureRegion mPause -> mPause
    org.andengine.opengl.texture.region.TextureRegion mRedCircleMedecine -> mRedCircleMedecine
    org.andengine.opengl.texture.region.TextureRegion mRedCross -> mRedCross
    org.andengine.opengl.texture.region.TextureRegion mBatAttack -> mBatAttack
    org.andengine.opengl.texture.region.TextureRegion mNimbus -> mNimbus
    org.andengine.opengl.texture.region.TextureRegion mHeart -> mHeart
    org.andengine.opengl.texture.region.TextureRegion mBackGround -> mBackGround
    org.andengine.opengl.texture.region.TextureRegion mBackGroundMain -> mBackGroundMain
    org.andengine.opengl.texture.region.TextureRegion mDeadDefault -> mDeadDefault
    org.andengine.opengl.texture.region.TextureRegion mDeadLarva -> mDeadLarva
    org.andengine.opengl.texture.region.TextureRegion mDeadFly -> mDeadFly
    org.andengine.opengl.texture.region.TextureRegion mDeadLadyBug -> mDeadLadyBug
    org.andengine.opengl.texture.region.TextureRegion mDeadLadyBugBig -> mDeadLadyBugBig
    org.andengine.opengl.texture.region.TextureRegion mDeadBug -> mDeadBug
    org.andengine.opengl.texture.region.TextureRegion mDeadGrey -> mDeadGrey
    org.andengine.opengl.texture.region.TextureRegion mDeadSpider -> mDeadSpider
    org.andengine.opengl.texture.region.TextureRegion mDeadHeadUp -> mDeadHeadUp
    org.andengine.opengl.texture.region.TextureRegion mSoundOn -> mSoundOn
    org.andengine.opengl.texture.region.TextureRegion mContinue -> mContinue
    org.andengine.opengl.texture.region.TextureRegion m10 -> m10
    org.andengine.opengl.texture.region.TextureRegion m25 -> m25
    org.andengine.audio.sound.Sound mSoundOnTap -> mSoundOnTap
    org.andengine.audio.sound.Sound mSoundOnTap2 -> mSoundOnTap2
    org.andengine.audio.sound.Sound mMimimi -> mMimimi
    org.andengine.audio.sound.Sound mSoundMonsterKill -> mSoundMonsterKill
    org.andengine.audio.sound.Sound mSoundNooo -> mSoundNooo
    org.andengine.audio.sound.Sound mSoundHellYeah -> mSoundHellYeah
    org.andengine.audio.sound.Sound mSoundChpok -> mSoundChpok
    org.andengine.audio.sound.Sound mSoundMissed -> mSoundMissed
    org.andengine.opengl.font.Font mFont -> mFont
    org.andengine.opengl.texture.TextureManager textureManager -> textureManager
    org.andengine.ui.activity.BaseGameActivity baseGameActivity -> baseGameActivity
    org.andengine.opengl.font.FontManager fontManager -> fontManager
    android.content.res.AssetManager assetManager -> assetManager
    org.andengine.opengl.vbo.VertexBufferObjectManager mVertexBufferObjectManager -> mVertexBufferObjectManager
    org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas soundAtlas -> soundAtlas
    org.andengine.opengl.texture.region.TextureRegion getBackGround() -> getBackGround
    org.andengine.opengl.texture.region.TextureRegion getBackGroundMain() -> getBackGroundMain
    org.andengine.opengl.texture.region.TextureRegion getDeadCockroach() -> getDeadCockroach
    org.andengine.opengl.texture.region.TiledTextureRegion getCockroach() -> getCockroach
    org.andengine.opengl.vbo.VertexBufferObjectManager getVertexBufferObjectManager() -> getVertexBufferObjectManager
    org.andengine.opengl.texture.region.TextureRegion getPause() -> getPause
    org.andengine.audio.sound.Sound getSoundOnTap() -> getSoundOnTap
    org.andengine.audio.sound.Sound getSoundOnTap2() -> getSoundOnTap2
    org.andengine.audio.sound.Sound getMimimi() -> getMimimi
    org.andengine.audio.sound.Sound getSoundMonsterKill() -> getSoundMonsterKill
    org.andengine.audio.sound.Sound getSoundNooo() -> getSoundNooo
    org.andengine.audio.sound.Sound getSoundHellYeah() -> getSoundHellYeah
    org.andengine.audio.sound.Sound getSoundChpok() -> getSoundChpok
    org.andengine.audio.sound.Sound getSoundMissed() -> getSoundMissed
    org.andengine.opengl.texture.region.TextureRegion getNimbus() -> getNimbus
    org.andengine.opengl.texture.region.TextureRegion getBatAttack() -> getBatAttack
    org.andengine.opengl.texture.region.TextureRegion getRedCross() -> getRedCross
    org.andengine.opengl.texture.region.TextureRegion getCircleMedecine() -> getCircleMedecine
    org.andengine.opengl.texture.region.TiledTextureRegion getSpider() -> getSpider
    org.andengine.opengl.texture.region.TextureRegion getHeart() -> getHeart
    org.andengine.opengl.texture.region.TiledTextureRegion getHeartAnimated() -> getHeartAnimated
    org.andengine.opengl.texture.region.TiledTextureRegion getPlane() -> getPlane
    org.andengine.opengl.font.Font getFont() -> getFont
    org.andengine.opengl.texture.region.TextureRegion get10Bonus() -> get10Bonus
    org.andengine.opengl.texture.region.TextureRegion get25Bonus() -> get25Bonus
    org.andengine.opengl.texture.region.TiledTextureRegion getBat() -> getBat
    org.andengine.opengl.texture.region.TiledTextureRegion getGreyCockroach() -> getGreyCockroach
    org.andengine.opengl.texture.region.TiledTextureRegion getBigCockroach() -> getBigCockroach
    org.andengine.opengl.texture.region.TiledTextureRegion getLagyBug() -> getLagyBug
    org.andengine.opengl.texture.region.TiledTextureRegion getmCockroachFly() -> getmCockroachFly
    org.andengine.opengl.texture.region.TiledTextureRegion getCockroachHandsUP() -> getCockroachHandsUP
    org.andengine.opengl.texture.region.TiledTextureRegion getBug() -> getBug
    org.andengine.opengl.texture.region.TiledTextureRegion getLagySmall() -> getLagySmall
    org.andengine.opengl.texture.region.TiledTextureRegion getSmoke() -> getSmoke
    org.andengine.opengl.texture.region.TiledTextureRegion getLarva() -> getLarva
    org.andengine.opengl.texture.region.TiledTextureRegion getCockroachLavra() -> getCockroachLavra
    org.andengine.opengl.texture.region.TextureRegion getDeadLarva() -> getDeadLarva
    org.andengine.opengl.texture.region.TextureRegion getDeadFly() -> getDeadFly
    org.andengine.opengl.texture.region.TextureRegion getDeadLadyBug() -> getDeadLadyBug
    org.andengine.opengl.texture.region.TextureRegion getDeadBug() -> getDeadBug
    org.andengine.opengl.texture.region.TextureRegion getDeadGrey() -> getDeadGrey
    org.andengine.opengl.texture.region.TextureRegion getDeadLadyBugBig() -> getDeadLadyBugBig
    org.andengine.opengl.texture.region.TextureRegion getDeadSpider() -> getDeadSpider
    org.andengine.opengl.texture.region.TextureRegion getDeadHeadUp() -> getDeadHeadUp
    org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas getSoundAtlas() -> getSoundAtlas
    org.andengine.opengl.texture.region.TextureRegion getSoundOn() -> getSoundOn
    org.andengine.opengl.texture.region.TextureRegion getContinue() -> getContinue
    org.andengine.opengl.texture.region.TiledTextureRegion getBatHiding() -> getBatHiding
gark.tap.cockroach.SoundManager -> gark.tap.cockroach.SoundManager:
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    void playSound(org.andengine.audio.sound.Sound) -> playSound
gark.tap.cockroach.StartManager -> gark.tap.cockroach.StartManager:
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.lang.Runnable runnableStart -> runnableStart
    org.andengine.entity.text.Text startText -> startText
    org.andengine.entity.text.Text instructionText -> instructionText
    org.andengine.entity.text.Text removeAds -> removeAds
    org.andengine.entity.sprite.Sprite mSound -> mSound
    org.andengine.entity.modifier.IEntityModifier$IEntityModifierListener entityModifierListenerFirstLine -> entityModifierListenerFirstLine
    org.andengine.entity.modifier.IEntityModifier$IEntityModifierListener entityModifierListenerSecondLine -> entityModifierListenerSecondLine
    void toggle(boolean) -> toggle
    void unregisterTouch() -> unregisterTouch
    void registerTouch() -> registerTouch
    void initFirstLine() -> initFirstLine
    void initSecondLine() -> initSecondLine
    void initThirdLine() -> initThirdLine
    void setRemoveAdsVisibility(boolean) -> setRemoveAdsVisibility
    void inflateStartScreen() -> inflateStartScreen
    gark.tap.cockroach.mathengine.MathEngine access$0(gark.tap.cockroach.StartManager) -> access$0
    org.andengine.entity.text.Text access$1(gark.tap.cockroach.StartManager) -> access$1
    org.andengine.entity.text.Text access$2(gark.tap.cockroach.StartManager) -> access$2
    org.andengine.entity.text.Text access$3(gark.tap.cockroach.StartManager) -> access$3
    org.andengine.entity.sprite.Sprite access$4(gark.tap.cockroach.StartManager) -> access$4
    void access$5(gark.tap.cockroach.StartManager) -> access$5
    void access$6(gark.tap.cockroach.StartManager) -> access$6
    void access$7(gark.tap.cockroach.StartManager,boolean) -> access$7
gark.tap.cockroach.StartManager$1 -> gark.tap.cockroach.StartManager$1:
    gark.tap.cockroach.StartManager this$0 -> this$0
    void run() -> run
gark.tap.cockroach.StartManager$10 -> gark.tap.cockroach.StartManager$10:
    gark.tap.cockroach.StartManager this$0 -> this$0
    boolean onAreaTouched(org.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
gark.tap.cockroach.StartManager$2 -> gark.tap.cockroach.StartManager$2:
    gark.tap.cockroach.StartManager this$0 -> this$0
    void onModifierStarted(org.andengine.util.modifier.IModifier,org.andengine.entity.IEntity) -> onModifierStarted
    void onModifierFinished(org.andengine.util.modifier.IModifier,org.andengine.entity.IEntity) -> onModifierFinished
    void onModifierFinished(org.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierFinished
    void onModifierStarted(org.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierStarted
gark.tap.cockroach.StartManager$3 -> gark.tap.cockroach.StartManager$3:
    gark.tap.cockroach.StartManager this$0 -> this$0
    void onModifierStarted(org.andengine.util.modifier.IModifier,org.andengine.entity.IEntity) -> onModifierStarted
    void onModifierFinished(org.andengine.util.modifier.IModifier,org.andengine.entity.IEntity) -> onModifierFinished
    void onModifierFinished(org.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierFinished
    void onModifierStarted(org.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierStarted
gark.tap.cockroach.StartManager$4 -> gark.tap.cockroach.StartManager$4:
    gark.tap.cockroach.StartManager this$0 -> this$0
    boolean val$isSound -> val$isSound
    void run() -> run
gark.tap.cockroach.StartManager$5 -> gark.tap.cockroach.StartManager$5:
    gark.tap.cockroach.StartManager this$0 -> this$0
    void run() -> run
gark.tap.cockroach.StartManager$6 -> gark.tap.cockroach.StartManager$6:
    gark.tap.cockroach.StartManager this$0 -> this$0
    void run() -> run
gark.tap.cockroach.StartManager$7 -> gark.tap.cockroach.StartManager$7:
    gark.tap.cockroach.StartManager this$0 -> this$0
    boolean onAreaTouched(org.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
gark.tap.cockroach.StartManager$8 -> gark.tap.cockroach.StartManager$8:
    gark.tap.cockroach.StartManager this$0 -> this$0
    boolean onAreaTouched(org.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
gark.tap.cockroach.StartManager$9 -> gark.tap.cockroach.StartManager$9:
    gark.tap.cockroach.StartManager this$0 -> this$0
    boolean onAreaTouched(org.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
    gark.tap.cockroach.StartManager access$0(gark.tap.cockroach.StartManager$9) -> access$0
gark.tap.cockroach.StartManager$9$1 -> gark.tap.cockroach.StartManager$9$1:
    gark.tap.cockroach.StartManager$9 this$1 -> this$1
    void run() -> run
gark.tap.cockroach.TipsManager -> gark.tap.cockroach.TipsManager:
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    org.andengine.ui.activity.BaseGameActivity gameActivity -> gameActivity
    android.view.View viewTips -> viewTips
    void inflate() -> inflate
    void onClick(android.view.View) -> onClick
    void clearAllView() -> clearAllView
    gark.tap.cockroach.mathengine.MathEngine access$0(gark.tap.cockroach.TipsManager) -> access$0
    android.view.View access$1(gark.tap.cockroach.TipsManager) -> access$1
    org.andengine.ui.activity.BaseGameActivity access$2(gark.tap.cockroach.TipsManager) -> access$2
    void access$3(gark.tap.cockroach.TipsManager,android.view.View) -> access$3
gark.tap.cockroach.TipsManager$1 -> gark.tap.cockroach.TipsManager$1:
    gark.tap.cockroach.TipsManager this$0 -> this$0
    void run() -> run
gark.tap.cockroach.TipsManager$ViewHolder -> gark.tap.cockroach.TipsManager$ViewHolder:
    android.widget.TextView textView -> textView
    android.widget.ImageView imageView -> imageView
gark.tap.cockroach.levels.LevelGenerator -> gark.tap.cockroach.levels.LevelGenerator:
    int LEVEL_COUNT -> LEVEL_COUNT
    int LEVEL_COUNT_COMPOSITE -> LEVEL_COUNT_COMPOSITE
    gark.tap.cockroach.unitgroup.UnionUnits unionUnits -> unionUnits
    int compositePreviousValue -> compositePreviousValue
    java.util.Queue fillContent(int,gark.tap.cockroach.mathengine.MathEngine,java.util.Queue) -> fillContent
    void clearList(java.util.Queue) -> clearList
gark.tap.cockroach.levels.LevelManager -> gark.tap.cockroach.levels.LevelManager:
    int CURENT_LEVEL -> CURENT_LEVEL
    org.andengine.entity.scene.Scene mScenePlayArea -> mScenePlayArea
    java.util.Queue queueOfAllLevelUnit -> queueOfAllLevelUnit
    java.util.List listOfVisibleUnits -> listOfVisibleUnits
    java.util.Queue queueForAddUnits -> queueForAddUnits
    java.util.Queue queueUnitsForRemove -> queueUnitsForRemove
    java.util.concurrent.ScheduledExecutorService executor -> executor
    gark.tap.cockroach.levels.OnUpdateLevelListener levelListener -> levelListener
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    boolean allowNewLevel -> allowNewLevel
    java.lang.Runnable runnable -> runnable
    void startNewLevel() -> startNewLevel
    void addCockroach(gark.tap.cockroach.units.UnitBot) -> addCockroach
    void reanimateCockroach(gark.tap.cockroach.units.UnitBot) -> reanimateCockroach
    boolean isLevelFinished(int,int) -> isLevelFinished
    void pauseLauncher() -> pauseLauncher
    void resumeLauncher() -> resumeLauncher
    void destroyLauncher() -> destroyLauncher
    java.util.List getUnitList() -> getUnitList
    java.util.Queue getQueueOfAllLevelUnit() -> getQueueOfAllLevelUnit
    void setCURENT_LEVEL(int) -> setCURENT_LEVEL
    java.util.Queue getQueueForAdd() -> getQueueForAdd
    java.util.Queue getQueueUnitsForRemove() -> getQueueUnitsForRemove
    void checkForStartNewLevel() -> checkForStartNewLevel
    java.util.Queue access$0(gark.tap.cockroach.levels.LevelManager) -> access$0
    gark.tap.cockroach.mathengine.MathEngine access$1(gark.tap.cockroach.levels.LevelManager) -> access$1
    void access$2(gark.tap.cockroach.levels.LevelManager,boolean) -> access$2
    java.util.concurrent.ScheduledExecutorService access$3(gark.tap.cockroach.levels.LevelManager) -> access$3
    org.andengine.entity.scene.Scene access$4(gark.tap.cockroach.levels.LevelManager) -> access$4
gark.tap.cockroach.levels.LevelManager$1 -> gark.tap.cockroach.levels.LevelManager$1:
    gark.tap.cockroach.levels.LevelManager this$0 -> this$0
    void run() -> run
gark.tap.cockroach.levels.LevelManager$2 -> gark.tap.cockroach.levels.LevelManager$2:
    gark.tap.cockroach.levels.LevelManager this$0 -> this$0
    gark.tap.cockroach.mathengine.movingobjects.MovingObject val$item -> val$item
    void run() -> run
gark.tap.cockroach.levels.LevelManager$MyArrayList -> gark.tap.cockroach.levels.LevelManager$MyArrayList:
    long serialVersionUID -> serialVersionUID
    gark.tap.cockroach.levels.LevelManager this$0 -> this$0
    boolean remove(java.lang.Object) -> remove
    int size() -> size
gark.tap.cockroach.levels.LevelManager$MyLinkedList -> gark.tap.cockroach.levels.LevelManager$MyLinkedList:
    long serialVersionUID -> serialVersionUID
    gark.tap.cockroach.levels.LevelManager this$0 -> this$0
    gark.tap.cockroach.units.UnitBot poll() -> poll
    int size() -> size
    java.lang.Object poll() -> poll
gark.tap.cockroach.levels.OnUpdateLevelListener -> gark.tap.cockroach.levels.OnUpdateLevelListener:
    void getCurrentVawe(int) -> getCurrentVawe
gark.tap.cockroach.mathengine.ConfigObject -> gark.tap.cockroach.mathengine.ConfigObject:
    int HEALTH_LEVEL -> HEALTH_LEVEL
    int HEALTH_TANK -> HEALTH_TANK
    int HEALTH_CANNON -> HEALTH_CANNON
    int HEALTH_DOT -> HEALTH_DOT
    int RECHARGE_TANK -> RECHARGE_TANK
    int DAMAGE_POOL -> DAMAGE_POOL
    int DAMAGE_BOMB -> DAMAGE_BOMB
    int SPEED_BOMB -> SPEED_BOMB
    int SPEED_POOL -> SPEED_POOL
    int RECHARGE_HELICOPTER_BULLET -> RECHARGE_HELICOPTER_BULLET
    int RECHARGE_HELICOPTER_BOMB -> RECHARGE_HELICOPTER_BOMB
gark.tap.cockroach.mathengine.CorpseManager -> gark.tap.cockroach.mathengine.CorpseManager:
    java.util.List mListDeadObjects -> mListDeadObjects
    java.util.Queue queueCorpseForRemove -> queueCorpseForRemove
    java.util.Queue queueCorpseForAdd -> queueCorpseForAdd
    java.util.List getListDeadObjects() -> getListDeadObjects
    void clearArea(gark.tap.cockroach.mathengine.MathEngine) -> clearArea
    java.util.Queue getQueueCorpseForRemove() -> getQueueCorpseForRemove
    java.util.Queue getQueueCorpseForAdd() -> getQueueCorpseForAdd
gark.tap.cockroach.mathengine.CorpseManager$1 -> gark.tap.cockroach.mathengine.CorpseManager$1:
    gark.tap.cockroach.mathengine.CorpseManager this$0 -> this$0
    gark.tap.cockroach.mathengine.MathEngine val$mathEngine -> val$mathEngine
    gark.tap.cockroach.mathengine.staticobject.StaticObject val$item -> val$item
    void run() -> run
gark.tap.cockroach.mathengine.GameOverManager -> gark.tap.cockroach.mathengine.GameOverManager:
    java.util.Timer timer -> timer
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    org.andengine.ui.activity.BaseGameActivity gameActivity -> gameActivity
    org.andengine.entity.scene.Scene mScenePlayArea -> mScenePlayArea
    android.widget.ListView listView -> listView
    android.view.View viewGameOver -> viewGameOver
    int DELAY -> DELAY
    org.andengine.entity.sprite.AnimatedSprite sprite -> sprite
    org.andengine.entity.sprite.AnimatedSprite$IAnimationListener iAnimationListener -> iAnimationListener
    void finishNoHealth() -> finishNoHealth
    void finishBat(float,float) -> finishBat
    void finishLadyBug(float,float) -> finishLadyBug
    void finish() -> finish
    void onClick(android.view.View) -> onClick
    void clearAllView() -> clearAllView
    gark.tap.cockroach.mathengine.MathEngine access$0(gark.tap.cockroach.mathengine.GameOverManager) -> access$0
    org.andengine.ui.activity.BaseGameActivity access$1(gark.tap.cockroach.mathengine.GameOverManager) -> access$1
    android.view.View access$2(gark.tap.cockroach.mathengine.GameOverManager) -> access$2
    void access$3(gark.tap.cockroach.mathengine.GameOverManager,android.view.View) -> access$3
    void access$4(gark.tap.cockroach.mathengine.GameOverManager,android.widget.ListView) -> access$4
    android.widget.ListView access$5(gark.tap.cockroach.mathengine.GameOverManager) -> access$5
gark.tap.cockroach.mathengine.GameOverManager$1 -> gark.tap.cockroach.mathengine.GameOverManager$1:
    gark.tap.cockroach.mathengine.GameOverManager this$0 -> this$0
    void onAnimationStarted(org.andengine.entity.sprite.AnimatedSprite,int) -> onAnimationStarted
    void onAnimationLoopFinished(org.andengine.entity.sprite.AnimatedSprite,int,int) -> onAnimationLoopFinished
    void onAnimationFrameChanged(org.andengine.entity.sprite.AnimatedSprite,int,int) -> onAnimationFrameChanged
    void onAnimationFinished(org.andengine.entity.sprite.AnimatedSprite) -> onAnimationFinished
gark.tap.cockroach.mathengine.GameOverManager$2 -> gark.tap.cockroach.mathengine.GameOverManager$2:
    gark.tap.cockroach.mathengine.GameOverManager this$0 -> this$0
    void run() -> run
    gark.tap.cockroach.mathengine.GameOverManager access$0(gark.tap.cockroach.mathengine.GameOverManager$2) -> access$0
gark.tap.cockroach.mathengine.GameOverManager$2$1 -> gark.tap.cockroach.mathengine.GameOverManager$2$1:
    gark.tap.cockroach.mathengine.GameOverManager$2 this$1 -> this$1
    void run() -> run
gark.tap.cockroach.mathengine.GameOverManager$StaticArrayAdapter -> gark.tap.cockroach.mathengine.GameOverManager$StaticArrayAdapter:
    android.content.Context context -> context
    java.util.List objects -> objects
    gark.tap.cockroach.mathengine.GameOverManager this$0 -> this$0
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
gark.tap.cockroach.mathengine.GameOverManager$ViewHolder -> gark.tap.cockroach.mathengine.GameOverManager$ViewHolder:
    android.widget.TextView textView -> textView
    android.widget.ImageView imageView -> imageView
gark.tap.cockroach.mathengine.HeartManager -> gark.tap.cockroach.mathengine.HeartManager:
    org.andengine.entity.sprite.Sprite[] sprite -> sprite
    int liveCount -> liveCount
    void setHeartValue(int) -> setHeartValue
    int getLiveCount() -> getLiveCount
gark.tap.cockroach.mathengine.MathEngine -> gark.tap.cockroach.mathengine.MathEngine:
    int UPDATE_PERIOD -> UPDATE_PERIOD
    int health -> health
    java.util.Timer timer -> timer
    int SCORE -> SCORE
    org.andengine.engine.camera.Camera mCamera -> mCamera
    org.andengine.entity.scene.Scene mSceneBackground -> mSceneBackground
    org.andengine.entity.scene.Scene mSceneControls -> mSceneControls
    org.andengine.entity.scene.Scene mScenePlayArea -> mScenePlayArea
    org.andengine.entity.scene.Scene mSceneDeadArea -> mSceneDeadArea
    org.andengine.entity.scene.Scene startScene -> startScene
    java.lang.Thread mGameLoop -> mGameLoop
    boolean mAlive -> mAlive
    boolean isGameState -> isGameState
    long mLastUpdateScene -> mLastUpdateScene
    boolean mPaused -> mPaused
    gark.tap.cockroach.GameActivity gameActivity -> gameActivity
    gark.tap.cockroach.mathengine.TextManager textManager -> textManager
    gark.tap.cockroach.ResourceManager mResourceManager -> mResourceManager
    gark.tap.cockroach.mathengine.CorpseManager corpseManager -> corpseManager
    gark.tap.cockroach.mathengine.GameOverManager gameOverManager -> gameOverManager
    gark.tap.cockroach.mathengine.HeartManager heartManager -> heartManager
    gark.tap.cockroach.levels.LevelManager levelManager -> levelManager
    gark.tap.cockroach.SoundManager soundManager -> soundManager
    gark.tap.cockroach.mathengine.PauseManager pauseManager -> pauseManager
    gark.tap.cockroach.StartManager startManager -> startManager
    gark.tap.cockroach.TipsManager tipsManager -> tipsManager
    gark.tap.cockroach.units.MainRoach mainRoach -> mainRoach
    int mIndex -> mIndex
    org.andengine.entity.primitive.Line[] mLineArray -> mLineArray
    java.util.ArrayList mTouchPoints -> mTouchPoints
    org.andengine.entity.particle.emitter.RectangleParticleEmitter particleEmitter -> particleEmitter
    int i -> i
    boolean isDrawing -> isDrawing
    org.andengine.entity.primitive.Rectangle[] rec -> rec
    gark.tap.cockroach.levels.OnUpdateLevelListener levelListener -> levelListener
    int lineIndex -> lineIndex
    void initStartScreen() -> initStartScreen
    void initGame() -> initGame
    void pause() -> pause
    void start() -> start
    void stop(boolean) -> stop
    long getElapsedTimeMillis() -> getElapsedTimeMillis
    void run() -> run
    void tact(long) -> tact
    gark.tap.cockroach.StartManager getStartManager() -> getStartManager
    void setLastUpdateScene(long) -> setLastUpdateScene
    gark.tap.cockroach.TipsManager getTipsManager() -> getTipsManager
    org.andengine.entity.scene.Scene getSceneBackground() -> getSceneBackground
    org.andengine.entity.scene.Scene getStartScene() -> getStartScene
    org.andengine.entity.scene.Scene getSceneControls() -> getSceneControls
    boolean isPaused() -> isPaused
    void setPaused(boolean) -> setPaused
    boolean isGameState() -> isGameState
    gark.tap.cockroach.levels.OnUpdateLevelListener getLevelListener() -> getLevelListener
    gark.tap.cockroach.GameActivity getGameActivity() -> getGameActivity
    gark.tap.cockroach.ResourceManager getResourceManager() -> getResourceManager
    gark.tap.cockroach.mathengine.GameOverManager getGameOverManager() -> getGameOverManager
    gark.tap.cockroach.mathengine.HeartManager getHeartManager() -> getHeartManager
    gark.tap.cockroach.levels.LevelManager getLevelManager() -> getLevelManager
    org.andengine.entity.scene.Scene getScenePlayArea() -> getScenePlayArea
    org.andengine.entity.scene.Scene getSceneDeadArea() -> getSceneDeadArea
    gark.tap.cockroach.mathengine.CorpseManager getCorpseManager() -> getCorpseManager
    gark.tap.cockroach.SoundManager getSoundManager() -> getSoundManager
    gark.tap.cockroach.mathengine.TextManager getTextManager() -> getTextManager
    boolean onSceneTouchEvent(org.andengine.entity.scene.Scene,org.andengine.input.touch.TouchEvent) -> onSceneTouchEvent
    void hideAllLine() -> hideAllLine
    void resetTouchList() -> resetTouchList
    void printSamples(android.view.MotionEvent,org.andengine.entity.particle.emitter.RectangleParticleEmitter) -> printSamples
    gark.tap.cockroach.mathengine.TextManager access$0(gark.tap.cockroach.mathengine.MathEngine) -> access$0
    java.util.Timer access$1(gark.tap.cockroach.mathengine.MathEngine) -> access$1
    gark.tap.cockroach.mathengine.CorpseManager access$2(gark.tap.cockroach.mathengine.MathEngine) -> access$2
    org.andengine.entity.scene.Scene access$3(gark.tap.cockroach.mathengine.MathEngine) -> access$3
    gark.tap.cockroach.ResourceManager access$4(gark.tap.cockroach.mathengine.MathEngine) -> access$4
    void access$5(gark.tap.cockroach.mathengine.MathEngine,gark.tap.cockroach.StartManager) -> access$5
    void access$6(gark.tap.cockroach.mathengine.MathEngine,org.andengine.entity.scene.Scene) -> access$6
    org.andengine.entity.scene.Scene access$7(gark.tap.cockroach.mathengine.MathEngine) -> access$7
    void access$8(gark.tap.cockroach.mathengine.MathEngine,gark.tap.cockroach.units.MainRoach) -> access$8
    gark.tap.cockroach.units.MainRoach access$9(gark.tap.cockroach.mathengine.MathEngine) -> access$9
    gark.tap.cockroach.StartManager access$10(gark.tap.cockroach.mathengine.MathEngine) -> access$10
    void access$11(gark.tap.cockroach.mathengine.MathEngine,gark.tap.cockroach.TipsManager) -> access$11
    gark.tap.cockroach.levels.LevelManager access$12(gark.tap.cockroach.mathengine.MathEngine) -> access$12
    gark.tap.cockroach.GameActivity access$13(gark.tap.cockroach.mathengine.MathEngine) -> access$13
    void access$14(gark.tap.cockroach.mathengine.MathEngine,gark.tap.cockroach.mathengine.TextManager) -> access$14
    org.andengine.engine.camera.Camera access$15(gark.tap.cockroach.mathengine.MathEngine) -> access$15
    void access$16(gark.tap.cockroach.mathengine.MathEngine,org.andengine.entity.scene.Scene) -> access$16
    org.andengine.entity.scene.Scene access$17(gark.tap.cockroach.mathengine.MathEngine) -> access$17
    void access$18(gark.tap.cockroach.mathengine.MathEngine,org.andengine.entity.scene.Scene) -> access$18
    org.andengine.entity.scene.Scene access$19(gark.tap.cockroach.mathengine.MathEngine) -> access$19
    void access$20(gark.tap.cockroach.mathengine.MathEngine,org.andengine.entity.scene.Scene) -> access$20
    org.andengine.entity.scene.Scene access$21(gark.tap.cockroach.mathengine.MathEngine) -> access$21
    void access$22(gark.tap.cockroach.mathengine.MathEngine,org.andengine.entity.particle.emitter.RectangleParticleEmitter) -> access$22
    org.andengine.entity.primitive.Line[] access$23(gark.tap.cockroach.mathengine.MathEngine) -> access$23
    void access$24(gark.tap.cockroach.mathengine.MathEngine,gark.tap.cockroach.mathengine.CorpseManager) -> access$24
    void access$25(gark.tap.cockroach.mathengine.MathEngine,gark.tap.cockroach.mathengine.HeartManager) -> access$25
    gark.tap.cockroach.mathengine.HeartManager access$26(gark.tap.cockroach.mathengine.MathEngine) -> access$26
    void access$27(gark.tap.cockroach.mathengine.MathEngine,gark.tap.cockroach.mathengine.GameOverManager) -> access$27
    void access$28(gark.tap.cockroach.mathengine.MathEngine,gark.tap.cockroach.levels.LevelManager) -> access$28
    void access$29(gark.tap.cockroach.mathengine.MathEngine,gark.tap.cockroach.SoundManager) -> access$29
    void access$30(gark.tap.cockroach.mathengine.MathEngine,gark.tap.cockroach.mathengine.PauseManager) -> access$30
gark.tap.cockroach.mathengine.MathEngine$1 -> gark.tap.cockroach.mathengine.MathEngine$1:
    gark.tap.cockroach.mathengine.MathEngine this$0 -> this$0
    void getCurrentVawe(int) -> getCurrentVawe
    gark.tap.cockroach.mathengine.MathEngine access$0(gark.tap.cockroach.mathengine.MathEngine$1) -> access$0
gark.tap.cockroach.mathengine.MathEngine$1$1 -> gark.tap.cockroach.mathengine.MathEngine$1$1:
    gark.tap.cockroach.mathengine.MathEngine$1 this$1 -> this$1
    void run() -> run
gark.tap.cockroach.mathengine.MathEngine$2 -> gark.tap.cockroach.mathengine.MathEngine$2:
    gark.tap.cockroach.mathengine.MathEngine this$0 -> this$0
    void run() -> run
gark.tap.cockroach.mathengine.MathEngine$3 -> gark.tap.cockroach.mathengine.MathEngine$3:
    gark.tap.cockroach.mathengine.MathEngine this$0 -> this$0
    void run() -> run
    gark.tap.cockroach.mathengine.MathEngine access$0(gark.tap.cockroach.mathengine.MathEngine$3) -> access$0
gark.tap.cockroach.mathengine.MathEngine$3$1 -> gark.tap.cockroach.mathengine.MathEngine$3$1:
    gark.tap.cockroach.mathengine.MathEngine$3 this$1 -> this$1
    boolean onAreaTouched(org.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
gark.tap.cockroach.mathengine.MathEngine$Points -> gark.tap.cockroach.mathengine.MathEngine$Points:
    float x -> x
    float y -> y
    gark.tap.cockroach.mathengine.MathEngine this$0 -> this$0
gark.tap.cockroach.mathengine.PauseManager -> gark.tap.cockroach.mathengine.PauseManager:
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    gark.tap.cockroach.ResourceManager mResourceManager -> mResourceManager
    org.andengine.entity.sprite.Sprite mPause -> mPause
    boolean isPauseState -> isPauseState
    java.lang.Runnable runnable -> runnable
    void showPause() -> showPause
    gark.tap.cockroach.mathengine.MathEngine access$0(gark.tap.cockroach.mathengine.PauseManager) -> access$0
    org.andengine.entity.sprite.Sprite access$1(gark.tap.cockroach.mathengine.PauseManager) -> access$1
    void access$2(gark.tap.cockroach.mathengine.PauseManager,boolean) -> access$2
gark.tap.cockroach.mathengine.PauseManager$1 -> gark.tap.cockroach.mathengine.PauseManager$1:
    gark.tap.cockroach.mathengine.PauseManager this$0 -> this$0
    void run() -> run
gark.tap.cockroach.mathengine.PauseManager$2 -> gark.tap.cockroach.mathengine.PauseManager$2:
    gark.tap.cockroach.mathengine.PauseManager this$0 -> this$0
    boolean onAreaTouched(org.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
gark.tap.cockroach.mathengine.TextManager -> gark.tap.cockroach.mathengine.TextManager:
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    android.widget.TextView vaweText -> vaweText
    android.widget.TextView attention -> attention
    android.widget.TextView scoreValue -> scoreValue
    android.view.View container -> container
    com.google.ads.AdView adView -> adView
    void showVawe(java.lang.String) -> showVawe
    void hideVawe() -> hideVawe
    void setScore(java.lang.String) -> setScore
    void clearAllView() -> clearAllView
    void access$0(gark.tap.cockroach.mathengine.TextManager,android.view.View) -> access$0
    android.view.View access$1(gark.tap.cockroach.mathengine.TextManager) -> access$1
    void access$2(gark.tap.cockroach.mathengine.TextManager,android.widget.TextView) -> access$2
    void access$3(gark.tap.cockroach.mathengine.TextManager,android.widget.TextView) -> access$3
    void access$4(gark.tap.cockroach.mathengine.TextManager,android.widget.TextView) -> access$4
    void access$5(gark.tap.cockroach.mathengine.TextManager,com.google.ads.AdView) -> access$5
    com.google.ads.AdView access$6(gark.tap.cockroach.mathengine.TextManager) -> access$6
    android.widget.TextView access$7(gark.tap.cockroach.mathengine.TextManager) -> access$7
    android.widget.TextView access$8(gark.tap.cockroach.mathengine.TextManager) -> access$8
    android.widget.TextView access$9(gark.tap.cockroach.mathengine.TextManager) -> access$9
gark.tap.cockroach.mathengine.TextManager$1 -> gark.tap.cockroach.mathengine.TextManager$1:
    gark.tap.cockroach.mathengine.TextManager this$0 -> this$0
    gark.tap.cockroach.mathengine.MathEngine val$mathEngine -> val$mathEngine
    void run() -> run
gark.tap.cockroach.mathengine.TextManager$2 -> gark.tap.cockroach.mathengine.TextManager$2:
    gark.tap.cockroach.mathengine.TextManager this$0 -> this$0
    java.lang.String val$sVawe -> val$sVawe
    void run() -> run
gark.tap.cockroach.mathengine.TextManager$3 -> gark.tap.cockroach.mathengine.TextManager$3:
    gark.tap.cockroach.mathengine.TextManager this$0 -> this$0
    void run() -> run
gark.tap.cockroach.mathengine.TextManager$4 -> gark.tap.cockroach.mathengine.TextManager$4:
    gark.tap.cockroach.mathengine.TextManager this$0 -> this$0
    java.lang.String val$score -> val$score
    void run() -> run
gark.tap.cockroach.mathengine.Utils -> gark.tap.cockroach.mathengine.Utils:
    java.util.Random random -> random
    java.lang.String PREFS_HIDH_SCORE -> PREFS_HIDH_SCORE
    android.graphics.Typeface typeface -> typeface
    java.lang.String SOUND -> SOUND
    java.lang.String CONTINUE -> CONTINUE
    float generateRandom(int) -> generateRandom
    float generateRandomPositive(float) -> generateRandomPositive
    int generateRandomPositiveInt(int) -> generateRandomPositiveInt
    float generateRandomPositive(float,float) -> generateRandomPositive
    void getHighScore(int,org.andengine.ui.activity.BaseActivity,android.widget.TextView) -> getHighScore
    void setTypeface(android.graphics.Typeface) -> setTypeface
    android.graphics.Typeface getTypeface() -> getTypeface
    boolean isSound(android.app.Activity) -> isSound
    void setSound(android.app.Activity,boolean) -> setSound
    int getContinueCount(android.app.Activity) -> getContinueCount
    void decreaseContinueCount(android.app.Activity) -> decreaseContinueCount
    void resetContinue(android.app.Activity) -> resetContinue
gark.tap.cockroach.mathengine.movingobjects.BatSin -> gark.tap.cockroach.mathengine.movingobjects.BatSin:
    float prevX -> prevX
    float relationPosition -> relationPosition
    void tact(long,long) -> tact
    void calculateRemove(gark.tap.cockroach.mathengine.MathEngine,float,float) -> calculateRemove
    void removeObject(gark.tap.cockroach.mathengine.movingobjects.MovingObject,org.andengine.entity.scene.Scene,gark.tap.cockroach.mathengine.MathEngine) -> removeObject
gark.tap.cockroach.mathengine.movingobjects.BatSin$1 -> gark.tap.cockroach.mathengine.movingobjects.BatSin$1:
    gark.tap.cockroach.mathengine.movingobjects.BatSin this$0 -> this$0
    gark.tap.cockroach.mathengine.MathEngine val$mathEngine -> val$mathEngine
    void run() -> run
gark.tap.cockroach.mathengine.movingobjects.BatSin$2 -> gark.tap.cockroach.mathengine.movingobjects.BatSin$2:
    gark.tap.cockroach.mathengine.movingobjects.BatSin this$0 -> this$0
    gark.tap.cockroach.mathengine.movingobjects.MovingObject val$object -> val$object
    org.andengine.entity.scene.Scene val$mScenePlayArea -> val$mScenePlayArea
    void run() -> run
gark.tap.cockroach.mathengine.movingobjects.Bug -> gark.tap.cockroach.mathengine.movingobjects.Bug:
    float xDistance -> xDistance
    float oneStep -> oneStep
    org.andengine.entity.sprite.AnimatedSprite smoke -> smoke
    void tact(long,long) -> tact
    void calculateRemove(gark.tap.cockroach.mathengine.MathEngine,float,float) -> calculateRemove
    org.andengine.entity.sprite.AnimatedSprite access$0(gark.tap.cockroach.mathengine.movingobjects.Bug) -> access$0
gark.tap.cockroach.mathengine.movingobjects.Bug$1 -> gark.tap.cockroach.mathengine.movingobjects.Bug$1:
    gark.tap.cockroach.mathengine.movingobjects.Bug this$0 -> this$0
    gark.tap.cockroach.mathengine.MathEngine val$mathEngine -> val$mathEngine
    void onAnimationStarted(org.andengine.entity.sprite.AnimatedSprite,int) -> onAnimationStarted
    void onAnimationLoopFinished(org.andengine.entity.sprite.AnimatedSprite,int,int) -> onAnimationLoopFinished
    void onAnimationFrameChanged(org.andengine.entity.sprite.AnimatedSprite,int,int) -> onAnimationFrameChanged
    void onAnimationFinished(org.andengine.entity.sprite.AnimatedSprite) -> onAnimationFinished
    gark.tap.cockroach.mathengine.movingobjects.Bug access$0(gark.tap.cockroach.mathengine.movingobjects.Bug$1) -> access$0
gark.tap.cockroach.mathengine.movingobjects.Bug$1$1 -> gark.tap.cockroach.mathengine.movingobjects.Bug$1$1:
    gark.tap.cockroach.mathengine.movingobjects.Bug$1 this$1 -> this$1
    gark.tap.cockroach.mathengine.MathEngine val$mathEngine -> val$mathEngine
    void run() -> run
gark.tap.cockroach.mathengine.movingobjects.Bug$2 -> gark.tap.cockroach.mathengine.movingobjects.Bug$2:
    gark.tap.cockroach.mathengine.movingobjects.Bug this$0 -> this$0
    gark.tap.cockroach.mathengine.MathEngine val$mathEngine -> val$mathEngine
    void run() -> run
gark.tap.cockroach.mathengine.movingobjects.CockroachAccelarate -> gark.tap.cockroach.mathengine.movingobjects.CockroachAccelarate:
    boolean isAcceleration -> isAcceleration
    boolean isDecseleration -> isDecseleration
    int ACCELERATION -> ACCELERATION
    void tact(long,long) -> tact
gark.tap.cockroach.mathengine.movingobjects.CockroachAngle -> gark.tap.cockroach.mathengine.movingobjects.CockroachAngle:
    float relationPosition -> relationPosition
    float coef -> coef
    void tact(long,long) -> tact
gark.tap.cockroach.mathengine.movingobjects.CockroachBigAngle -> gark.tap.cockroach.mathengine.movingobjects.CockroachBigAngle:
    float relationPosition -> relationPosition
    float oneStep -> oneStep
    float xDistance -> xDistance
    void tact(long,long) -> tact
gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort -> gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort:
    int STEP -> STEP
    int SMALL_STEP -> SMALL_STEP
    float initialPosition -> initialPosition
    org.andengine.entity.sprite.AnimatedSprite bat -> bat
    int cycleDirection -> cycleDirection
    float initBatX -> initBatX
    float initBatY -> initBatY
    org.andengine.entity.sprite.AnimatedSprite blast -> blast
    void tact(long,long) -> tact
    void calculateRemove(gark.tap.cockroach.mathengine.MathEngine,float,float) -> calculateRemove
    void removeObject(gark.tap.cockroach.mathengine.movingobjects.MovingObject,org.andengine.entity.scene.Scene,gark.tap.cockroach.mathengine.MathEngine) -> removeObject
    void eraseData(gark.tap.cockroach.mathengine.MathEngine) -> eraseData
    org.andengine.entity.sprite.AnimatedSprite access$0(gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort) -> access$0
gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort$1 -> gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort$1:
    gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort this$0 -> this$0
    gark.tap.cockroach.mathengine.MathEngine val$mathEngine -> val$mathEngine
    boolean onAreaTouched(org.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
    gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort access$0(gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort$1) -> access$0
gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort$1$1 -> gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort$1$1:
    gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort$1 this$1 -> this$1
    gark.tap.cockroach.mathengine.MathEngine val$mathEngine -> val$mathEngine
    void run() -> run
gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort$2 -> gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort$2:
    gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort this$0 -> this$0
    gark.tap.cockroach.mathengine.MathEngine val$mathEngine -> val$mathEngine
    void onAnimationStarted(org.andengine.entity.sprite.AnimatedSprite,int) -> onAnimationStarted
    void onAnimationLoopFinished(org.andengine.entity.sprite.AnimatedSprite,int,int) -> onAnimationLoopFinished
    void onAnimationFrameChanged(org.andengine.entity.sprite.AnimatedSprite,int,int) -> onAnimationFrameChanged
    void onAnimationFinished(org.andengine.entity.sprite.AnimatedSprite) -> onAnimationFinished
gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort$2$1 -> gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort$2$1:
    gark.tap.cockroach.mathengine.movingobjects.CockroachCircleEscort$2 this$1 -> this$1
    org.andengine.entity.sprite.AnimatedSprite val$pAnimatedSprite -> val$pAnimatedSprite
    void run() -> run
gark.tap.cockroach.mathengine.movingobjects.CockroachDirect -> gark.tap.cockroach.mathengine.movingobjects.CockroachDirect:
    void tact(long,long) -> tact
gark.tap.cockroach.mathengine.movingobjects.CockroachFly -> gark.tap.cockroach.mathengine.movingobjects.CockroachFly:
    float xDistance -> xDistance
    float oneStep -> oneStep
    void tact(long,long) -> tact
gark.tap.cockroach.mathengine.movingobjects.CockroachGreySmall -> gark.tap.cockroach.mathengine.movingobjects.CockroachGreySmall:
    float xDistance -> xDistance
    float oneStep -> oneStep
    void tact(long,long) -> tact
gark.tap.cockroach.mathengine.movingobjects.CockroachHalfLefAngle -> gark.tap.cockroach.mathengine.movingobjects.CockroachHalfLefAngle:
    float relationPosition -> relationPosition
    float coef -> coef
    void tact(long,long) -> tact
gark.tap.cockroach.mathengine.movingobjects.CockroachHalfRightAngle -> gark.tap.cockroach.mathengine.movingobjects.CockroachHalfRightAngle:
    float relationPosition -> relationPosition
    float coef -> coef
    void tact(long,long) -> tact
gark.tap.cockroach.mathengine.movingobjects.CockroachHandsUp -> gark.tap.cockroach.mathengine.movingobjects.CockroachHandsUp:
    long[] durationMinimazed -> durationMinimazed
    long[] durationMaximazed -> durationMaximazed
    int[] framesMinimazed -> framesMinimazed
    int[] framesMaximazed -> framesMaximazed
    gark.tap.cockroach.ResourceManager resourceManager -> resourceManager
    float xDistance -> xDistance
    float oneStep -> oneStep
    void resumeAnimate() -> resumeAnimate
    void tact(long,long) -> tact
    void setHealth(int) -> setHealth
gark.tap.cockroach.mathengine.movingobjects.CockroachLOL -> gark.tap.cockroach.mathengine.movingobjects.CockroachLOL:
    float prevX -> prevX
    java.lang.Float relationPosition -> relationPosition
    void tact(long,long) -> tact
gark.tap.cockroach.mathengine.movingobjects.CockroachLarva -> gark.tap.cockroach.mathengine.movingobjects.CockroachLarva:
    void tact(long,long) -> tact
    void calculateRemove(gark.tap.cockroach.mathengine.MathEngine,float,float) -> calculateRemove
gark.tap.cockroach.mathengine.movingobjects.CockroachMedic -> gark.tap.cockroach.mathengine.movingobjects.CockroachMedic:
    org.andengine.entity.sprite.Sprite mRadar -> mRadar
    int MAX_SCALE -> MAX_SCALE
    gark.tap.cockroach.ResourceManager resourceManager -> resourceManager
    void tact(long,long) -> tact
    void recoveryAction(org.andengine.entity.scene.Scene,gark.tap.cockroach.mathengine.MathEngine) -> recoveryAction
gark.tap.cockroach.mathengine.movingobjects.CockroachMedic$1 -> gark.tap.cockroach.mathengine.movingobjects.CockroachMedic$1:
    gark.tap.cockroach.mathengine.movingobjects.CockroachMedic this$0 -> this$0
    org.andengine.entity.scene.Scene val$mSceneDeadArea -> val$mSceneDeadArea
    gark.tap.cockroach.mathengine.staticobject.StaticObject val$staticObject -> val$staticObject
    void run() -> run
gark.tap.cockroach.mathengine.movingobjects.CockroachRandomAngle -> gark.tap.cockroach.mathengine.movingobjects.CockroachRandomAngle:
    float xDistance -> xDistance
    float oneStep -> oneStep
    void tact(long,long) -> tact
gark.tap.cockroach.mathengine.movingobjects.CockroachSin -> gark.tap.cockroach.mathengine.movingobjects.CockroachSin:
    float prevX -> prevX
    float relationPosition -> relationPosition
    void tact(long,long) -> tact
gark.tap.cockroach.mathengine.movingobjects.CockroachSquare -> gark.tap.cockroach.mathengine.movingobjects.CockroachSquare:
    float xDistance -> xDistance
    float yDistance -> yDistance
    float oneStep -> oneStep
    java.util.Queue angles -> angles
    void tact(long,long) -> tact
gark.tap.cockroach.mathengine.movingobjects.Heart -> gark.tap.cockroach.mathengine.movingobjects.Heart:
    void tact(long,long) -> tact
    void calculateRemove(gark.tap.cockroach.mathengine.MathEngine,float,float) -> calculateRemove
    void removeObject(gark.tap.cockroach.mathengine.movingobjects.MovingObject,org.andengine.entity.scene.Scene,gark.tap.cockroach.mathengine.MathEngine) -> removeObject
gark.tap.cockroach.mathengine.movingobjects.Heart$1 -> gark.tap.cockroach.mathengine.movingobjects.Heart$1:
    gark.tap.cockroach.mathengine.movingobjects.Heart this$0 -> this$0
    gark.tap.cockroach.mathengine.MathEngine val$mathEngine -> val$mathEngine
    void run() -> run
gark.tap.cockroach.mathengine.movingobjects.Heart$2 -> gark.tap.cockroach.mathengine.movingobjects.Heart$2:
    gark.tap.cockroach.mathengine.movingobjects.Heart this$0 -> this$0
    gark.tap.cockroach.mathengine.movingobjects.MovingObject val$object -> val$object
    org.andengine.entity.scene.Scene val$mScenePlayArea -> val$mScenePlayArea
    void run() -> run
gark.tap.cockroach.mathengine.movingobjects.LadyBugBig -> gark.tap.cockroach.mathengine.movingobjects.LadyBugBig:
    float xDistance -> xDistance
    float oneStep -> oneStep
    boolean isDirect -> isDirect
    void tact(long,long) -> tact
    void calculateRemove(gark.tap.cockroach.mathengine.MathEngine,float,float) -> calculateRemove
    void removeObject(gark.tap.cockroach.mathengine.movingobjects.MovingObject,org.andengine.entity.scene.Scene,gark.tap.cockroach.mathengine.MathEngine) -> removeObject
gark.tap.cockroach.mathengine.movingobjects.LadyBugBig$1 -> gark.tap.cockroach.mathengine.movingobjects.LadyBugBig$1:
    gark.tap.cockroach.mathengine.movingobjects.LadyBugBig this$0 -> this$0
    gark.tap.cockroach.mathengine.MathEngine val$mathEngine -> val$mathEngine
    void run() -> run
gark.tap.cockroach.mathengine.movingobjects.LadyBugBig$2 -> gark.tap.cockroach.mathengine.movingobjects.LadyBugBig$2:
    gark.tap.cockroach.mathengine.movingobjects.LadyBugBig this$0 -> this$0
    gark.tap.cockroach.mathengine.movingobjects.MovingObject val$object -> val$object
    org.andengine.entity.scene.Scene val$mScenePlayArea -> val$mScenePlayArea
    void run() -> run
gark.tap.cockroach.mathengine.movingobjects.LadyBugSmall -> gark.tap.cockroach.mathengine.movingobjects.LadyBugSmall:
    boolean isDirect -> isDirect
    float xDistance -> xDistance
    float oneStep -> oneStep
    void tact(long,long) -> tact
    void calculateRemove(gark.tap.cockroach.mathengine.MathEngine,float,float) -> calculateRemove
    void removeObject(gark.tap.cockroach.mathengine.movingobjects.MovingObject,org.andengine.entity.scene.Scene,gark.tap.cockroach.mathengine.MathEngine) -> removeObject
gark.tap.cockroach.mathengine.movingobjects.LadyBugSmall$1 -> gark.tap.cockroach.mathengine.movingobjects.LadyBugSmall$1:
    gark.tap.cockroach.mathengine.movingobjects.LadyBugSmall this$0 -> this$0
    gark.tap.cockroach.mathengine.MathEngine val$mathEngine -> val$mathEngine
    void run() -> run
gark.tap.cockroach.mathengine.movingobjects.LadyBugSmall$2 -> gark.tap.cockroach.mathengine.movingobjects.LadyBugSmall$2:
    gark.tap.cockroach.mathengine.movingobjects.LadyBugSmall this$0 -> this$0
    gark.tap.cockroach.mathengine.movingobjects.MovingObject val$object -> val$object
    org.andengine.entity.scene.Scene val$mScenePlayArea -> val$mScenePlayArea
    void run() -> run
gark.tap.cockroach.mathengine.movingobjects.Larva -> gark.tap.cockroach.mathengine.movingobjects.Larva:
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Timer timer -> timer
    java.util.TimerTask timerTask -> timerTask
    void eraseData(gark.tap.cockroach.mathengine.MathEngine) -> eraseData
    void tact(long,long) -> tact
    gark.tap.cockroach.mathengine.MathEngine access$0(gark.tap.cockroach.mathengine.movingobjects.Larva) -> access$0
gark.tap.cockroach.mathengine.movingobjects.Larva$1 -> gark.tap.cockroach.mathengine.movingobjects.Larva$1:
    gark.tap.cockroach.mathengine.movingobjects.Larva this$0 -> this$0
    void run() -> run
gark.tap.cockroach.mathengine.movingobjects.MovingObject -> gark.tap.cockroach.mathengine.movingobjects.MovingObject:
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    int PRESS_RANGE -> PRESS_RANGE
    int animationSpeed -> animationSpeed
    android.graphics.PointF mPoint -> mPoint
    android.graphics.PointF mNextPoint -> mNextPoint
    android.graphics.PointF mPointOffset -> mPointOffset
    org.andengine.entity.sprite.AnimatedSprite mMainSprite -> mMainSprite
    float delayForStart -> delayForStart
    float mSpeed -> mSpeed
    float mShiftX -> mShiftX
    int moving -> moving
    int mHealth -> mHealth
    int scoreValue -> scoreValue
    boolean isRecovered -> isRecovered
    java.util.List touches -> touches
    boolean needToDelete -> needToDelete
    boolean needCorpse -> needCorpse
    org.andengine.opengl.texture.region.TextureRegion corpse -> corpse
    org.andengine.audio.sound.Sound onTapSound -> onTapSound
    void stopAnimate() -> stopAnimate
    void resumeAnimate() -> resumeAnimate
    boolean isRecovered() -> isRecovered
    void setRecovered(boolean) -> setRecovered
    float posX() -> posX
    float posY() -> posY
    void setPoint(android.graphics.PointF) -> setPoint
    void setY(float) -> setY
    void setX(float) -> setX
    float getShiftX() -> getShiftX
    void setmShiftX(float) -> setmShiftX
    org.andengine.entity.sprite.Sprite getMainSprite() -> getMainSprite
    float getMoving() -> getMoving
    void setMoving(float) -> setMoving
    float getDelayForStart() -> getDelayForStart
    void setDelayForStart(float) -> setDelayForStart
    int getHealth() -> getHealth
    void setHealth(int) -> setHealth
    float getWidth() -> getWidth
    void tact(long,long) -> tact
    void calculateRemove(gark.tap.cockroach.mathengine.MathEngine,float,float) -> calculateRemove
    void removeObject(gark.tap.cockroach.mathengine.movingobjects.MovingObject,org.andengine.entity.scene.Scene,gark.tap.cockroach.mathengine.MathEngine) -> removeObject
    void recoveryAction(org.andengine.entity.scene.Scene,gark.tap.cockroach.mathengine.MathEngine) -> recoveryAction
    void eraseData(gark.tap.cockroach.mathengine.MathEngine) -> eraseData
    void attachCorpse(gark.tap.cockroach.mathengine.MathEngine) -> attachCorpse
gark.tap.cockroach.mathengine.movingobjects.MovingObject$1 -> gark.tap.cockroach.mathengine.movingobjects.MovingObject$1:
    gark.tap.cockroach.mathengine.movingobjects.MovingObject this$0 -> this$0
    gark.tap.cockroach.mathengine.MathEngine val$mathEngine -> val$mathEngine
    boolean onAreaTouched(org.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
gark.tap.cockroach.mathengine.movingobjects.MovingObject$2 -> gark.tap.cockroach.mathengine.movingobjects.MovingObject$2:
    gark.tap.cockroach.mathengine.movingobjects.MovingObject this$0 -> this$0
    gark.tap.cockroach.mathengine.MathEngine val$mathEngine -> val$mathEngine
    void run() -> run
gark.tap.cockroach.mathengine.movingobjects.Plane -> gark.tap.cockroach.mathengine.movingobjects.Plane:
    float prevX -> prevX
    gark.tap.cockroach.mathengine.movingobjects.Plane$Bonus[] bonusArray -> bonusArray
    int position -> position
    gark.tap.cockroach.ResourceManager resourceManager -> resourceManager
    void tact(long,long) -> tact
    void calculateRemove(gark.tap.cockroach.mathengine.MathEngine,float,float) -> calculateRemove
    void removeObject(gark.tap.cockroach.mathengine.movingobjects.MovingObject,org.andengine.entity.scene.Scene,gark.tap.cockroach.mathengine.MathEngine) -> removeObject
gark.tap.cockroach.mathengine.movingobjects.Plane$Bonus -> gark.tap.cockroach.mathengine.movingobjects.Plane$Bonus:
    int value -> value
    org.andengine.opengl.texture.region.TextureRegion textureRegion -> textureRegion
    gark.tap.cockroach.mathengine.movingobjects.Plane this$0 -> this$0
    int getValue() -> getValue
    void setValue(int) -> setValue
    org.andengine.opengl.texture.region.TextureRegion getTextureRegion() -> getTextureRegion
    void setTextureRegion(org.andengine.opengl.texture.region.TextureRegion) -> setTextureRegion
gark.tap.cockroach.mathengine.movingobjects.Smoke -> gark.tap.cockroach.mathengine.movingobjects.Smoke:
    float xDistance -> xDistance
    float oneStep -> oneStep
    void tact(long,long) -> tact
gark.tap.cockroach.mathengine.movingobjects.Spider -> gark.tap.cockroach.mathengine.movingobjects.Spider:
    float xDistance -> xDistance
    float oneStep -> oneStep
    void tact(long,long) -> tact
gark.tap.cockroach.mathengine.staticobject.BackgroundObject -> gark.tap.cockroach.mathengine.staticobject.BackgroundObject:
gark.tap.cockroach.mathengine.staticobject.StaticObject -> gark.tap.cockroach.mathengine.staticobject.StaticObject:
    android.graphics.PointF mPoint -> mPoint
    android.graphics.PointF mPointOffset -> mPointOffset
    java.lang.String deadObject -> deadObject
    org.andengine.entity.sprite.Sprite mSprite -> mSprite
    void setRotation(float) -> setRotation
    float posX() -> posX
    float posY() -> posY
    org.andengine.entity.sprite.Sprite getSprite() -> getSprite
    java.lang.String getDeadObject() -> getDeadObject
    void setDeadObject(java.lang.String) -> setDeadObject
    void setPoint(float) -> setPoint
    void tact(long,long) -> tact
gark.tap.cockroach.statistic.StatisticManager -> gark.tap.cockroach.statistic.StatisticManager:
    java.util.HashMap missedMap -> missedMap
    java.util.HashMap killedMap -> killedMap
    gark.tap.cockroach.statistic.StatisticManager$ValueComparator bvc -> bvc
    void prepareStatistic() -> prepareStatistic
    void printResults() -> printResults
    java.util.ArrayList getResultList() -> getResultList
    void addMissedUnit(gark.tap.cockroach.mathengine.movingobjects.MovingObject) -> addMissedUnit
    void addKilledUnit(gark.tap.cockroach.mathengine.movingobjects.MovingObject) -> addKilledUnit
gark.tap.cockroach.statistic.StatisticManager$ValueComparator -> gark.tap.cockroach.statistic.StatisticManager$ValueComparator:
    java.util.Map base -> base
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
gark.tap.cockroach.statistic.StatisticUnit -> gark.tap.cockroach.statistic.StatisticUnit:
    int count -> count
    java.lang.String name -> name
    int getCount() -> getCount
    void setCount(int) -> setCount
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
gark.tap.cockroach.unitgroup.UnionUnits -> gark.tap.cockroach.unitgroup.UnionUnits:
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue getUnionUnits() -> getUnionUnits
    int getHealth() -> getHealth
    long getTimeShift() -> getTimeShift
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnits1 -> gark.tap.cockroach.unitgroup.UnionUnits1:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnits2 -> gark.tap.cockroach.unitgroup.UnionUnits2:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnits3 -> gark.tap.cockroach.unitgroup.UnionUnits3:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnits4 -> gark.tap.cockroach.unitgroup.UnionUnits4:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnits5 -> gark.tap.cockroach.unitgroup.UnionUnits5:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnits6 -> gark.tap.cockroach.unitgroup.UnionUnits6:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnits7 -> gark.tap.cockroach.unitgroup.UnionUnits7:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnitsComposite1 -> gark.tap.cockroach.unitgroup.UnionUnitsComposite1:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnitsComposite10 -> gark.tap.cockroach.unitgroup.UnionUnitsComposite10:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnitsComposite11 -> gark.tap.cockroach.unitgroup.UnionUnitsComposite11:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnitsComposite2 -> gark.tap.cockroach.unitgroup.UnionUnitsComposite2:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnitsComposite3 -> gark.tap.cockroach.unitgroup.UnionUnitsComposite3:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnitsComposite4 -> gark.tap.cockroach.unitgroup.UnionUnitsComposite4:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnitsComposite5 -> gark.tap.cockroach.unitgroup.UnionUnitsComposite5:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnitsComposite6 -> gark.tap.cockroach.unitgroup.UnionUnitsComposite6:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnitsComposite7 -> gark.tap.cockroach.unitgroup.UnionUnitsComposite7:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnitsComposite8 -> gark.tap.cockroach.unitgroup.UnionUnitsComposite8:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.unitgroup.UnionUnitsComposite9 -> gark.tap.cockroach.unitgroup.UnionUnitsComposite9:
    int health -> health
    gark.tap.cockroach.mathengine.MathEngine mathEngine -> mathEngine
    java.util.Queue cockroachs -> cockroachs
    int getHealth() -> getHealth
    java.util.Queue getUnionUnits() -> getUnionUnits
    void clear() -> clear
gark.tap.cockroach.units.BaseObject -> gark.tap.cockroach.units.BaseObject:
    void tact(long,long) -> tact
gark.tap.cockroach.units.MainRoach -> gark.tap.cockroach.units.MainRoach:
    org.andengine.engine.handler.physics.PhysicsHandler mPhysicsHandler -> mPhysicsHandler
    float oneStep -> oneStep
    float angle -> angle
    float VELOCITY_X -> VELOCITY_X
    float VELOCITY_Y -> VELOCITY_Y
    int sign -> sign
    void onManagedUpdate(float) -> onManagedUpdate
gark.tap.cockroach.units.UnitBot -> gark.tap.cockroach.units.UnitBot:
    java.lang.reflect.Constructor constructor -> constructor
    java.lang.Object[] objects -> objects
    int delay -> delay
    boolean isRecovered -> isRecovered
    boolean isRecovered() -> isRecovered
    void setRecovered(boolean) -> setRecovered
    int getDelay() -> getDelay
    void setDelay(int) -> setDelay
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    java.lang.Object[] getObjects() -> getObjects
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.andengine.AndEngine -> org.andengine.AndEngine:
    boolean isDeviceSupported() -> isDeviceSupported
    void checkDeviceSupported() -> checkDeviceSupported
    void checkCodePathSupport() -> checkCodePathSupport
    void checkOpenGLSupport() -> checkOpenGLSupport
    void checkEGLConfigChooserSupport() -> checkEGLConfigChooserSupport
org.andengine.audio.BaseAudioEntity -> org.andengine.audio.BaseAudioEntity:
    org.andengine.audio.IAudioManager mAudioManager -> mAudioManager
    float mLeftVolume -> mLeftVolume
    float mRightVolume -> mRightVolume
    boolean mReleased -> mReleased
    boolean isReleased() -> isReleased
    org.andengine.audio.IAudioManager getAudioManager() -> getAudioManager
    float getActualLeftVolume() -> getActualLeftVolume
    float getActualRightVolume() -> getActualRightVolume
    float getMasterVolume() -> getMasterVolume
    void throwOnReleased() -> throwOnReleased
    float getVolume() -> getVolume
    float getLeftVolume() -> getLeftVolume
    float getRightVolume() -> getRightVolume
    void setVolume(float) -> setVolume
    void setVolume(float,float) -> setVolume
    void onMasterVolumeChanged(float) -> onMasterVolumeChanged
    void play() -> play
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    void setLooping(boolean) -> setLooping
    void release() -> release
    void assertNotReleased() -> assertNotReleased
org.andengine.audio.BaseAudioManager -> org.andengine.audio.BaseAudioManager:
    java.util.ArrayList mAudioEntities -> mAudioEntities
    float mMasterVolume -> mMasterVolume
    float getMasterVolume() -> getMasterVolume
    void setMasterVolume(float) -> setMasterVolume
    void add(org.andengine.audio.IAudioEntity) -> add
    boolean remove(org.andengine.audio.IAudioEntity) -> remove
    void releaseAll() -> releaseAll
org.andengine.audio.IAudioEntity -> org.andengine.audio.IAudioEntity:
    void play() -> play
    void pause() -> pause
    void resume() -> resume
    void stop() -> stop
    float getVolume() -> getVolume
    void setVolume(float) -> setVolume
    float getLeftVolume() -> getLeftVolume
    float getRightVolume() -> getRightVolume
    void setVolume(float,float) -> setVolume
    void onMasterVolumeChanged(float) -> onMasterVolumeChanged
    void setLooping(boolean) -> setLooping
    void release() -> release
org.andengine.audio.IAudioManager -> org.andengine.audio.IAudioManager:
    float getMasterVolume() -> getMasterVolume
    void setMasterVolume(float) -> setMasterVolume
    void add(org.andengine.audio.IAudioEntity) -> add
    boolean remove(org.andengine.audio.IAudioEntity) -> remove
    void releaseAll() -> releaseAll
org.andengine.audio.exception.AudioException -> org.andengine.audio.exception.AudioException:
    long serialVersionUID -> serialVersionUID
org.andengine.audio.music.Music -> org.andengine.audio.music.Music:
    android.media.MediaPlayer mMediaPlayer -> mMediaPlayer
    boolean isPlaying() -> isPlaying
    android.media.MediaPlayer getMediaPlayer() -> getMediaPlayer
    org.andengine.audio.music.MusicManager getAudioManager() -> getAudioManager
    void throwOnReleased() -> throwOnReleased
    void play() -> play
    void stop() -> stop
    void resume() -> resume
    void pause() -> pause
    void setLooping(boolean) -> setLooping
    void setVolume(float,float) -> setVolume
    void onMasterVolumeChanged(float) -> onMasterVolumeChanged
    void release() -> release
    void seekTo(int) -> seekTo
    void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener) -> setOnCompletionListener
    org.andengine.audio.IAudioManager getAudioManager() -> getAudioManager
org.andengine.audio.music.MusicFactory -> org.andengine.audio.music.MusicFactory:
    java.lang.String sAssetBasePath -> sAssetBasePath
    void setAssetBasePath(java.lang.String) -> setAssetBasePath
    java.lang.String getAssetBasePath() -> getAssetBasePath
    void onCreate() -> onCreate
    org.andengine.audio.music.Music createMusicFromFile(org.andengine.audio.music.MusicManager,java.io.File) -> createMusicFromFile
    org.andengine.audio.music.Music createMusicFromAsset(org.andengine.audio.music.MusicManager,android.content.Context,java.lang.String) -> createMusicFromAsset
    org.andengine.audio.music.Music createMusicFromResource(org.andengine.audio.music.MusicManager,android.content.Context,int) -> createMusicFromResource
    org.andengine.audio.music.Music createMusicFromAssetFileDescriptor(org.andengine.audio.music.MusicManager,android.content.res.AssetFileDescriptor) -> createMusicFromAssetFileDescriptor
org.andengine.audio.music.MusicLibrary -> org.andengine.audio.music.MusicLibrary:
org.andengine.audio.music.MusicManager -> org.andengine.audio.music.MusicManager:
org.andengine.audio.music.exception.MusicException -> org.andengine.audio.music.exception.MusicException:
    long serialVersionUID -> serialVersionUID
org.andengine.audio.music.exception.MusicReleasedException -> org.andengine.audio.music.exception.MusicReleasedException:
    long serialVersionUID -> serialVersionUID
org.andengine.audio.sound.Sound -> org.andengine.audio.sound.Sound:
    int mSoundID -> mSoundID
    int mStreamID -> mStreamID
    boolean mLoaded -> mLoaded
    int mLoopCount -> mLoopCount
    float mRate -> mRate
    int getSoundID() -> getSoundID
    int getStreamID() -> getStreamID
    boolean isLoaded() -> isLoaded
    void setLoaded(boolean) -> setLoaded
    void setLoopCount(int) -> setLoopCount
    float getRate() -> getRate
    void setRate(float) -> setRate
    android.media.SoundPool getSoundPool() -> getSoundPool
    org.andengine.audio.sound.SoundManager getAudioManager() -> getAudioManager
    void throwOnReleased() -> throwOnReleased
    void play() -> play
    void stop() -> stop
    void resume() -> resume
    void pause() -> pause
    void release() -> release
    void setLooping(boolean) -> setLooping
    void setVolume(float,float) -> setVolume
    void onMasterVolumeChanged(float) -> onMasterVolumeChanged
    org.andengine.audio.IAudioManager getAudioManager() -> getAudioManager
org.andengine.audio.sound.SoundFactory -> org.andengine.audio.sound.SoundFactory:
    java.lang.String sAssetBasePath -> sAssetBasePath
    void setAssetBasePath(java.lang.String) -> setAssetBasePath
    java.lang.String getAssetBasePath() -> getAssetBasePath
    void onCreate() -> onCreate
    org.andengine.audio.sound.Sound createSoundFromPath(org.andengine.audio.sound.SoundManager,java.lang.String) -> createSoundFromPath
    org.andengine.audio.sound.Sound createSoundFromAsset(org.andengine.audio.sound.SoundManager,android.content.Context,java.lang.String) -> createSoundFromAsset
    org.andengine.audio.sound.Sound createSoundFromResource(org.andengine.audio.sound.SoundManager,android.content.Context,int) -> createSoundFromResource
    org.andengine.audio.sound.Sound createSoundFromFile(org.andengine.audio.sound.SoundManager,java.io.File) -> createSoundFromFile
    org.andengine.audio.sound.Sound createSoundFromAssetFileDescriptor(org.andengine.audio.sound.SoundManager,android.content.res.AssetFileDescriptor) -> createSoundFromAssetFileDescriptor
    org.andengine.audio.sound.Sound createSoundFromFileDescriptor(org.andengine.audio.sound.SoundManager,java.io.FileDescriptor,long,long) -> createSoundFromFileDescriptor
org.andengine.audio.sound.SoundLibrary -> org.andengine.audio.sound.SoundLibrary:
org.andengine.audio.sound.SoundManager -> org.andengine.audio.sound.SoundManager:
    int SOUND_STATUS_OK -> SOUND_STATUS_OK
    int MAX_SIMULTANEOUS_STREAMS_DEFAULT -> MAX_SIMULTANEOUS_STREAMS_DEFAULT
    android.media.SoundPool mSoundPool -> mSoundPool
    android.util.SparseArray mSoundMap -> mSoundMap
    android.media.SoundPool getSoundPool() -> getSoundPool
    void add(org.andengine.audio.sound.Sound) -> add
    boolean remove(org.andengine.audio.sound.Sound) -> remove
    void releaseAll() -> releaseAll
    void onLoadComplete(android.media.SoundPool,int,int) -> onLoadComplete
    void add(org.andengine.audio.IAudioEntity) -> add
    boolean remove(org.andengine.audio.IAudioEntity) -> remove
org.andengine.audio.sound.exception.SoundException -> org.andengine.audio.sound.exception.SoundException:
    long serialVersionUID -> serialVersionUID
org.andengine.audio.sound.exception.SoundReleasedException -> org.andengine.audio.sound.exception.SoundReleasedException:
    long serialVersionUID -> serialVersionUID
org.andengine.engine.Engine -> org.andengine.engine.Engine:
    org.andengine.input.sensor.SensorDelay SENSORDELAY_DEFAULT -> SENSORDELAY_DEFAULT
    int UPDATEHANDLERS_CAPACITY_DEFAULT -> UPDATEHANDLERS_CAPACITY_DEFAULT
    int DRAWHANDLERS_CAPACITY_DEFAULT -> DRAWHANDLERS_CAPACITY_DEFAULT
    boolean mRunning -> mRunning
    boolean mDestroyed -> mDestroyed
    long mLastTick -> mLastTick
    float mSecondsElapsedTotal -> mSecondsElapsedTotal
    org.andengine.engine.Engine$EngineLock mEngineLock -> mEngineLock
    org.andengine.engine.Engine$UpdateThread mUpdateThread -> mUpdateThread
    org.andengine.engine.handler.runnable.RunnableHandler mUpdateThreadRunnableHandler -> mUpdateThreadRunnableHandler
    org.andengine.engine.options.EngineOptions mEngineOptions -> mEngineOptions
    org.andengine.engine.camera.Camera mCamera -> mCamera
    org.andengine.input.touch.controller.ITouchController mTouchController -> mTouchController
    org.andengine.opengl.vbo.VertexBufferObjectManager mVertexBufferObjectManager -> mVertexBufferObjectManager
    org.andengine.opengl.texture.TextureManager mTextureManager -> mTextureManager
    org.andengine.opengl.font.FontManager mFontManager -> mFontManager
    org.andengine.opengl.shader.ShaderProgramManager mShaderProgramManager -> mShaderProgramManager
    org.andengine.audio.sound.SoundManager mSoundManager -> mSoundManager
    org.andengine.audio.music.MusicManager mMusicManager -> mMusicManager
    org.andengine.entity.scene.Scene mScene -> mScene
    android.os.Vibrator mVibrator -> mVibrator
    org.andengine.input.sensor.location.ILocationListener mLocationListener -> mLocationListener
    android.location.Location mLocation -> mLocation
    org.andengine.input.sensor.acceleration.IAccelerationListener mAccelerationListener -> mAccelerationListener
    org.andengine.input.sensor.acceleration.AccelerationData mAccelerationData -> mAccelerationData
    org.andengine.input.sensor.orientation.IOrientationListener mOrientationListener -> mOrientationListener
    org.andengine.input.sensor.orientation.OrientationData mOrientationData -> mOrientationData
    org.andengine.engine.handler.UpdateHandlerList mUpdateHandlers -> mUpdateHandlers
    org.andengine.engine.handler.DrawHandlerList mDrawHandlers -> mDrawHandlers
    int mSurfaceWidth -> mSurfaceWidth
    int mSurfaceHeight -> mSurfaceHeight
    void startUpdateThread() -> startUpdateThread
    boolean isRunning() -> isRunning
    void start() -> start
    void stop() -> stop
    org.andengine.engine.Engine$EngineLock getEngineLock() -> getEngineLock
    org.andengine.entity.scene.Scene getScene() -> getScene
    void setScene(org.andengine.entity.scene.Scene) -> setScene
    org.andengine.engine.options.EngineOptions getEngineOptions() -> getEngineOptions
    org.andengine.engine.camera.Camera getCamera() -> getCamera
    float getSecondsElapsedTotal() -> getSecondsElapsedTotal
    void setSurfaceSize(int,int) -> setSurfaceSize
    void onUpdateCameraSurface() -> onUpdateCameraSurface
    int getSurfaceWidth() -> getSurfaceWidth
    int getSurfaceHeight() -> getSurfaceHeight
    org.andengine.input.touch.controller.ITouchController getTouchController() -> getTouchController
    void setTouchController(org.andengine.input.touch.controller.ITouchController) -> setTouchController
    org.andengine.input.sensor.acceleration.AccelerationData getAccelerationData() -> getAccelerationData
    org.andengine.input.sensor.orientation.OrientationData getOrientationData() -> getOrientationData
    org.andengine.opengl.vbo.VertexBufferObjectManager getVertexBufferObjectManager() -> getVertexBufferObjectManager
    org.andengine.opengl.texture.TextureManager getTextureManager() -> getTextureManager
    org.andengine.opengl.font.FontManager getFontManager() -> getFontManager
    org.andengine.opengl.shader.ShaderProgramManager getShaderProgramManager() -> getShaderProgramManager
    org.andengine.audio.sound.SoundManager getSoundManager() -> getSoundManager
    org.andengine.audio.music.MusicManager getMusicManager() -> getMusicManager
    void registerUpdateHandler(org.andengine.engine.handler.IUpdateHandler) -> registerUpdateHandler
    void unregisterUpdateHandler(org.andengine.engine.handler.IUpdateHandler) -> unregisterUpdateHandler
    void clearUpdateHandlers() -> clearUpdateHandlers
    void registerDrawHandler(org.andengine.engine.handler.IDrawHandler) -> registerDrawHandler
    void unregisterDrawHandler(org.andengine.engine.handler.IDrawHandler) -> unregisterDrawHandler
    void clearDrawHandlers() -> clearDrawHandlers
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onTouchEvent(org.andengine.input.touch.TouchEvent) -> onTouchEvent
    boolean onTouchHUD(org.andengine.engine.camera.Camera,org.andengine.input.touch.TouchEvent) -> onTouchHUD
    boolean onTouchScene(org.andengine.entity.scene.Scene,org.andengine.input.touch.TouchEvent) -> onTouchScene
    void runOnUpdateThread(java.lang.Runnable) -> runOnUpdateThread
    void runOnUpdateThread(java.lang.Runnable,boolean) -> runOnUpdateThread
    void runSafely(java.lang.Runnable) -> runSafely
    void onDestroy() -> onDestroy
    void onReloadResources() -> onReloadResources
    org.andengine.engine.camera.Camera getCameraFromSurfaceTouchEvent(org.andengine.input.touch.TouchEvent) -> getCameraFromSurfaceTouchEvent
    org.andengine.entity.scene.Scene getSceneFromSurfaceTouchEvent(org.andengine.input.touch.TouchEvent) -> getSceneFromSurfaceTouchEvent
    void convertSurfaceToSceneTouchEvent(org.andengine.engine.camera.Camera,org.andengine.input.touch.TouchEvent) -> convertSurfaceToSceneTouchEvent
    void convertSceneToSurfaceTouchEvent(org.andengine.engine.camera.Camera,org.andengine.input.touch.TouchEvent) -> convertSceneToSurfaceTouchEvent
    void onTickUpdate() -> onTickUpdate
    void throwOnDestroyed() -> throwOnDestroyed
    void onUpdate(long) -> onUpdate
    void onUpdateScene(float) -> onUpdateScene
    void onUpdateUpdateHandlers(float) -> onUpdateUpdateHandlers
    void onUpdateDrawHandlers(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onUpdateDrawHandlers
    void onDrawFrame(org.andengine.opengl.util.GLState) -> onDrawFrame
    void onDrawScene(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onDrawScene
    long getNanosecondsElapsed() -> getNanosecondsElapsed
    boolean enableVibrator(android.content.Context) -> enableVibrator
    void vibrate(long) -> vibrate
    void vibrate(long[],int) -> vibrate
    void enableLocationSensor(android.content.Context,org.andengine.input.sensor.location.ILocationListener,org.andengine.input.sensor.location.LocationSensorOptions) -> enableLocationSensor
    void disableLocationSensor(android.content.Context) -> disableLocationSensor
    boolean enableAccelerationSensor(android.content.Context,org.andengine.input.sensor.acceleration.IAccelerationListener) -> enableAccelerationSensor
    boolean enableAccelerationSensor(android.content.Context,org.andengine.input.sensor.acceleration.IAccelerationListener,org.andengine.input.sensor.acceleration.AccelerationSensorOptions) -> enableAccelerationSensor
    boolean disableAccelerationSensor(android.content.Context) -> disableAccelerationSensor
    boolean enableOrientationSensor(android.content.Context,org.andengine.input.sensor.orientation.IOrientationListener) -> enableOrientationSensor
    boolean enableOrientationSensor(android.content.Context,org.andengine.input.sensor.orientation.IOrientationListener,org.andengine.input.sensor.orientation.OrientationSensorOptions) -> enableOrientationSensor
    boolean disableOrientationSensor(android.content.Context) -> disableOrientationSensor
    boolean isSensorSupported(android.hardware.SensorManager,int) -> isSensorSupported
    void registerSelfAsSensorListener(android.hardware.SensorManager,int,org.andengine.input.sensor.SensorDelay) -> registerSelfAsSensorListener
    void unregisterSelfAsSensorListener(android.hardware.SensorManager,int) -> unregisterSelfAsSensorListener
org.andengine.engine.Engine$EngineDestroyedException -> org.andengine.engine.Engine$EngineDestroyedException:
    long serialVersionUID -> serialVersionUID
    org.andengine.engine.Engine this$0 -> this$0
org.andengine.engine.Engine$EngineLock -> org.andengine.engine.Engine$EngineLock:
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.locks.Condition mDrawingCondition -> mDrawingCondition
    java.util.concurrent.atomic.AtomicBoolean mDrawing -> mDrawing
    void notifyCanDraw() -> notifyCanDraw
    void notifyCanUpdate() -> notifyCanUpdate
    void waitUntilCanDraw() -> waitUntilCanDraw
    void waitUntilCanUpdate() -> waitUntilCanUpdate
org.andengine.engine.Engine$UpdateThread -> org.andengine.engine.Engine$UpdateThread:
    org.andengine.engine.Engine mEngine -> mEngine
    org.andengine.engine.handler.runnable.RunnableHandler mRunnableHandler -> mRunnableHandler
    void setEngine(org.andengine.engine.Engine) -> setEngine
    void run() -> run
    void postRunnable(java.lang.Runnable) -> postRunnable
org.andengine.engine.FixedStepEngine -> org.andengine.engine.FixedStepEngine:
    long mStepLength -> mStepLength
    long mSecondsElapsedAccumulator -> mSecondsElapsedAccumulator
    void onUpdate(long) -> onUpdate
org.andengine.engine.LimitedFPSEngine -> org.andengine.engine.LimitedFPSEngine:
    long mPreferredFrameLengthNanoseconds -> mPreferredFrameLengthNanoseconds
    void onUpdate(long) -> onUpdate
org.andengine.engine.camera.BoundCamera -> org.andengine.engine.camera.BoundCamera:
    boolean mBoundsEnabled -> mBoundsEnabled
    float mBoundsXMin -> mBoundsXMin
    float mBoundsXMax -> mBoundsXMax
    float mBoundsYMin -> mBoundsYMin
    float mBoundsYMax -> mBoundsYMax
    float mBoundsCenterX -> mBoundsCenterX
    float mBoundsCenterY -> mBoundsCenterY
    float mBoundsWidth -> mBoundsWidth
    float mBoundsHeight -> mBoundsHeight
    boolean isBoundsEnabled() -> isBoundsEnabled
    void setBoundsEnabled(boolean) -> setBoundsEnabled
    void setBounds(float,float,float,float) -> setBounds
    float getBoundsXMin() -> getBoundsXMin
    float getBoundsXMax() -> getBoundsXMax
    float getBoundsYMin() -> getBoundsYMin
    float getBoundsYMax() -> getBoundsYMax
    float getBoundsWidth() -> getBoundsWidth
    float getBoundsHeight() -> getBoundsHeight
    void setCenter(float,float) -> setCenter
    void ensureInBounds() -> ensureInBounds
    float getBoundedX(float) -> getBoundedX
    float getBoundedY(float) -> getBoundedY
org.andengine.engine.camera.Camera -> org.andengine.engine.camera.Camera:
    float[] VERTICES_TMP -> VERTICES_TMP
    int UPDATEHANDLERS_CAPACITY_DEFAULT -> UPDATEHANDLERS_CAPACITY_DEFAULT
    float mXMin -> mXMin
    float mXMax -> mXMax
    float mYMin -> mYMin
    float mYMax -> mYMax
    float mZNear -> mZNear
    float mZFar -> mZFar
    org.andengine.engine.camera.hud.HUD mHUD -> mHUD
    org.andengine.entity.IEntity mChaseEntity -> mChaseEntity
    float mRotation -> mRotation
    float mCameraSceneRotation -> mCameraSceneRotation
    int mSurfaceX -> mSurfaceX
    int mSurfaceY -> mSurfaceY
    int mSurfaceWidth -> mSurfaceWidth
    int mSurfaceHeight -> mSurfaceHeight
    boolean mResizeOnSurfaceSizeChanged -> mResizeOnSurfaceSizeChanged
    org.andengine.engine.handler.UpdateHandlerList mUpdateHandlers -> mUpdateHandlers
    float getXMin() -> getXMin
    void setXMin(float) -> setXMin
    float getXMax() -> getXMax
    void setXMax(float) -> setXMax
    float getYMin() -> getYMin
    void setYMin(float) -> setYMin
    float getYMax() -> getYMax
    void setYMax(float) -> setYMax
    void set(float,float,float,float) -> set
    float getZNear() -> getZNear
    float getZFar() -> getZFar
    void setZNear(float) -> setZNear
    void setZFar(float) -> setZFar
    void setZClippingPlanes(float,float) -> setZClippingPlanes
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getWidthRaw() -> getWidthRaw
    float getHeightRaw() -> getHeightRaw
    float getCenterX() -> getCenterX
    float getCenterY() -> getCenterY
    void setCenter(float,float) -> setCenter
    void offsetCenter(float,float) -> offsetCenter
    org.andengine.engine.camera.hud.HUD getHUD() -> getHUD
    void setHUD(org.andengine.engine.camera.hud.HUD) -> setHUD
    boolean hasHUD() -> hasHUD
    void setChaseEntity(org.andengine.entity.IEntity) -> setChaseEntity
    boolean isRotated() -> isRotated
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    float getCameraSceneRotation() -> getCameraSceneRotation
    void setCameraSceneRotation(float) -> setCameraSceneRotation
    int getSurfaceX() -> getSurfaceX
    int getSurfaceY() -> getSurfaceY
    int getSurfaceWidth() -> getSurfaceWidth
    int getSurfaceHeight() -> getSurfaceHeight
    void setSurfaceSize(int,int,int,int) -> setSurfaceSize
    boolean isResizeOnSurfaceSizeChanged() -> isResizeOnSurfaceSizeChanged
    void setResizeOnSurfaceSizeChanged(boolean) -> setResizeOnSurfaceSizeChanged
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    void onDrawHUD(org.andengine.opengl.util.GLState) -> onDrawHUD
    void updateChaseEntity() -> updateChaseEntity
    boolean isLineVisible(org.andengine.entity.primitive.Line) -> isLineVisible
    boolean isRectangularShapeVisible(org.andengine.entity.shape.RectangularShape) -> isRectangularShapeVisible
    boolean isRectangularShapeVisible(float,float,float,float,org.andengine.util.adt.transformation.Transformation) -> isRectangularShapeVisible
    void onApplySceneMatrix(org.andengine.opengl.util.GLState) -> onApplySceneMatrix
    void onApplySceneBackgroundMatrix(org.andengine.opengl.util.GLState) -> onApplySceneBackgroundMatrix
    void onApplyCameraSceneMatrix(org.andengine.opengl.util.GLState) -> onApplyCameraSceneMatrix
    void applyRotation(org.andengine.opengl.util.GLState,float,float,float) -> applyRotation
    void convertSceneToCameraSceneTouchEvent(org.andengine.input.touch.TouchEvent) -> convertSceneToCameraSceneTouchEvent
    float[] getCameraSceneCoordinatesFromSceneCoordinates(float,float) -> getCameraSceneCoordinatesFromSceneCoordinates
    float[] getCameraSceneCoordinatesFromSceneCoordinates(float[]) -> getCameraSceneCoordinatesFromSceneCoordinates
    void convertCameraSceneToSceneTouchEvent(org.andengine.input.touch.TouchEvent) -> convertCameraSceneToSceneTouchEvent
    float[] getSceneCoordinatesFromCameraSceneCoordinates(float,float) -> getSceneCoordinatesFromCameraSceneCoordinates
    float[] getSceneCoordinatesFromCameraSceneCoordinates(float[]) -> getSceneCoordinatesFromCameraSceneCoordinates
    void applySceneToCameraSceneOffset(org.andengine.input.touch.TouchEvent) -> applySceneToCameraSceneOffset
    void applySceneToCameraSceneOffset(float[]) -> applySceneToCameraSceneOffset
    void unapplySceneToCameraSceneOffset(org.andengine.input.touch.TouchEvent) -> unapplySceneToCameraSceneOffset
    void unapplySceneToCameraSceneOffset(float[]) -> unapplySceneToCameraSceneOffset
    void applySceneRotation(float[]) -> applySceneRotation
    void applySceneRotation(org.andengine.input.touch.TouchEvent) -> applySceneRotation
    void unapplySceneRotation(float[]) -> unapplySceneRotation
    void unapplySceneRotation(org.andengine.input.touch.TouchEvent) -> unapplySceneRotation
    void applyCameraSceneRotation(float[]) -> applyCameraSceneRotation
    void applyCameraSceneRotation(org.andengine.input.touch.TouchEvent) -> applyCameraSceneRotation
    void unapplyCameraSceneRotation(float[]) -> unapplyCameraSceneRotation
    void unapplyCameraSceneRotation(org.andengine.input.touch.TouchEvent) -> unapplyCameraSceneRotation
    void convertSurfaceToSceneTouchEvent(org.andengine.input.touch.TouchEvent,int,int) -> convertSurfaceToSceneTouchEvent
    void convertAxisAlignedSurfaceToSceneTouchEvent(org.andengine.input.touch.TouchEvent,float,float) -> convertAxisAlignedSurfaceToSceneTouchEvent
    void convertSceneToSurfaceTouchEvent(org.andengine.input.touch.TouchEvent,int,int) -> convertSceneToSurfaceTouchEvent
    void convertAxisAlignedSceneToSurfaceTouchEvent(org.andengine.input.touch.TouchEvent,int,int) -> convertAxisAlignedSceneToSurfaceTouchEvent
    void registerUpdateHandler(org.andengine.engine.handler.IUpdateHandler) -> registerUpdateHandler
    boolean unregisterUpdateHandler(org.andengine.engine.handler.IUpdateHandler) -> unregisterUpdateHandler
    boolean unregisterUpdateHandlers(org.andengine.engine.handler.IUpdateHandler$IUpdateHandlerMatcher) -> unregisterUpdateHandlers
    void clearUpdateHandlers() -> clearUpdateHandlers
    void allocateUpdateHandlers() -> allocateUpdateHandlers
    void onSurfaceSizeInitialized(int,int,int,int) -> onSurfaceSizeInitialized
    void onSurfaceSizeChanged(int,int,int,int,int,int,int,int) -> onSurfaceSizeChanged
org.andengine.engine.camera.CameraFactory -> org.andengine.engine.camera.CameraFactory:
    org.andengine.engine.camera.Camera createPixelPerfectCamera(android.content.Context,float,float) -> createPixelPerfectCamera
    android.util.DisplayMetrics getDisplayMetrics(android.content.Context) -> getDisplayMetrics
org.andengine.engine.camera.SmoothCamera -> org.andengine.engine.camera.SmoothCamera:
    float mMaxVelocityX -> mMaxVelocityX
    float mMaxVelocityY -> mMaxVelocityY
    float mMaxZoomFactorChange -> mMaxZoomFactorChange
    float mTargetCenterX -> mTargetCenterX
    float mTargetCenterY -> mTargetCenterY
    float mTargetZoomFactor -> mTargetZoomFactor
    float getTargetCenterX() -> getTargetCenterX
    float getTargetCenterY() -> getTargetCenterY
    float getTargetZoomFactor() -> getTargetZoomFactor
    void setCenter(float,float) -> setCenter
    void setCenterDirect(float,float) -> setCenterDirect
    void setZoomFactor(float) -> setZoomFactor
    void setZoomFactorDirect(float) -> setZoomFactorDirect
    float getMaxVelocityX() -> getMaxVelocityX
    void setMaxVelocityX(float) -> setMaxVelocityX
    float getMaxVelocityY() -> getMaxVelocityY
    void setMaxVelocityY(float) -> setMaxVelocityY
    void setMaxVelocity(float,float) -> setMaxVelocity
    float getMaxZoomFactorChange() -> getMaxZoomFactorChange
    void setMaxZoomFactorChange(float) -> setMaxZoomFactorChange
    void onSmoothZoomStarted() -> onSmoothZoomStarted
    void onSmoothZoomFinished() -> onSmoothZoomFinished
    void onUpdate(float) -> onUpdate
    float limitToMaxVelocityX(float,float) -> limitToMaxVelocityX
    float limitToMaxVelocityY(float,float) -> limitToMaxVelocityY
    float limitToMaxZoomFactorChange(float,float) -> limitToMaxZoomFactorChange
org.andengine.engine.camera.ZoomCamera -> org.andengine.engine.camera.ZoomCamera:
    float mZoomFactor -> mZoomFactor
    float getZoomFactor() -> getZoomFactor
    void setZoomFactor(float) -> setZoomFactor
    float getXMin() -> getXMin
    float getXMax() -> getXMax
    float getYMin() -> getYMin
    float getYMax() -> getYMax
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void applySceneToCameraSceneOffset(org.andengine.input.touch.TouchEvent) -> applySceneToCameraSceneOffset
    void applySceneToCameraSceneOffset(float[]) -> applySceneToCameraSceneOffset
    void unapplySceneToCameraSceneOffset(org.andengine.input.touch.TouchEvent) -> unapplySceneToCameraSceneOffset
    void unapplySceneToCameraSceneOffset(float[]) -> unapplySceneToCameraSceneOffset
org.andengine.engine.camera.hud.HUD -> org.andengine.engine.camera.hud.HUD:
org.andengine.engine.camera.hud.controls.AnalogOnScreenControl -> org.andengine.engine.camera.hud.controls.AnalogOnScreenControl:
    org.andengine.input.touch.detector.ClickDetector mClickDetector -> mClickDetector
    org.andengine.engine.camera.hud.controls.AnalogOnScreenControl$IAnalogOnScreenControlListener getOnScreenControlListener() -> getOnScreenControlListener
    void setOnControlClickEnabled(boolean) -> setOnControlClickEnabled
    void setOnControlClickMaximumMilliseconds(long) -> setOnControlClickMaximumMilliseconds
    void onClick(org.andengine.input.touch.detector.ClickDetector,int,float,float) -> onClick
    boolean onHandleControlBaseTouched(org.andengine.input.touch.TouchEvent,float,float) -> onHandleControlBaseTouched
    void onUpdateControlKnob(float,float) -> onUpdateControlKnob
    org.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener getOnScreenControlListener() -> getOnScreenControlListener
org.andengine.engine.camera.hud.controls.AnalogOnScreenControl$IAnalogOnScreenControlListener -> org.andengine.engine.camera.hud.controls.AnalogOnScreenControl$IAnalogOnScreenControlListener:
    void onControlClick(org.andengine.engine.camera.hud.controls.AnalogOnScreenControl) -> onControlClick
org.andengine.engine.camera.hud.controls.BaseOnScreenControl -> org.andengine.engine.camera.hud.controls.BaseOnScreenControl:
    int INVALID_POINTER_ID -> INVALID_POINTER_ID
    org.andengine.entity.sprite.Sprite mControlBase -> mControlBase
    org.andengine.entity.sprite.Sprite mControlKnob -> mControlKnob
    float mControlValueX -> mControlValueX
    float mControlValueY -> mControlValueY
    org.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener mOnScreenControlListener -> mOnScreenControlListener
    int mActivePointerID -> mActivePointerID
    org.andengine.entity.sprite.Sprite getControlBase() -> getControlBase
    org.andengine.entity.sprite.Sprite getControlKnob() -> getControlKnob
    org.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener getOnScreenControlListener() -> getOnScreenControlListener
    boolean onSceneTouchEvent(org.andengine.entity.scene.Scene,org.andengine.input.touch.TouchEvent) -> onSceneTouchEvent
    void refreshControlKnobPosition() -> refreshControlKnobPosition
    void onHandleControlBaseLeft() -> onHandleControlBaseLeft
    void onHandleControlKnobReleased() -> onHandleControlKnobReleased
    boolean onHandleControlBaseTouched(org.andengine.input.touch.TouchEvent,float,float) -> onHandleControlBaseTouched
    void updateControlKnob(float,float) -> updateControlKnob
    void onUpdateControlKnob(float,float) -> onUpdateControlKnob
    org.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener access$0(org.andengine.engine.camera.hud.controls.BaseOnScreenControl) -> access$0
    float access$1(org.andengine.engine.camera.hud.controls.BaseOnScreenControl) -> access$1
    float access$2(org.andengine.engine.camera.hud.controls.BaseOnScreenControl) -> access$2
org.andengine.engine.camera.hud.controls.BaseOnScreenControl$1 -> org.andengine.engine.camera.hud.controls.BaseOnScreenControl$1:
    org.andengine.engine.camera.hud.controls.BaseOnScreenControl this$0 -> this$0
    boolean onAreaTouched(org.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
org.andengine.engine.camera.hud.controls.BaseOnScreenControl$2 -> org.andengine.engine.camera.hud.controls.BaseOnScreenControl$2:
    org.andengine.engine.camera.hud.controls.BaseOnScreenControl this$0 -> this$0
    void onTimePassed(org.andengine.engine.handler.timer.TimerHandler) -> onTimePassed
org.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener -> org.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener:
    void onControlChange(org.andengine.engine.camera.hud.controls.BaseOnScreenControl,float,float) -> onControlChange
org.andengine.engine.camera.hud.controls.DigitalOnScreenControl -> org.andengine.engine.camera.hud.controls.DigitalOnScreenControl:
    float EXTENT_SIDE -> EXTENT_SIDE
    float EXTENT_DIAGONAL -> EXTENT_DIAGONAL
    float ANGLE_DELTA -> ANGLE_DELTA
    boolean mAllowDiagonal -> mAllowDiagonal
    boolean isAllowDiagonal() -> isAllowDiagonal
    void setAllowDiagonal(boolean) -> setAllowDiagonal
    void onUpdateControlKnob(float,float) -> onUpdateControlKnob
    boolean testDiagonalAngle(float,float) -> testDiagonalAngle
org.andengine.engine.handler.BaseEntityUpdateHandler -> org.andengine.engine.handler.BaseEntityUpdateHandler:
    org.andengine.entity.IEntity mEntity -> mEntity
    org.andengine.entity.IEntity getEntity() -> getEntity
    void setEntity(org.andengine.entity.IEntity) -> setEntity
    void onUpdate(float,org.andengine.entity.IEntity) -> onUpdate
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.andengine.engine.handler.DrawHandlerList -> org.andengine.engine.handler.DrawHandlerList:
    long serialVersionUID -> serialVersionUID
    void onDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onDraw
org.andengine.engine.handler.IDrawHandler -> org.andengine.engine.handler.IDrawHandler:
    void onDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onDraw
org.andengine.engine.handler.IUpdateHandler -> org.andengine.engine.handler.IUpdateHandler:
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.andengine.engine.handler.IUpdateHandler$IUpdateHandlerMatcher -> org.andengine.engine.handler.IUpdateHandler$IUpdateHandlerMatcher:
org.andengine.engine.handler.UpdateHandlerList -> org.andengine.engine.handler.UpdateHandlerList:
    long serialVersionUID -> serialVersionUID
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.andengine.engine.handler.collision.CollisionHandler -> org.andengine.engine.handler.collision.CollisionHandler:
    org.andengine.engine.handler.collision.ICollisionCallback mCollisionCallback -> mCollisionCallback
    org.andengine.entity.shape.IShape mCheckShape -> mCheckShape
    java.util.ArrayList mTargetStaticEntities -> mTargetStaticEntities
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.andengine.engine.handler.collision.ICollisionCallback -> org.andengine.engine.handler.collision.ICollisionCallback:
    boolean onCollision(org.andengine.entity.shape.IShape,org.andengine.entity.shape.IShape) -> onCollision
org.andengine.engine.handler.physics.PhysicsHandler -> org.andengine.engine.handler.physics.PhysicsHandler:
    boolean mEnabled -> mEnabled
    float mAccelerationX -> mAccelerationX
    float mAccelerationY -> mAccelerationY
    float mVelocityX -> mVelocityX
    float mVelocityY -> mVelocityY
    float mAngularVelocity -> mAngularVelocity
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    float getVelocityX() -> getVelocityX
    float getVelocityY() -> getVelocityY
    void setVelocityX(float) -> setVelocityX
    void setVelocityY(float) -> setVelocityY
    void setVelocity(float) -> setVelocity
    void setVelocity(float,float) -> setVelocity
    float getAccelerationX() -> getAccelerationX
    float getAccelerationY() -> getAccelerationY
    void setAccelerationX(float) -> setAccelerationX
    void setAccelerationY(float) -> setAccelerationY
    void setAcceleration(float,float) -> setAcceleration
    void setAcceleration(float) -> setAcceleration
    void accelerate(float,float) -> accelerate
    float getAngularVelocity() -> getAngularVelocity
    void setAngularVelocity(float) -> setAngularVelocity
    void onUpdate(float,org.andengine.entity.IEntity) -> onUpdate
    void reset() -> reset
org.andengine.engine.handler.runnable.RunnableHandler -> org.andengine.engine.handler.runnable.RunnableHandler:
    java.util.ArrayList mRunnables -> mRunnables
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    void postRunnable(java.lang.Runnable) -> postRunnable
org.andengine.engine.handler.timer.ITimerCallback -> org.andengine.engine.handler.timer.ITimerCallback:
    void onTimePassed(org.andengine.engine.handler.timer.TimerHandler) -> onTimePassed
org.andengine.engine.handler.timer.TimerHandler -> org.andengine.engine.handler.timer.TimerHandler:
    float mTimerSeconds -> mTimerSeconds
    float mTimerSecondsElapsed -> mTimerSecondsElapsed
    boolean mTimerCallbackTriggered -> mTimerCallbackTriggered
    org.andengine.engine.handler.timer.ITimerCallback mTimerCallback -> mTimerCallback
    boolean mAutoReset -> mAutoReset
    boolean isAutoReset() -> isAutoReset
    void setAutoReset(boolean) -> setAutoReset
    void setTimerSeconds(float) -> setTimerSeconds
    float getTimerSeconds() -> getTimerSeconds
    float getTimerSecondsElapsed() -> getTimerSecondsElapsed
    boolean isTimerCallbackTriggered() -> isTimerCallbackTriggered
    void setTimerCallbackTriggered(boolean) -> setTimerCallbackTriggered
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.andengine.engine.options.AudioOptions -> org.andengine.engine.options.AudioOptions:
    org.andengine.engine.options.SoundOptions mSoundOptions -> mSoundOptions
    org.andengine.engine.options.MusicOptions mMusicOptions -> mMusicOptions
    org.andengine.engine.options.SoundOptions getSoundOptions() -> getSoundOptions
    org.andengine.engine.options.MusicOptions getMusicOptions() -> getMusicOptions
    boolean needsSound() -> needsSound
    org.andengine.engine.options.AudioOptions setNeedsSound(boolean) -> setNeedsSound
    boolean needsMusic() -> needsMusic
    org.andengine.engine.options.AudioOptions setNeedsMusic(boolean) -> setNeedsMusic
org.andengine.engine.options.EngineOptions -> org.andengine.engine.options.EngineOptions:
    org.andengine.engine.Engine$EngineLock mEngineLock -> mEngineLock
    boolean mFullscreen -> mFullscreen
    org.andengine.engine.options.ScreenOrientation mScreenOrientation -> mScreenOrientation
    org.andengine.engine.options.resolutionpolicy.IResolutionPolicy mResolutionPolicy -> mResolutionPolicy
    org.andengine.engine.camera.Camera mCamera -> mCamera
    org.andengine.engine.options.TouchOptions mTouchOptions -> mTouchOptions
    org.andengine.engine.options.AudioOptions mAudioOptions -> mAudioOptions
    org.andengine.engine.options.RenderOptions mRenderOptions -> mRenderOptions
    org.andengine.engine.options.WakeLockOptions mWakeLockOptions -> mWakeLockOptions
    org.andengine.engine.Engine$UpdateThread mUpdateThread -> mUpdateThread
    int mUpdateThreadPriority -> mUpdateThreadPriority
    boolean hasEngineLock() -> hasEngineLock
    org.andengine.engine.Engine$EngineLock getEngineLock() -> getEngineLock
    void setEngineLock(org.andengine.engine.Engine$EngineLock) -> setEngineLock
    org.andengine.engine.options.TouchOptions getTouchOptions() -> getTouchOptions
    org.andengine.engine.options.AudioOptions getAudioOptions() -> getAudioOptions
    org.andengine.engine.options.RenderOptions getRenderOptions() -> getRenderOptions
    boolean isFullscreen() -> isFullscreen
    org.andengine.engine.options.ScreenOrientation getScreenOrientation() -> getScreenOrientation
    org.andengine.engine.options.resolutionpolicy.IResolutionPolicy getResolutionPolicy() -> getResolutionPolicy
    org.andengine.engine.camera.Camera getCamera() -> getCamera
    boolean hasUpdateThread() -> hasUpdateThread
    org.andengine.engine.Engine$UpdateThread getUpdateThread() -> getUpdateThread
    void setUpdateThread(org.andengine.engine.Engine$UpdateThread) -> setUpdateThread
    int getUpdateThreadPriority() -> getUpdateThreadPriority
    void setUpdateThreadPriority(int) -> setUpdateThreadPriority
    org.andengine.engine.options.WakeLockOptions getWakeLockOptions() -> getWakeLockOptions
    org.andengine.engine.options.EngineOptions setWakeLockOptions(org.andengine.engine.options.WakeLockOptions) -> setWakeLockOptions
org.andengine.engine.options.MusicOptions -> org.andengine.engine.options.MusicOptions:
    boolean mNeedsMusic -> mNeedsMusic
    boolean needsMusic() -> needsMusic
    org.andengine.engine.options.MusicOptions setNeedsMusic(boolean) -> setNeedsMusic
org.andengine.engine.options.RenderOptions -> org.andengine.engine.options.RenderOptions:
    boolean mMultiSampling -> mMultiSampling
    boolean mDithering -> mDithering
    boolean isMultiSampling() -> isMultiSampling
    void setMultiSampling(boolean) -> setMultiSampling
    boolean isDithering() -> isDithering
    void setDithering(boolean) -> setDithering
org.andengine.engine.options.ScreenOrientation -> org.andengine.engine.options.ScreenOrientation:
    org.andengine.engine.options.ScreenOrientation LANDSCAPE_FIXED -> LANDSCAPE_FIXED
    org.andengine.engine.options.ScreenOrientation LANDSCAPE_SENSOR -> LANDSCAPE_SENSOR
    org.andengine.engine.options.ScreenOrientation PORTRAIT_FIXED -> PORTRAIT_FIXED
    org.andengine.engine.options.ScreenOrientation PORTRAIT_SENSOR -> PORTRAIT_SENSOR
    org.andengine.engine.options.ScreenOrientation[] ENUM$VALUES -> ENUM$VALUES
    org.andengine.engine.options.ScreenOrientation[] values() -> values
    org.andengine.engine.options.ScreenOrientation valueOf(java.lang.String) -> valueOf
org.andengine.engine.options.SoundOptions -> org.andengine.engine.options.SoundOptions:
    boolean mNeedsSound -> mNeedsSound
    int mMaxSimultaneousStreams -> mMaxSimultaneousStreams
    boolean needsSound() -> needsSound
    org.andengine.engine.options.SoundOptions setNeedsSound(boolean) -> setNeedsSound
    int getMaxSimultaneousStreams() -> getMaxSimultaneousStreams
    org.andengine.engine.options.SoundOptions setMaxSimultaneousStreams(int) -> setMaxSimultaneousStreams
org.andengine.engine.options.TouchOptions -> org.andengine.engine.options.TouchOptions:
    long TOUCHEVENT_INTERVAL_MILLISECONDS_DEFAULT -> TOUCHEVENT_INTERVAL_MILLISECONDS_DEFAULT
    boolean mNeedsMultiTouch -> mNeedsMultiTouch
    long mTouchEventIntervalMilliseconds -> mTouchEventIntervalMilliseconds
    boolean needsMultiTouch() -> needsMultiTouch
    org.andengine.engine.options.TouchOptions setNeedsMultiTouch(boolean) -> setNeedsMultiTouch
    long getTouchEventIntervalMilliseconds() -> getTouchEventIntervalMilliseconds
    void setTouchEventIntervalMilliseconds(long) -> setTouchEventIntervalMilliseconds
org.andengine.engine.options.WakeLockOptions -> org.andengine.engine.options.WakeLockOptions:
    org.andengine.engine.options.WakeLockOptions BRIGHT -> BRIGHT
    org.andengine.engine.options.WakeLockOptions SCREEN_BRIGHT -> SCREEN_BRIGHT
    org.andengine.engine.options.WakeLockOptions SCREEN_DIM -> SCREEN_DIM
    org.andengine.engine.options.WakeLockOptions SCREEN_ON -> SCREEN_ON
    int mFlag -> mFlag
    org.andengine.engine.options.WakeLockOptions[] ENUM$VALUES -> ENUM$VALUES
    int getFlag() -> getFlag
    org.andengine.engine.options.WakeLockOptions[] values() -> values
    org.andengine.engine.options.WakeLockOptions valueOf(java.lang.String) -> valueOf
org.andengine.engine.options.resolutionpolicy.BaseResolutionPolicy -> org.andengine.engine.options.resolutionpolicy.BaseResolutionPolicy:
    void throwOnNotMeasureSpecEXACTLY(int,int) -> throwOnNotMeasureSpecEXACTLY
org.andengine.engine.options.resolutionpolicy.FillResolutionPolicy -> org.andengine.engine.options.resolutionpolicy.FillResolutionPolicy:
    void onMeasure(org.andengine.opengl.view.RenderSurfaceView,int,int) -> onMeasure
org.andengine.engine.options.resolutionpolicy.FixedResolutionPolicy -> org.andengine.engine.options.resolutionpolicy.FixedResolutionPolicy:
    int mWidth -> mWidth
    int mHeight -> mHeight
    void onMeasure(org.andengine.opengl.view.RenderSurfaceView,int,int) -> onMeasure
org.andengine.engine.options.resolutionpolicy.IResolutionPolicy -> org.andengine.engine.options.resolutionpolicy.IResolutionPolicy:
    void onMeasure(org.andengine.opengl.view.RenderSurfaceView,int,int) -> onMeasure
org.andengine.engine.options.resolutionpolicy.RatioResolutionPolicy -> org.andengine.engine.options.resolutionpolicy.RatioResolutionPolicy:
    float mRatio -> mRatio
    void onMeasure(org.andengine.opengl.view.RenderSurfaceView,int,int) -> onMeasure
org.andengine.engine.options.resolutionpolicy.RelativeResolutionPolicy -> org.andengine.engine.options.resolutionpolicy.RelativeResolutionPolicy:
    float mWidthScale -> mWidthScale
    float mHeightScale -> mHeightScale
    void onMeasure(org.andengine.opengl.view.RenderSurfaceView,int,int) -> onMeasure
org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine -> org.andengine.engine.splitscreen.DoubleSceneSplitScreenEngine:
    org.andengine.entity.scene.Scene mSecondScene -> mSecondScene
    org.andengine.engine.camera.Camera mSecondCamera -> mSecondCamera
    org.andengine.engine.camera.Camera getCamera() -> getCamera
    org.andengine.engine.camera.Camera getFirstCamera() -> getFirstCamera
    org.andengine.engine.camera.Camera getSecondCamera() -> getSecondCamera
    org.andengine.entity.scene.Scene getScene() -> getScene
    org.andengine.entity.scene.Scene getFirstScene() -> getFirstScene
    org.andengine.entity.scene.Scene getSecondScene() -> getSecondScene
    void setScene(org.andengine.entity.scene.Scene) -> setScene
    void setFirstScene(org.andengine.entity.scene.Scene) -> setFirstScene
    void setSecondScene(org.andengine.entity.scene.Scene) -> setSecondScene
    void onDrawScene(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onDrawScene
    org.andengine.engine.camera.Camera getCameraFromSurfaceTouchEvent(org.andengine.input.touch.TouchEvent) -> getCameraFromSurfaceTouchEvent
    org.andengine.entity.scene.Scene getSceneFromSurfaceTouchEvent(org.andengine.input.touch.TouchEvent) -> getSceneFromSurfaceTouchEvent
    void onUpdateScene(float) -> onUpdateScene
    void convertSurfaceToSceneTouchEvent(org.andengine.engine.camera.Camera,org.andengine.input.touch.TouchEvent) -> convertSurfaceToSceneTouchEvent
    void onUpdateUpdateHandlers(float) -> onUpdateUpdateHandlers
    void onUpdateCameraSurface() -> onUpdateCameraSurface
org.andengine.engine.splitscreen.SingleSceneSplitScreenEngine -> org.andengine.engine.splitscreen.SingleSceneSplitScreenEngine:
    org.andengine.engine.camera.Camera mSecondCamera -> mSecondCamera
    org.andengine.engine.camera.Camera getCamera() -> getCamera
    org.andengine.engine.camera.Camera getFirstCamera() -> getFirstCamera
    org.andengine.engine.camera.Camera getSecondCamera() -> getSecondCamera
    void onDrawScene(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onDrawScene
    org.andengine.engine.camera.Camera getCameraFromSurfaceTouchEvent(org.andengine.input.touch.TouchEvent) -> getCameraFromSurfaceTouchEvent
    void convertSurfaceToSceneTouchEvent(org.andengine.engine.camera.Camera,org.andengine.input.touch.TouchEvent) -> convertSurfaceToSceneTouchEvent
    void onUpdateUpdateHandlers(float) -> onUpdateUpdateHandlers
    void onUpdateCameraSurface() -> onUpdateCameraSurface
org.andengine.entity.Entity -> org.andengine.entity.Entity:
    int CHILDREN_CAPACITY_DEFAULT -> CHILDREN_CAPACITY_DEFAULT
    int ENTITYMODIFIERS_CAPACITY_DEFAULT -> ENTITYMODIFIERS_CAPACITY_DEFAULT
    int UPDATEHANDLERS_CAPACITY_DEFAULT -> UPDATEHANDLERS_CAPACITY_DEFAULT
    float[] VERTICES_SCENE_TO_LOCAL_TMP -> VERTICES_SCENE_TO_LOCAL_TMP
    float[] VERTICES_LOCAL_TO_SCENE_TMP -> VERTICES_LOCAL_TO_SCENE_TMP
    org.andengine.util.call.ParameterCallable PARAMETERCALLABLE_DETACHCHILD -> PARAMETERCALLABLE_DETACHCHILD
    boolean mDisposed -> mDisposed
    boolean mVisible -> mVisible
    boolean mCullingEnabled -> mCullingEnabled
    boolean mIgnoreUpdate -> mIgnoreUpdate
    boolean mChildrenVisible -> mChildrenVisible
    boolean mChildrenIgnoreUpdate -> mChildrenIgnoreUpdate
    boolean mChildrenSortPending -> mChildrenSortPending
    int mTag -> mTag
    int mZIndex -> mZIndex
    org.andengine.entity.IEntity mParent -> mParent
    org.andengine.util.adt.list.SmartList mChildren -> mChildren
    org.andengine.entity.modifier.EntityModifierList mEntityModifiers -> mEntityModifiers
    org.andengine.engine.handler.UpdateHandlerList mUpdateHandlers -> mUpdateHandlers
    org.andengine.util.color.Color mColor -> mColor
    float mX -> mX
    float mY -> mY
    float mRotation -> mRotation
    float mRotationCenterX -> mRotationCenterX
    float mRotationCenterY -> mRotationCenterY
    float mScaleX -> mScaleX
    float mScaleY -> mScaleY
    float mScaleCenterX -> mScaleCenterX
    float mScaleCenterY -> mScaleCenterY
    float mSkewX -> mSkewX
    float mSkewY -> mSkewY
    float mSkewCenterX -> mSkewCenterX
    float mSkewCenterY -> mSkewCenterY
    boolean mLocalToParentTransformationDirty -> mLocalToParentTransformationDirty
    boolean mParentToLocalTransformationDirty -> mParentToLocalTransformationDirty
    org.andengine.util.adt.transformation.Transformation mLocalToParentTransformation -> mLocalToParentTransformation
    org.andengine.util.adt.transformation.Transformation mParentToLocalTransformation -> mParentToLocalTransformation
    org.andengine.util.adt.transformation.Transformation mLocalToSceneTransformation -> mLocalToSceneTransformation
    org.andengine.util.adt.transformation.Transformation mSceneToLocalTransformation -> mSceneToLocalTransformation
    java.lang.Object mUserData -> mUserData
    void onUpdateColor() -> onUpdateColor
    boolean isDisposed() -> isDisposed
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    boolean isCullingEnabled() -> isCullingEnabled
    void setCullingEnabled(boolean) -> setCullingEnabled
    boolean isCulled(org.andengine.engine.camera.Camera) -> isCulled
    boolean isChildrenVisible() -> isChildrenVisible
    void setChildrenVisible(boolean) -> setChildrenVisible
    boolean isIgnoreUpdate() -> isIgnoreUpdate
    void setIgnoreUpdate(boolean) -> setIgnoreUpdate
    boolean isChildrenIgnoreUpdate() -> isChildrenIgnoreUpdate
    void setChildrenIgnoreUpdate(boolean) -> setChildrenIgnoreUpdate
    boolean hasParent() -> hasParent
    org.andengine.entity.IEntity getParent() -> getParent
    void setParent(org.andengine.entity.IEntity) -> setParent
    int getTag() -> getTag
    void setTag(int) -> setTag
    int getZIndex() -> getZIndex
    void setZIndex(int) -> setZIndex
    float getX() -> getX
    float getY() -> getY
    void setX(float) -> setX
    void setY(float) -> setY
    void setPosition(org.andengine.entity.IEntity) -> setPosition
    void setPosition(float,float) -> setPosition
    float getRotation() -> getRotation
    boolean isRotated() -> isRotated
    void setRotation(float) -> setRotation
    float getRotationCenterX() -> getRotationCenterX
    float getRotationCenterY() -> getRotationCenterY
    void setRotationCenterX(float) -> setRotationCenterX
    void setRotationCenterY(float) -> setRotationCenterY
    void setRotationCenter(float,float) -> setRotationCenter
    boolean isScaled() -> isScaled
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    void setScaleX(float) -> setScaleX
    void setScaleY(float) -> setScaleY
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    float getScaleCenterX() -> getScaleCenterX
    float getScaleCenterY() -> getScaleCenterY
    void setScaleCenterX(float) -> setScaleCenterX
    void setScaleCenterY(float) -> setScaleCenterY
    void setScaleCenter(float,float) -> setScaleCenter
    boolean isSkewed() -> isSkewed
    float getSkewX() -> getSkewX
    float getSkewY() -> getSkewY
    void setSkewX(float) -> setSkewX
    void setSkewY(float) -> setSkewY
    void setSkew(float) -> setSkew
    void setSkew(float,float) -> setSkew
    float getSkewCenterX() -> getSkewCenterX
    float getSkewCenterY() -> getSkewCenterY
    void setSkewCenterX(float) -> setSkewCenterX
    void setSkewCenterY(float) -> setSkewCenterY
    void setSkewCenter(float,float) -> setSkewCenter
    boolean isRotatedOrScaledOrSkewed() -> isRotatedOrScaledOrSkewed
    float getRed() -> getRed
    float getGreen() -> getGreen
    float getBlue() -> getBlue
    float getAlpha() -> getAlpha
    org.andengine.util.color.Color getColor() -> getColor
    void setColor(org.andengine.util.color.Color) -> setColor
    void setRed(float) -> setRed
    void setGreen(float) -> setGreen
    void setBlue(float) -> setBlue
    void setAlpha(float) -> setAlpha
    void setColor(float,float,float) -> setColor
    void setColor(float,float,float,float) -> setColor
    int getChildCount() -> getChildCount
    org.andengine.entity.IEntity getChildByTag(int) -> getChildByTag
    org.andengine.entity.IEntity getChildByIndex(int) -> getChildByIndex
    org.andengine.entity.IEntity getChildByMatcher(org.andengine.entity.IEntityMatcher) -> getChildByMatcher
    org.andengine.entity.IEntity getFirstChild() -> getFirstChild
    org.andengine.entity.IEntity getLastChild() -> getLastChild
    java.util.ArrayList query(org.andengine.entity.IEntityMatcher) -> query
    org.andengine.entity.IEntity queryFirst(org.andengine.entity.IEntityMatcher) -> queryFirst
    org.andengine.entity.IEntity queryFirstForSubclass(org.andengine.entity.IEntityMatcher) -> queryFirstForSubclass
    java.util.List query(org.andengine.entity.IEntityMatcher,java.util.List) -> query
    java.util.ArrayList queryForSubclass(org.andengine.entity.IEntityMatcher) -> queryForSubclass
    java.util.List queryForSubclass(org.andengine.entity.IEntityMatcher,java.util.List) -> queryForSubclass
    boolean detachSelf() -> detachSelf
    void detachChildren() -> detachChildren
    void attachChild(org.andengine.entity.IEntity) -> attachChild
    void sortChildren() -> sortChildren
    void sortChildren(boolean) -> sortChildren
    void sortChildren(org.andengine.entity.IEntityComparator) -> sortChildren
    boolean detachChild(org.andengine.entity.IEntity) -> detachChild
    org.andengine.entity.IEntity detachChild(int) -> detachChild
    org.andengine.entity.IEntity detachChild(org.andengine.entity.IEntityMatcher) -> detachChild
    boolean detachChildren(org.andengine.entity.IEntityMatcher) -> detachChildren
    void callOnChildren(org.andengine.entity.IEntityParameterCallable) -> callOnChildren
    void callOnChildren(org.andengine.entity.IEntityParameterCallable,org.andengine.entity.IEntityMatcher) -> callOnChildren
    void registerUpdateHandler(org.andengine.engine.handler.IUpdateHandler) -> registerUpdateHandler
    boolean unregisterUpdateHandler(org.andengine.engine.handler.IUpdateHandler) -> unregisterUpdateHandler
    boolean unregisterUpdateHandlers(org.andengine.engine.handler.IUpdateHandler$IUpdateHandlerMatcher) -> unregisterUpdateHandlers
    int getUpdateHandlerCount() -> getUpdateHandlerCount
    void clearUpdateHandlers() -> clearUpdateHandlers
    void registerEntityModifier(org.andengine.entity.modifier.IEntityModifier) -> registerEntityModifier
    boolean unregisterEntityModifier(org.andengine.entity.modifier.IEntityModifier) -> unregisterEntityModifier
    boolean unregisterEntityModifiers(org.andengine.entity.modifier.IEntityModifier$IEntityModifierMatcher) -> unregisterEntityModifiers
    int getEntityModifierCount() -> getEntityModifierCount
    void clearEntityModifiers() -> clearEntityModifiers
    float[] getSceneCenterCoordinates() -> getSceneCenterCoordinates
    float[] getSceneCenterCoordinates(float[]) -> getSceneCenterCoordinates
    org.andengine.util.adt.transformation.Transformation getLocalToParentTransformation() -> getLocalToParentTransformation
    org.andengine.util.adt.transformation.Transformation getParentToLocalTransformation() -> getParentToLocalTransformation
    org.andengine.util.adt.transformation.Transformation getLocalToSceneTransformation() -> getLocalToSceneTransformation
    org.andengine.util.adt.transformation.Transformation getSceneToLocalTransformation() -> getSceneToLocalTransformation
    float[] convertLocalToSceneCoordinates(float,float) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float,float,float[]) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float[]) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float[],float[]) -> convertLocalToSceneCoordinates
    float[] convertSceneToLocalCoordinates(float,float) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float,float,float[]) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float[]) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float[],float[]) -> convertSceneToLocalCoordinates
    void onAttached() -> onAttached
    void onDetached() -> onDetached
    java.lang.Object getUserData() -> getUserData
    void setUserData(java.lang.Object) -> setUserData
    void onDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onDraw
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    void dispose() -> dispose
    void finalize() -> finalize
    java.lang.String toString() -> toString
    void toString(java.lang.StringBuilder) -> toString
    void preDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> preDraw
    void draw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> draw
    void postDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> postDraw
    void allocateEntityModifiers() -> allocateEntityModifiers
    void allocateChildren() -> allocateChildren
    void allocateUpdateHandlers() -> allocateUpdateHandlers
    void onApplyTransformations(org.andengine.opengl.util.GLState) -> onApplyTransformations
    void applyTranslation(org.andengine.opengl.util.GLState) -> applyTranslation
    void applyRotation(org.andengine.opengl.util.GLState) -> applyRotation
    void applySkew(org.andengine.opengl.util.GLState) -> applySkew
    void applyScale(org.andengine.opengl.util.GLState) -> applyScale
    void onManagedDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onManagedDraw
    void onManagedUpdate(float) -> onManagedUpdate
    void assertEntityHasNoParent(org.andengine.entity.IEntity) -> assertEntityHasNoParent
org.andengine.entity.Entity$1 -> org.andengine.entity.Entity$1:
    void call(org.andengine.entity.IEntity) -> call
    void call(java.lang.Object) -> call
org.andengine.entity.IEntity -> org.andengine.entity.IEntity:
    int TAG_INVALID -> TAG_INVALID
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    boolean isIgnoreUpdate() -> isIgnoreUpdate
    void setIgnoreUpdate(boolean) -> setIgnoreUpdate
    boolean isChildrenVisible() -> isChildrenVisible
    void setChildrenVisible(boolean) -> setChildrenVisible
    boolean isChildrenIgnoreUpdate() -> isChildrenIgnoreUpdate
    void setChildrenIgnoreUpdate(boolean) -> setChildrenIgnoreUpdate
    int getTag() -> getTag
    void setTag(int) -> setTag
    int getZIndex() -> getZIndex
    void setZIndex(int) -> setZIndex
    boolean hasParent() -> hasParent
    org.andengine.entity.IEntity getParent() -> getParent
    void setParent(org.andengine.entity.IEntity) -> setParent
    float getX() -> getX
    float getY() -> getY
    void setX(float) -> setX
    void setY(float) -> setY
    void setPosition(org.andengine.entity.IEntity) -> setPosition
    void setPosition(float,float) -> setPosition
    boolean isRotated() -> isRotated
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    float getRotationCenterX() -> getRotationCenterX
    float getRotationCenterY() -> getRotationCenterY
    void setRotationCenterX(float) -> setRotationCenterX
    void setRotationCenterY(float) -> setRotationCenterY
    void setRotationCenter(float,float) -> setRotationCenter
    boolean isScaled() -> isScaled
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    void setScaleX(float) -> setScaleX
    void setScaleY(float) -> setScaleY
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    float getScaleCenterX() -> getScaleCenterX
    float getScaleCenterY() -> getScaleCenterY
    void setScaleCenterX(float) -> setScaleCenterX
    void setScaleCenterY(float) -> setScaleCenterY
    void setScaleCenter(float,float) -> setScaleCenter
    boolean isSkewed() -> isSkewed
    float getSkewX() -> getSkewX
    float getSkewY() -> getSkewY
    void setSkewX(float) -> setSkewX
    void setSkewY(float) -> setSkewY
    void setSkew(float) -> setSkew
    void setSkew(float,float) -> setSkew
    float getSkewCenterX() -> getSkewCenterX
    float getSkewCenterY() -> getSkewCenterY
    void setSkewCenterX(float) -> setSkewCenterX
    void setSkewCenterY(float) -> setSkewCenterY
    void setSkewCenter(float,float) -> setSkewCenter
    boolean isRotatedOrScaledOrSkewed() -> isRotatedOrScaledOrSkewed
    float getRed() -> getRed
    float getGreen() -> getGreen
    float getBlue() -> getBlue
    float getAlpha() -> getAlpha
    org.andengine.util.color.Color getColor() -> getColor
    void setRed(float) -> setRed
    void setGreen(float) -> setGreen
    void setBlue(float) -> setBlue
    void setAlpha(float) -> setAlpha
    void setColor(org.andengine.util.color.Color) -> setColor
    void setColor(float,float,float) -> setColor
    void setColor(float,float,float,float) -> setColor
    float[] getSceneCenterCoordinates() -> getSceneCenterCoordinates
    float[] getSceneCenterCoordinates(float[]) -> getSceneCenterCoordinates
    float[] convertLocalToSceneCoordinates(float,float) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float,float,float[]) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float[]) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float[],float[]) -> convertLocalToSceneCoordinates
    float[] convertSceneToLocalCoordinates(float,float) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float,float,float[]) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float[]) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float[],float[]) -> convertSceneToLocalCoordinates
    org.andengine.util.adt.transformation.Transformation getLocalToSceneTransformation() -> getLocalToSceneTransformation
    org.andengine.util.adt.transformation.Transformation getSceneToLocalTransformation() -> getSceneToLocalTransformation
    org.andengine.util.adt.transformation.Transformation getLocalToParentTransformation() -> getLocalToParentTransformation
    org.andengine.util.adt.transformation.Transformation getParentToLocalTransformation() -> getParentToLocalTransformation
    int getChildCount() -> getChildCount
    void onAttached() -> onAttached
    void onDetached() -> onDetached
    void attachChild(org.andengine.entity.IEntity) -> attachChild
    org.andengine.entity.IEntity getChildByTag(int) -> getChildByTag
    org.andengine.entity.IEntity getChildByMatcher(org.andengine.entity.IEntityMatcher) -> getChildByMatcher
    org.andengine.entity.IEntity getChildByIndex(int) -> getChildByIndex
    org.andengine.entity.IEntity getFirstChild() -> getFirstChild
    org.andengine.entity.IEntity getLastChild() -> getLastChild
    java.util.ArrayList query(org.andengine.entity.IEntityMatcher) -> query
    org.andengine.entity.IEntity queryFirst(org.andengine.entity.IEntityMatcher) -> queryFirst
    java.util.List query(org.andengine.entity.IEntityMatcher,java.util.List) -> query
    org.andengine.entity.IEntity queryFirstForSubclass(org.andengine.entity.IEntityMatcher) -> queryFirstForSubclass
    java.util.ArrayList queryForSubclass(org.andengine.entity.IEntityMatcher) -> queryForSubclass
    java.util.List queryForSubclass(org.andengine.entity.IEntityMatcher,java.util.List) -> queryForSubclass
    void sortChildren() -> sortChildren
    void sortChildren(boolean) -> sortChildren
    void sortChildren(org.andengine.entity.IEntityComparator) -> sortChildren
    boolean detachSelf() -> detachSelf
    boolean detachChild(org.andengine.entity.IEntity) -> detachChild
    org.andengine.entity.IEntity detachChild(int) -> detachChild
    org.andengine.entity.IEntity detachChild(org.andengine.entity.IEntityMatcher) -> detachChild
    boolean detachChildren(org.andengine.entity.IEntityMatcher) -> detachChildren
    void detachChildren() -> detachChildren
    void callOnChildren(org.andengine.entity.IEntityParameterCallable) -> callOnChildren
    void callOnChildren(org.andengine.entity.IEntityParameterCallable,org.andengine.entity.IEntityMatcher) -> callOnChildren
    void registerUpdateHandler(org.andengine.engine.handler.IUpdateHandler) -> registerUpdateHandler
    boolean unregisterUpdateHandler(org.andengine.engine.handler.IUpdateHandler) -> unregisterUpdateHandler
    boolean unregisterUpdateHandlers(org.andengine.engine.handler.IUpdateHandler$IUpdateHandlerMatcher) -> unregisterUpdateHandlers
    int getUpdateHandlerCount() -> getUpdateHandlerCount
    void clearUpdateHandlers() -> clearUpdateHandlers
    void registerEntityModifier(org.andengine.entity.modifier.IEntityModifier) -> registerEntityModifier
    boolean unregisterEntityModifier(org.andengine.entity.modifier.IEntityModifier) -> unregisterEntityModifier
    boolean unregisterEntityModifiers(org.andengine.entity.modifier.IEntityModifier$IEntityModifierMatcher) -> unregisterEntityModifiers
    int getEntityModifierCount() -> getEntityModifierCount
    void clearEntityModifiers() -> clearEntityModifiers
    boolean isCullingEnabled() -> isCullingEnabled
    void setCullingEnabled(boolean) -> setCullingEnabled
    boolean isCulled(org.andengine.engine.camera.Camera) -> isCulled
    void setUserData(java.lang.Object) -> setUserData
    java.lang.Object getUserData() -> getUserData
    void toString(java.lang.StringBuilder) -> toString
org.andengine.entity.IEntityComparator -> org.andengine.entity.IEntityComparator:
org.andengine.entity.IEntityFactory -> org.andengine.entity.IEntityFactory:
    org.andengine.entity.IEntity create(float,float) -> create
org.andengine.entity.IEntityMatcher -> org.andengine.entity.IEntityMatcher:
    boolean matches(org.andengine.entity.IEntity) -> matches
org.andengine.entity.IEntityParameterCallable -> org.andengine.entity.IEntityParameterCallable:
    void call(org.andengine.entity.IEntity) -> call
org.andengine.entity.TagEntityMatcher -> org.andengine.entity.TagEntityMatcher:
    int mTag -> mTag
    int getTag() -> getTag
    void setTag(int) -> setTag
    boolean matches(org.andengine.entity.IEntity) -> matches
    boolean matches(java.lang.Object) -> matches
org.andengine.entity.ZIndexSorter -> org.andengine.entity.ZIndexSorter:
    org.andengine.entity.ZIndexSorter INSTANCE -> INSTANCE
    java.util.Comparator mZIndexComparator -> mZIndexComparator
    org.andengine.entity.ZIndexSorter getInstance() -> getInstance
    void sort(org.andengine.entity.IEntity[]) -> sort
    void sort(org.andengine.entity.IEntity[],int,int) -> sort
    void sort(java.util.List) -> sort
    void sort(java.util.List,int,int) -> sort
    void sort(org.andengine.util.adt.list.IList) -> sort
    void sort(org.andengine.util.adt.list.IList,int,int) -> sort
org.andengine.entity.ZIndexSorter$1 -> org.andengine.entity.ZIndexSorter$1:
    org.andengine.entity.ZIndexSorter this$0 -> this$0
    int compare(org.andengine.entity.IEntity,org.andengine.entity.IEntity) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.andengine.entity.modifier.AlphaModifier -> org.andengine.entity.modifier.AlphaModifier:
    org.andengine.entity.modifier.AlphaModifier deepCopy() -> deepCopy
    void onSetInitialValue(org.andengine.entity.IEntity,float) -> onSetInitialValue
    void onSetValue(org.andengine.entity.IEntity,float,float) -> onSetValue
    void onSetValue(java.lang.Object,float,float) -> onSetValue
    void onSetInitialValue(java.lang.Object,float) -> onSetInitialValue
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.CardinalSplineMoveModifier -> org.andengine.entity.modifier.CardinalSplineMoveModifier:
    org.andengine.entity.modifier.CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig mCardinalSplineMoveModifierConfig -> mCardinalSplineMoveModifierConfig
    org.andengine.util.modifier.ease.IEaseFunction mEaseFunction -> mEaseFunction
    int mControlSegmentCount -> mControlSegmentCount
    float mControlSegmentCountInverse -> mControlSegmentCountInverse
    org.andengine.entity.modifier.CardinalSplineMoveModifier deepCopy() -> deepCopy
    org.andengine.entity.modifier.CardinalSplineMoveModifier reverse() -> reverse
    void onManagedInitialize(org.andengine.entity.IEntity) -> onManagedInitialize
    void onManagedUpdate(float,org.andengine.entity.IEntity) -> onManagedUpdate
    float cardinalSplineX(float,float,float,float,float,float) -> cardinalSplineX
    float cardinalSplineY(float,float,float,float,float,float) -> cardinalSplineY
    void onManagedInitialize(java.lang.Object) -> onManagedInitialize
    void onManagedUpdate(float,java.lang.Object) -> onManagedUpdate
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig -> org.andengine.entity.modifier.CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig:
    int CONTROLPOINT_COUNT_MINIMUM -> CONTROLPOINT_COUNT_MINIMUM
    float[] mControlPointXs -> mControlPointXs
    float[] mControlPointYs -> mControlPointYs
    float mTension -> mTension
    org.andengine.entity.modifier.CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig deepCopy() -> deepCopy
    org.andengine.entity.modifier.CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig deepCopyReverse() -> deepCopyReverse
    int getControlPointCount() -> getControlPointCount
    void setControlPoint(int,float,float) -> setControlPoint
    float getControlPointX(int) -> getControlPointX
    float getControlPointY(int) -> getControlPointY
    float[] access$0(org.andengine.entity.modifier.CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig) -> access$0
    float[] access$1(org.andengine.entity.modifier.CardinalSplineMoveModifier$CardinalSplineMoveModifierConfig) -> access$1
org.andengine.entity.modifier.CatmullRomSplineMoveModifier -> org.andengine.entity.modifier.CatmullRomSplineMoveModifier:
org.andengine.entity.modifier.CatmullRomSplineMoveModifier$CatmullRomMoveModifierConfig -> org.andengine.entity.modifier.CatmullRomSplineMoveModifier$CatmullRomMoveModifierConfig:
    int CARDINALSPLINE_CATMULLROM_TENSION -> CARDINALSPLINE_CATMULLROM_TENSION
    org.andengine.entity.modifier.CatmullRomSplineMoveModifier this$0 -> this$0
org.andengine.entity.modifier.ColorModifier -> org.andengine.entity.modifier.ColorModifier:
    org.andengine.entity.modifier.ColorModifier deepCopy() -> deepCopy
    void onSetInitialValues(org.andengine.entity.IEntity,float,float,float) -> onSetInitialValues
    void onSetValues(org.andengine.entity.IEntity,float,float,float,float) -> onSetValues
    void onSetValues(java.lang.Object,float,float,float,float) -> onSetValues
    void onSetInitialValues(java.lang.Object,float,float,float) -> onSetInitialValues
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.CubicBezierCurveMoveModifier -> org.andengine.entity.modifier.CubicBezierCurveMoveModifier:
    float mX1 -> mX1
    float mY1 -> mY1
    float mX2 -> mX2
    float mY2 -> mY2
    float mX3 -> mX3
    float mY3 -> mY3
    float mX4 -> mX4
    float mY4 -> mY4
    org.andengine.util.modifier.ease.IEaseFunction mEaseFunction -> mEaseFunction
    org.andengine.entity.modifier.CubicBezierCurveMoveModifier deepCopy() -> deepCopy
    void onManagedInitialize(org.andengine.entity.IEntity) -> onManagedInitialize
    void onManagedUpdate(float,org.andengine.entity.IEntity) -> onManagedUpdate
    void onManagedInitialize(java.lang.Object) -> onManagedInitialize
    void onManagedUpdate(float,java.lang.Object) -> onManagedUpdate
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.DelayModifier -> org.andengine.entity.modifier.DelayModifier:
    org.andengine.entity.modifier.DelayModifier deepCopy() -> deepCopy
    void onManagedInitialize(org.andengine.entity.IEntity) -> onManagedInitialize
    void onManagedUpdate(float,org.andengine.entity.IEntity) -> onManagedUpdate
    void onManagedInitialize(java.lang.Object) -> onManagedInitialize
    void onManagedUpdate(float,java.lang.Object) -> onManagedUpdate
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.DoubleValueChangeEntityModifier -> org.andengine.entity.modifier.DoubleValueChangeEntityModifier:
org.andengine.entity.modifier.DoubleValueSpanEntityModifier -> org.andengine.entity.modifier.DoubleValueSpanEntityModifier:
org.andengine.entity.modifier.DurationEntityModifier -> org.andengine.entity.modifier.DurationEntityModifier:
org.andengine.entity.modifier.EntityModifier -> org.andengine.entity.modifier.EntityModifier:
org.andengine.entity.modifier.EntityModifierList -> org.andengine.entity.modifier.EntityModifierList:
    long serialVersionUID -> serialVersionUID
org.andengine.entity.modifier.FadeInModifier -> org.andengine.entity.modifier.FadeInModifier:
    org.andengine.entity.modifier.FadeInModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.entity.modifier.AlphaModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.FadeOutModifier -> org.andengine.entity.modifier.FadeOutModifier:
    org.andengine.entity.modifier.FadeOutModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.entity.modifier.AlphaModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.IEntityModifier -> org.andengine.entity.modifier.IEntityModifier:
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.IEntityModifier$IEntityModifierListener -> org.andengine.entity.modifier.IEntityModifier$IEntityModifierListener:
org.andengine.entity.modifier.IEntityModifier$IEntityModifierMatcher -> org.andengine.entity.modifier.IEntityModifier$IEntityModifierMatcher:
org.andengine.entity.modifier.JumpModifier -> org.andengine.entity.modifier.JumpModifier:
    int JUMPCOUNT_DEFAULT -> JUMPCOUNT_DEFAULT
    float mJumpHeight -> mJumpHeight
    int mJumpCount -> mJumpCount
    org.andengine.entity.modifier.JumpModifier deepCopy() -> deepCopy
    void onSetValues(org.andengine.entity.IEntity,float,float,float) -> onSetValues
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.entity.modifier.MoveModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.LoopEntityModifier -> org.andengine.entity.modifier.LoopEntityModifier:
    org.andengine.entity.modifier.LoopEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.LoopModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.LoopEntityModifier$ILoopEntityModifierListener -> org.andengine.entity.modifier.LoopEntityModifier$ILoopEntityModifierListener:
org.andengine.entity.modifier.MoveByModifier -> org.andengine.entity.modifier.MoveByModifier:
    org.andengine.entity.modifier.MoveByModifier deepCopy() -> deepCopy
    void onChangeValues(float,org.andengine.entity.IEntity,float,float) -> onChangeValues
    void onChangeValues(float,java.lang.Object,float,float) -> onChangeValues
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.MoveModifier -> org.andengine.entity.modifier.MoveModifier:
    org.andengine.entity.modifier.MoveModifier deepCopy() -> deepCopy
    void onSetInitialValues(org.andengine.entity.IEntity,float,float) -> onSetInitialValues
    void onSetValues(org.andengine.entity.IEntity,float,float,float) -> onSetValues
    void onSetValues(java.lang.Object,float,float,float) -> onSetValues
    void onSetInitialValues(java.lang.Object,float,float) -> onSetInitialValues
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.MoveXModifier -> org.andengine.entity.modifier.MoveXModifier:
    org.andengine.entity.modifier.MoveXModifier deepCopy() -> deepCopy
    void onSetInitialValue(org.andengine.entity.IEntity,float) -> onSetInitialValue
    void onSetValue(org.andengine.entity.IEntity,float,float) -> onSetValue
    void onSetValue(java.lang.Object,float,float) -> onSetValue
    void onSetInitialValue(java.lang.Object,float) -> onSetInitialValue
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.MoveYModifier -> org.andengine.entity.modifier.MoveYModifier:
    org.andengine.entity.modifier.MoveYModifier deepCopy() -> deepCopy
    void onSetInitialValue(org.andengine.entity.IEntity,float) -> onSetInitialValue
    void onSetValue(org.andengine.entity.IEntity,float,float) -> onSetValue
    void onSetValue(java.lang.Object,float,float) -> onSetValue
    void onSetInitialValue(java.lang.Object,float) -> onSetInitialValue
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.ParallelEntityModifier -> org.andengine.entity.modifier.ParallelEntityModifier:
    org.andengine.entity.modifier.ParallelEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.ParallelModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.PathModifier -> org.andengine.entity.modifier.PathModifier:
    org.andengine.util.modifier.SequenceModifier mSequenceModifier -> mSequenceModifier
    org.andengine.entity.modifier.PathModifier$IPathModifierListener mPathModifierListener -> mPathModifierListener
    org.andengine.entity.modifier.PathModifier$Path mPath -> mPath
    org.andengine.entity.modifier.PathModifier deepCopy() -> deepCopy
    org.andengine.entity.modifier.PathModifier$Path getPath() -> getPath
    boolean isFinished() -> isFinished
    float getSecondsElapsed() -> getSecondsElapsed
    float getDuration() -> getDuration
    org.andengine.entity.modifier.PathModifier$IPathModifierListener getPathModifierListener() -> getPathModifierListener
    void setPathModifierListener(org.andengine.entity.modifier.PathModifier$IPathModifierListener) -> setPathModifierListener
    void reset() -> reset
    float onUpdate(float,org.andengine.entity.IEntity) -> onUpdate
    float onUpdate(float,java.lang.Object) -> onUpdate
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
    org.andengine.entity.modifier.PathModifier$IPathModifierListener access$3(org.andengine.entity.modifier.PathModifier) -> access$3
    void access$4(org.andengine.entity.modifier.PathModifier,java.lang.Object) -> access$4
    void access$5(org.andengine.entity.modifier.PathModifier,java.lang.Object) -> access$5
org.andengine.entity.modifier.PathModifier$1 -> org.andengine.entity.modifier.PathModifier$1:
    org.andengine.entity.modifier.PathModifier this$0 -> this$0
    void onSubSequenceStarted(org.andengine.util.modifier.IModifier,org.andengine.entity.IEntity,int) -> onSubSequenceStarted
    void onSubSequenceFinished(org.andengine.util.modifier.IModifier,org.andengine.entity.IEntity,int) -> onSubSequenceFinished
    void onSubSequenceFinished(org.andengine.util.modifier.IModifier,java.lang.Object,int) -> onSubSequenceFinished
    void onSubSequenceStarted(org.andengine.util.modifier.IModifier,java.lang.Object,int) -> onSubSequenceStarted
org.andengine.entity.modifier.PathModifier$2 -> org.andengine.entity.modifier.PathModifier$2:
    org.andengine.entity.modifier.PathModifier this$0 -> this$0
    void onModifierStarted(org.andengine.util.modifier.IModifier,org.andengine.entity.IEntity) -> onModifierStarted
    void onModifierFinished(org.andengine.util.modifier.IModifier,org.andengine.entity.IEntity) -> onModifierFinished
    void onModifierFinished(org.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierFinished
    void onModifierStarted(org.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierStarted
org.andengine.entity.modifier.PathModifier$IPathModifierListener -> org.andengine.entity.modifier.PathModifier$IPathModifierListener:
    void onPathStarted(org.andengine.entity.modifier.PathModifier,org.andengine.entity.IEntity) -> onPathStarted
    void onPathWaypointStarted(org.andengine.entity.modifier.PathModifier,org.andengine.entity.IEntity,int) -> onPathWaypointStarted
    void onPathWaypointFinished(org.andengine.entity.modifier.PathModifier,org.andengine.entity.IEntity,int) -> onPathWaypointFinished
    void onPathFinished(org.andengine.entity.modifier.PathModifier,org.andengine.entity.IEntity) -> onPathFinished
org.andengine.entity.modifier.PathModifier$Path -> org.andengine.entity.modifier.PathModifier$Path:
    float[] mXs -> mXs
    float[] mYs -> mYs
    int mIndex -> mIndex
    boolean mLengthChanged -> mLengthChanged
    float mLength -> mLength
    org.andengine.entity.modifier.PathModifier$Path deepCopy() -> deepCopy
    org.andengine.entity.modifier.PathModifier$Path to(float,float) -> to
    float[] getCoordinatesX() -> getCoordinatesX
    float[] getCoordinatesY() -> getCoordinatesY
    int getSize() -> getSize
    float getLength() -> getLength
    float getSegmentLength(int) -> getSegmentLength
    void updateLength() -> updateLength
org.andengine.entity.modifier.QuadraticBezierCurveMoveModifier -> org.andengine.entity.modifier.QuadraticBezierCurveMoveModifier:
    float mX1 -> mX1
    float mY1 -> mY1
    float mX2 -> mX2
    float mY2 -> mY2
    float mX3 -> mX3
    float mY3 -> mY3
    org.andengine.util.modifier.ease.IEaseFunction mEaseFunction -> mEaseFunction
    org.andengine.entity.modifier.QuadraticBezierCurveMoveModifier deepCopy() -> deepCopy
    void onManagedInitialize(org.andengine.entity.IEntity) -> onManagedInitialize
    void onManagedUpdate(float,org.andengine.entity.IEntity) -> onManagedUpdate
    void onManagedInitialize(java.lang.Object) -> onManagedInitialize
    void onManagedUpdate(float,java.lang.Object) -> onManagedUpdate
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.RotationAtModifier -> org.andengine.entity.modifier.RotationAtModifier:
    float mRotationCenterX -> mRotationCenterX
    float mRotationCenterY -> mRotationCenterY
    org.andengine.entity.modifier.RotationAtModifier deepCopy() -> deepCopy
    void onManagedInitialize(org.andengine.entity.IEntity) -> onManagedInitialize
    void onManagedInitialize(java.lang.Object) -> onManagedInitialize
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.entity.modifier.RotationModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.RotationByModifier -> org.andengine.entity.modifier.RotationByModifier:
    org.andengine.entity.modifier.RotationByModifier deepCopy() -> deepCopy
    void onChangeValue(float,org.andengine.entity.IEntity,float) -> onChangeValue
    void onChangeValue(float,java.lang.Object,float) -> onChangeValue
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.RotationModifier -> org.andengine.entity.modifier.RotationModifier:
    org.andengine.entity.modifier.RotationModifier deepCopy() -> deepCopy
    void onSetInitialValue(org.andengine.entity.IEntity,float) -> onSetInitialValue
    void onSetValue(org.andengine.entity.IEntity,float,float) -> onSetValue
    void onSetValue(java.lang.Object,float,float) -> onSetValue
    void onSetInitialValue(java.lang.Object,float) -> onSetInitialValue
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.ScaleAtModifier -> org.andengine.entity.modifier.ScaleAtModifier:
    float mScaleCenterX -> mScaleCenterX
    float mScaleCenterY -> mScaleCenterY
    org.andengine.entity.modifier.ScaleAtModifier deepCopy() -> deepCopy
    void onManagedInitialize(org.andengine.entity.IEntity) -> onManagedInitialize
    void onManagedInitialize(java.lang.Object) -> onManagedInitialize
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.entity.modifier.ScaleModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.ScaleModifier -> org.andengine.entity.modifier.ScaleModifier:
    org.andengine.entity.modifier.ScaleModifier deepCopy() -> deepCopy
    void onSetInitialValues(org.andengine.entity.IEntity,float,float) -> onSetInitialValues
    void onSetValues(org.andengine.entity.IEntity,float,float,float) -> onSetValues
    void onSetValues(java.lang.Object,float,float,float) -> onSetValues
    void onSetInitialValues(java.lang.Object,float,float) -> onSetInitialValues
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.SequenceEntityModifier -> org.andengine.entity.modifier.SequenceEntityModifier:
    org.andengine.entity.modifier.SequenceEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.SequenceModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.SequenceEntityModifier$ISubSequenceShapeModifierListener -> org.andengine.entity.modifier.SequenceEntityModifier$ISubSequenceShapeModifierListener:
org.andengine.entity.modifier.SingleValueChangeEntityModifier -> org.andengine.entity.modifier.SingleValueChangeEntityModifier:
org.andengine.entity.modifier.SingleValueSpanEntityModifier -> org.andengine.entity.modifier.SingleValueSpanEntityModifier:
org.andengine.entity.modifier.SkewModifier -> org.andengine.entity.modifier.SkewModifier:
    org.andengine.entity.modifier.SkewModifier deepCopy() -> deepCopy
    void onSetInitialValues(org.andengine.entity.IEntity,float,float) -> onSetInitialValues
    void onSetValues(org.andengine.entity.IEntity,float,float,float) -> onSetValues
    void onSetValues(java.lang.Object,float,float,float) -> onSetValues
    void onSetInitialValues(java.lang.Object,float,float) -> onSetInitialValues
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.SkewXModifier -> org.andengine.entity.modifier.SkewXModifier:
    org.andengine.entity.modifier.SkewXModifier deepCopy() -> deepCopy
    void onSetInitialValue(org.andengine.entity.IEntity,float) -> onSetInitialValue
    void onSetValue(org.andengine.entity.IEntity,float,float) -> onSetValue
    void onSetValue(java.lang.Object,float,float) -> onSetValue
    void onSetInitialValue(java.lang.Object,float) -> onSetInitialValue
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.SkewYModifier -> org.andengine.entity.modifier.SkewYModifier:
    org.andengine.entity.modifier.SkewYModifier deepCopy() -> deepCopy
    void onSetInitialValue(org.andengine.entity.IEntity,float) -> onSetInitialValue
    void onSetValue(org.andengine.entity.IEntity,float,float) -> onSetValue
    void onSetValue(java.lang.Object,float,float) -> onSetValue
    void onSetInitialValue(java.lang.Object,float) -> onSetInitialValue
    org.andengine.entity.modifier.IEntityModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.modifier.TripleValueSpanEntityModifier -> org.andengine.entity.modifier.TripleValueSpanEntityModifier:
org.andengine.entity.particle.BatchedPseudoSpriteParticleSystem -> org.andengine.entity.particle.BatchedPseudoSpriteParticleSystem:
    org.andengine.opengl.texture.region.ITextureRegion mTextureRegion -> mTextureRegion
    org.andengine.entity.sprite.batch.SpriteBatch mSpriteBatch -> mSpriteBatch
    void onManagedDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onManagedDraw
org.andengine.entity.particle.BatchedPseudoSpriteParticleSystem$1 -> org.andengine.entity.particle.BatchedPseudoSpriteParticleSystem$1:
    org.andengine.entity.Entity create(float,float) -> create
    org.andengine.entity.IEntity create(float,float) -> create
org.andengine.entity.particle.BatchedSpriteParticleSystem -> org.andengine.entity.particle.BatchedSpriteParticleSystem:
    org.andengine.entity.sprite.batch.SpriteBatch mSpriteBatch -> mSpriteBatch
    void onManagedDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onManagedDraw
org.andengine.entity.particle.BatchedSpriteParticleSystem$1 -> org.andengine.entity.particle.BatchedSpriteParticleSystem$1:
    org.andengine.opengl.texture.region.ITextureRegion val$pTextureRegion -> val$pTextureRegion
    org.andengine.opengl.vbo.VertexBufferObjectManager val$pVertexBufferObjectManager -> val$pVertexBufferObjectManager
    org.andengine.entity.sprite.UncoloredSprite create(float,float) -> create
    org.andengine.entity.IEntity create(float,float) -> create
org.andengine.entity.particle.BlendFunctionParticleSystem -> org.andengine.entity.particle.BlendFunctionParticleSystem:
    boolean mBlendingEnabled -> mBlendingEnabled
    int mBlendFunctionSource -> mBlendFunctionSource
    int mBlendFunctionDestination -> mBlendFunctionDestination
    boolean isBlendingEnabled() -> isBlendingEnabled
    void setBlendingEnabled(boolean) -> setBlendingEnabled
    int getBlendFunctionSource() -> getBlendFunctionSource
    void setBlendFunctionSource(int) -> setBlendFunctionSource
    int getBlendFunctionDestination() -> getBlendFunctionDestination
    void setBlendFunctionDestination(int) -> setBlendFunctionDestination
    void setBlendFunction(int,int) -> setBlendFunction
    void preDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> preDraw
    void postDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> postDraw
org.andengine.entity.particle.Particle -> org.andengine.entity.particle.Particle:
    int EXPIRETIME_NEVER -> EXPIRETIME_NEVER
    org.andengine.engine.handler.physics.PhysicsHandler mPhysicsHandler -> mPhysicsHandler
    float mLifeTime -> mLifeTime
    float mExpireTime -> mExpireTime
    boolean mExpired -> mExpired
    org.andengine.entity.IEntity mEntity -> mEntity
    org.andengine.entity.IEntity getEntity() -> getEntity
    void setEntity(org.andengine.entity.IEntity) -> setEntity
    float getLifeTime() -> getLifeTime
    float getExpireTime() -> getExpireTime
    void setExpireTime(float) -> setExpireTime
    boolean isExpired() -> isExpired
    void setExpired(boolean) -> setExpired
    org.andengine.engine.handler.physics.PhysicsHandler getPhysicsHandler() -> getPhysicsHandler
    void onUpdate(float) -> onUpdate
    void onDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onDraw
    void reset() -> reset
org.andengine.entity.particle.ParticleSystem -> org.andengine.entity.particle.ParticleSystem:
    float[] POSITION_OFFSET_CONTAINER -> POSITION_OFFSET_CONTAINER
    org.andengine.entity.IEntityFactory mEntityFactory -> mEntityFactory
    org.andengine.entity.particle.emitter.IParticleEmitter mParticleEmitter -> mParticleEmitter
    org.andengine.entity.particle.Particle[] mParticles -> mParticles
    java.util.ArrayList mParticleInitializers -> mParticleInitializers
    java.util.ArrayList mParticleModifiers -> mParticleModifiers
    float mRateMinimum -> mRateMinimum
    float mRateMaximum -> mRateMaximum
    boolean mParticlesSpawnEnabled -> mParticlesSpawnEnabled
    int mParticlesMaximum -> mParticlesMaximum
    int mParticlesAlive -> mParticlesAlive
    float mParticlesDueToSpawn -> mParticlesDueToSpawn
    boolean isParticlesSpawnEnabled() -> isParticlesSpawnEnabled
    void setParticlesSpawnEnabled(boolean) -> setParticlesSpawnEnabled
    org.andengine.entity.IEntityFactory getParticleFactory() -> getParticleFactory
    org.andengine.entity.particle.emitter.IParticleEmitter getParticleEmitter() -> getParticleEmitter
    void reset() -> reset
    void onManagedDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onManagedDraw
    void onManagedUpdate(float) -> onManagedUpdate
    void moveParticleToEnd(int) -> moveParticleToEnd
    void addParticleModifier(org.andengine.entity.particle.modifier.IParticleModifier) -> addParticleModifier
    void removeParticleModifier(org.andengine.entity.particle.modifier.IParticleModifier) -> removeParticleModifier
    void addParticleInitializer(org.andengine.entity.particle.initializer.IParticleInitializer) -> addParticleInitializer
    void removeParticleInitializer(org.andengine.entity.particle.initializer.IParticleInitializer) -> removeParticleInitializer
    void spawnParticles(float) -> spawnParticles
    void spawnParticle() -> spawnParticle
    float determineCurrentRate() -> determineCurrentRate
org.andengine.entity.particle.SpriteParticleSystem -> org.andengine.entity.particle.SpriteParticleSystem:
org.andengine.entity.particle.SpriteParticleSystem$1 -> org.andengine.entity.particle.SpriteParticleSystem$1:
    org.andengine.opengl.texture.region.ITextureRegion val$pTextureRegion -> val$pTextureRegion
    org.andengine.opengl.vbo.VertexBufferObjectManager val$pVertexBufferObjectManager -> val$pVertexBufferObjectManager
    org.andengine.entity.sprite.Sprite create(float,float) -> create
    org.andengine.entity.IEntity create(float,float) -> create
org.andengine.entity.particle.emitter.BaseCircleParticleEmitter -> org.andengine.entity.particle.emitter.BaseCircleParticleEmitter:
    float mRadiusX -> mRadiusX
    float mRadiusY -> mRadiusY
    float getRadiusX() -> getRadiusX
    void setRadiusX(float) -> setRadiusX
    float getRadiusY() -> getRadiusY
    void setRadiusY(float) -> setRadiusY
    void setRadius(float) -> setRadius
    void setRadius(float,float) -> setRadius
org.andengine.entity.particle.emitter.BaseParticleEmitter -> org.andengine.entity.particle.emitter.BaseParticleEmitter:
    float mCenterX -> mCenterX
    float mCenterY -> mCenterY
    float getCenterX() -> getCenterX
    float getCenterY() -> getCenterY
    void setCenterX(float) -> setCenterX
    void setCenterY(float) -> setCenterY
    void setCenter(float,float) -> setCenter
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.andengine.entity.particle.emitter.BaseRectangleParticleEmitter -> org.andengine.entity.particle.emitter.BaseRectangleParticleEmitter:
    float mWidth -> mWidth
    float mHeight -> mHeight
    float mWidthHalf -> mWidthHalf
    float mHeightHalf -> mHeightHalf
    float getWidth() -> getWidth
    void setWidth(float) -> setWidth
    float getHeight() -> getHeight
    void setHeight(float) -> setHeight
org.andengine.entity.particle.emitter.CircleOutlineParticleEmitter -> org.andengine.entity.particle.emitter.CircleOutlineParticleEmitter:
    void getPositionOffset(float[]) -> getPositionOffset
org.andengine.entity.particle.emitter.CircleParticleEmitter -> org.andengine.entity.particle.emitter.CircleParticleEmitter:
    void getPositionOffset(float[]) -> getPositionOffset
org.andengine.entity.particle.emitter.IParticleEmitter -> org.andengine.entity.particle.emitter.IParticleEmitter:
    void getPositionOffset(float[]) -> getPositionOffset
org.andengine.entity.particle.emitter.PointParticleEmitter -> org.andengine.entity.particle.emitter.PointParticleEmitter:
    void getPositionOffset(float[]) -> getPositionOffset
org.andengine.entity.particle.emitter.RectangleOutlineParticleEmitter -> org.andengine.entity.particle.emitter.RectangleOutlineParticleEmitter:
    void getPositionOffset(float[]) -> getPositionOffset
org.andengine.entity.particle.emitter.RectangleParticleEmitter -> org.andengine.entity.particle.emitter.RectangleParticleEmitter:
    void getPositionOffset(float[]) -> getPositionOffset
org.andengine.entity.particle.initializer.AccelerationParticleInitializer -> org.andengine.entity.particle.initializer.AccelerationParticleInitializer:
    float getMinAccelerationX() -> getMinAccelerationX
    float getMaxAccelerationX() -> getMaxAccelerationX
    float getMinAccelerationY() -> getMinAccelerationY
    float getMaxAccelerationY() -> getMaxAccelerationY
    void setAccelerationX(float) -> setAccelerationX
    void setAccelerationY(float) -> setAccelerationY
    void setAccelerationX(float,float) -> setAccelerationX
    void setAccelerationY(float,float) -> setAccelerationY
    void setAcceleration(float,float,float,float) -> setAcceleration
    void onInitializeParticle(org.andengine.entity.particle.Particle,float,float) -> onInitializeParticle
org.andengine.entity.particle.initializer.AlphaParticleInitializer -> org.andengine.entity.particle.initializer.AlphaParticleInitializer:
    void onInitializeParticle(org.andengine.entity.particle.Particle,float) -> onInitializeParticle
org.andengine.entity.particle.initializer.BaseDoubleValueParticleInitializer -> org.andengine.entity.particle.initializer.BaseDoubleValueParticleInitializer:
    float mMinValueB -> mMinValueB
    float mMaxValueB -> mMaxValueB
    void onInitializeParticle(org.andengine.entity.particle.Particle,float,float) -> onInitializeParticle
    void onInitializeParticle(org.andengine.entity.particle.Particle,float) -> onInitializeParticle
    float getRandomValueB() -> getRandomValueB
org.andengine.entity.particle.initializer.BaseSingleValueParticleInitializer -> org.andengine.entity.particle.initializer.BaseSingleValueParticleInitializer:
    float mMinValue -> mMinValue
    float mMaxValue -> mMaxValue
    void onInitializeParticle(org.andengine.entity.particle.Particle,float) -> onInitializeParticle
    void onInitializeParticle(org.andengine.entity.particle.Particle) -> onInitializeParticle
    float getRandomValue() -> getRandomValue
org.andengine.entity.particle.initializer.BaseTripleValueParticleInitializer -> org.andengine.entity.particle.initializer.BaseTripleValueParticleInitializer:
    float mMinValueC -> mMinValueC
    float mMaxValueC -> mMaxValueC
    void onInitializeParticle(org.andengine.entity.particle.Particle,float,float,float) -> onInitializeParticle
    void onInitializeParticle(org.andengine.entity.particle.Particle,float,float) -> onInitializeParticle
    float getRandomValueC() -> getRandomValueC
org.andengine.entity.particle.initializer.BlendFunctionParticleInitializer -> org.andengine.entity.particle.initializer.BlendFunctionParticleInitializer:
    int mBlendFunctionSource -> mBlendFunctionSource
    int mBlendFunctionDestination -> mBlendFunctionDestination
    void onInitializeParticle(org.andengine.entity.particle.Particle) -> onInitializeParticle
org.andengine.entity.particle.initializer.ColorParticleInitializer -> org.andengine.entity.particle.initializer.ColorParticleInitializer:
    void onInitializeParticle(org.andengine.entity.particle.Particle,float,float,float) -> onInitializeParticle
org.andengine.entity.particle.initializer.GravityParticleInitializer -> org.andengine.entity.particle.initializer.GravityParticleInitializer:
org.andengine.entity.particle.initializer.IParticleInitializer -> org.andengine.entity.particle.initializer.IParticleInitializer:
    void onInitializeParticle(org.andengine.entity.particle.Particle) -> onInitializeParticle
org.andengine.entity.particle.initializer.RotationParticleInitializer -> org.andengine.entity.particle.initializer.RotationParticleInitializer:
    float getMinRotation() -> getMinRotation
    float getMaxRotation() -> getMaxRotation
    void setRotation(float) -> setRotation
    void setRotation(float,float) -> setRotation
    void onInitializeParticle(org.andengine.entity.particle.Particle,float) -> onInitializeParticle
org.andengine.entity.particle.initializer.ScaleParticleInitializer -> org.andengine.entity.particle.initializer.ScaleParticleInitializer:
    void onInitializeParticle(org.andengine.entity.particle.Particle,float) -> onInitializeParticle
org.andengine.entity.particle.initializer.VelocityParticleInitializer -> org.andengine.entity.particle.initializer.VelocityParticleInitializer:
    float getMinVelocityX() -> getMinVelocityX
    float getMaxVelocityX() -> getMaxVelocityX
    float getMinVelocityY() -> getMinVelocityY
    float getMaxVelocityY() -> getMaxVelocityY
    void setVelocityX(float) -> setVelocityX
    void setVelocityY(float) -> setVelocityY
    void setVelocityX(float,float) -> setVelocityX
    void setVelocityY(float,float) -> setVelocityY
    void setVelocity(float,float,float,float) -> setVelocity
    void onInitializeParticle(org.andengine.entity.particle.Particle,float,float) -> onInitializeParticle
org.andengine.entity.particle.modifier.AlphaParticleModifier -> org.andengine.entity.particle.modifier.AlphaParticleModifier:
    void onSetInitialValue(org.andengine.entity.particle.Particle,float) -> onSetInitialValue
    void onSetValue(org.andengine.entity.particle.Particle,float,float) -> onSetValue
org.andengine.entity.particle.modifier.BaseDoubleValueSpanParticleModifier -> org.andengine.entity.particle.modifier.BaseDoubleValueSpanParticleModifier:
    float mFromValueB -> mFromValueB
    float mValueSpanB -> mValueSpanB
    void onSetInitialValues(org.andengine.entity.particle.Particle,float,float) -> onSetInitialValues
    void onSetValues(org.andengine.entity.particle.Particle,float,float,float) -> onSetValues
    void onSetInitialValue(org.andengine.entity.particle.Particle,float) -> onSetInitialValue
    void onSetValue(org.andengine.entity.particle.Particle,float,float) -> onSetValue
    void reset(float,float,float,float) -> reset
    void reset(float,float,float,float,float,float) -> reset
org.andengine.entity.particle.modifier.BaseSingleValueSpanParticleModifier -> org.andengine.entity.particle.modifier.BaseSingleValueSpanParticleModifier:
    float mFromTime -> mFromTime
    float mToTime -> mToTime
    float mDuration -> mDuration
    float mFromValue -> mFromValue
    float mValueSpan -> mValueSpan
    org.andengine.util.modifier.ease.IEaseFunction mEaseFunction -> mEaseFunction
    void onSetInitialValue(org.andengine.entity.particle.Particle,float) -> onSetInitialValue
    void onSetValue(org.andengine.entity.particle.Particle,float,float) -> onSetValue
    void onInitializeParticle(org.andengine.entity.particle.Particle) -> onInitializeParticle
    void onUpdateParticle(org.andengine.entity.particle.Particle) -> onUpdateParticle
    void reset(float,float,float,float) -> reset
org.andengine.entity.particle.modifier.BaseTripleValueSpanParticleModifier -> org.andengine.entity.particle.modifier.BaseTripleValueSpanParticleModifier:
    float mFromValueC -> mFromValueC
    float mValueSpanC -> mValueSpanC
    void onSetInitialValues(org.andengine.entity.particle.Particle,float,float,float) -> onSetInitialValues
    void onSetValues(org.andengine.entity.particle.Particle,float,float,float,float) -> onSetValues
    void onSetInitialValues(org.andengine.entity.particle.Particle,float,float) -> onSetInitialValues
    void onSetValues(org.andengine.entity.particle.Particle,float,float,float) -> onSetValues
    void reset(float,float,float,float,float,float) -> reset
    void reset(float,float,float,float,float,float,float,float) -> reset
org.andengine.entity.particle.modifier.ColorParticleModifier -> org.andengine.entity.particle.modifier.ColorParticleModifier:
    void onSetInitialValues(org.andengine.entity.particle.Particle,float,float,float) -> onSetInitialValues
    void onSetValues(org.andengine.entity.particle.Particle,float,float,float,float) -> onSetValues
org.andengine.entity.particle.modifier.ExpireParticleInitializer -> org.andengine.entity.particle.modifier.ExpireParticleInitializer:
    float mMinLifeTime -> mMinLifeTime
    float mMaxLifeTime -> mMaxLifeTime
    float getMinLifeTime() -> getMinLifeTime
    float getMaxLifeTime() -> getMaxLifeTime
    void setLifeTime(float) -> setLifeTime
    void setLifeTime(float,float) -> setLifeTime
    void onInitializeParticle(org.andengine.entity.particle.Particle) -> onInitializeParticle
org.andengine.entity.particle.modifier.IParticleModifier -> org.andengine.entity.particle.modifier.IParticleModifier:
    void onUpdateParticle(org.andengine.entity.particle.Particle) -> onUpdateParticle
org.andengine.entity.particle.modifier.OffCameraExpireParticleModifier -> org.andengine.entity.particle.modifier.OffCameraExpireParticleModifier:
    org.andengine.engine.camera.Camera mCamera -> mCamera
    org.andengine.engine.camera.Camera getCamera() -> getCamera
    void onInitializeParticle(org.andengine.entity.particle.Particle) -> onInitializeParticle
    void onUpdateParticle(org.andengine.entity.particle.Particle) -> onUpdateParticle
org.andengine.entity.particle.modifier.RotationParticleModifier -> org.andengine.entity.particle.modifier.RotationParticleModifier:
    void onSetInitialValue(org.andengine.entity.particle.Particle,float) -> onSetInitialValue
    void onSetValue(org.andengine.entity.particle.Particle,float,float) -> onSetValue
org.andengine.entity.particle.modifier.ScaleParticleModifier -> org.andengine.entity.particle.modifier.ScaleParticleModifier:
    void onSetInitialValues(org.andengine.entity.particle.Particle,float,float) -> onSetInitialValues
    void onSetValues(org.andengine.entity.particle.Particle,float,float,float) -> onSetValues
org.andengine.entity.primitive.DrawMode -> org.andengine.entity.primitive.DrawMode:
    org.andengine.entity.primitive.DrawMode POINTS -> POINTS
    org.andengine.entity.primitive.DrawMode LINE_STRIP -> LINE_STRIP
    org.andengine.entity.primitive.DrawMode LINE_LOOP -> LINE_LOOP
    org.andengine.entity.primitive.DrawMode LINES -> LINES
    org.andengine.entity.primitive.DrawMode TRIANGLE_STRIP -> TRIANGLE_STRIP
    org.andengine.entity.primitive.DrawMode TRIANGLE_FAN -> TRIANGLE_FAN
    org.andengine.entity.primitive.DrawMode TRIANGLES -> TRIANGLES
    int mDrawMode -> mDrawMode
    org.andengine.entity.primitive.DrawMode[] ENUM$VALUES -> ENUM$VALUES
    int getDrawMode() -> getDrawMode
    org.andengine.entity.primitive.DrawMode[] values() -> values
    org.andengine.entity.primitive.DrawMode valueOf(java.lang.String) -> valueOf
org.andengine.entity.primitive.Line -> org.andengine.entity.primitive.Line:
    float LINE_WIDTH_DEFAULT -> LINE_WIDTH_DEFAULT
    int VERTEX_INDEX_X -> VERTEX_INDEX_X
    int VERTEX_INDEX_Y -> VERTEX_INDEX_Y
    int COLOR_INDEX -> COLOR_INDEX
    int VERTEX_SIZE -> VERTEX_SIZE
    int VERTICES_PER_LINE -> VERTICES_PER_LINE
    int LINE_SIZE -> LINE_SIZE
    org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT -> VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT
    float mX2 -> mX2
    float mY2 -> mY2
    float mLineWidth -> mLineWidth
    org.andengine.entity.primitive.vbo.ILineVertexBufferObject mLineVertexBufferObject -> mLineVertexBufferObject
    float getX() -> getX
    float getY() -> getY
    float getX1() -> getX1
    float getY1() -> getY1
    float getX2() -> getX2
    float getY2() -> getY2
    float getLineWidth() -> getLineWidth
    void setLineWidth(float) -> setLineWidth
    void setX(float) -> setX
    void setY(float) -> setY
    void setPosition(float,float) -> setPosition
    void setPosition(float,float,float,float) -> setPosition
    org.andengine.entity.primitive.vbo.ILineVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
    boolean isCulled(org.andengine.engine.camera.Camera) -> isCulled
    void preDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> preDraw
    void draw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> draw
    void postDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> postDraw
    void onUpdateColor() -> onUpdateColor
    void onUpdateVertices() -> onUpdateVertices
    float[] getSceneCenterCoordinates() -> getSceneCenterCoordinates
    float[] getSceneCenterCoordinates(float[]) -> getSceneCenterCoordinates
    boolean contains(float,float) -> contains
    boolean collidesWith(org.andengine.entity.shape.IShape) -> collidesWith
    org.andengine.opengl.vbo.IVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
org.andengine.entity.primitive.Mesh -> org.andengine.entity.primitive.Mesh:
    int VERTEX_INDEX_X -> VERTEX_INDEX_X
    int VERTEX_INDEX_Y -> VERTEX_INDEX_Y
    int COLOR_INDEX -> COLOR_INDEX
    int VERTEX_SIZE -> VERTEX_SIZE
    org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT -> VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT
    org.andengine.entity.primitive.vbo.IMeshVertexBufferObject mMeshVertexBufferObject -> mMeshVertexBufferObject
    int mVertexCountToDraw -> mVertexCountToDraw
    int mDrawMode -> mDrawMode
    float[] getBufferData() -> getBufferData
    void setVertexCountToDraw(int) -> setVertexCountToDraw
    void setDrawMode(org.andengine.entity.primitive.DrawMode) -> setDrawMode
    org.andengine.entity.primitive.vbo.IMeshVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
    void preDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> preDraw
    void draw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> draw
    void postDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> postDraw
    void onUpdateColor() -> onUpdateColor
    void onUpdateVertices() -> onUpdateVertices
    boolean contains(float,float) -> contains
    boolean collidesWith(org.andengine.entity.shape.IShape) -> collidesWith
    org.andengine.opengl.vbo.IVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
org.andengine.entity.primitive.Rectangle -> org.andengine.entity.primitive.Rectangle:
    int VERTEX_INDEX_X -> VERTEX_INDEX_X
    int VERTEX_INDEX_Y -> VERTEX_INDEX_Y
    int COLOR_INDEX -> COLOR_INDEX
    int VERTEX_SIZE -> VERTEX_SIZE
    int VERTICES_PER_RECTANGLE -> VERTICES_PER_RECTANGLE
    int RECTANGLE_SIZE -> RECTANGLE_SIZE
    org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT -> VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT
    org.andengine.entity.primitive.vbo.IRectangleVertexBufferObject mRectangleVertexBufferObject -> mRectangleVertexBufferObject
    org.andengine.entity.primitive.vbo.IRectangleVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
    void preDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> preDraw
    void draw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> draw
    void postDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> postDraw
    void onUpdateColor() -> onUpdateColor
    void onUpdateVertices() -> onUpdateVertices
    org.andengine.opengl.vbo.IVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
org.andengine.entity.primitive.vbo.HighPerformanceLineVertexBufferObject -> org.andengine.entity.primitive.vbo.HighPerformanceLineVertexBufferObject:
    void onUpdateColor(org.andengine.entity.primitive.Line) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.primitive.Line) -> onUpdateVertices
org.andengine.entity.primitive.vbo.HighPerformanceMeshVertexBufferObject -> org.andengine.entity.primitive.vbo.HighPerformanceMeshVertexBufferObject:
    int mVertexCount -> mVertexCount
    void onUpdateColor(org.andengine.entity.primitive.Mesh) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.primitive.Mesh) -> onUpdateVertices
org.andengine.entity.primitive.vbo.HighPerformanceRectangleVertexBufferObject -> org.andengine.entity.primitive.vbo.HighPerformanceRectangleVertexBufferObject:
    void onUpdateColor(org.andengine.entity.primitive.Rectangle) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.primitive.Rectangle) -> onUpdateVertices
org.andengine.entity.primitive.vbo.ILineVertexBufferObject -> org.andengine.entity.primitive.vbo.ILineVertexBufferObject:
    void onUpdateColor(org.andengine.entity.primitive.Line) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.primitive.Line) -> onUpdateVertices
org.andengine.entity.primitive.vbo.IMeshVertexBufferObject -> org.andengine.entity.primitive.vbo.IMeshVertexBufferObject:
    float[] getBufferData() -> getBufferData
    void onUpdateColor(org.andengine.entity.primitive.Mesh) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.primitive.Mesh) -> onUpdateVertices
org.andengine.entity.primitive.vbo.IRectangleVertexBufferObject -> org.andengine.entity.primitive.vbo.IRectangleVertexBufferObject:
    void onUpdateColor(org.andengine.entity.primitive.Rectangle) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.primitive.Rectangle) -> onUpdateVertices
org.andengine.entity.primitive.vbo.LowMemoryLineVertexBufferObject -> org.andengine.entity.primitive.vbo.LowMemoryLineVertexBufferObject:
    void onUpdateColor(org.andengine.entity.primitive.Line) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.primitive.Line) -> onUpdateVertices
org.andengine.entity.primitive.vbo.LowMemoryRectangleVertexBufferObject -> org.andengine.entity.primitive.vbo.LowMemoryRectangleVertexBufferObject:
    void onUpdateColor(org.andengine.entity.primitive.Rectangle) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.primitive.Rectangle) -> onUpdateVertices
org.andengine.entity.scene.CameraScene -> org.andengine.entity.scene.CameraScene:
    org.andengine.engine.camera.Camera mCamera -> mCamera
    org.andengine.engine.camera.Camera getCamera() -> getCamera
    void setCamera(org.andengine.engine.camera.Camera) -> setCamera
    boolean onSceneTouchEvent(org.andengine.input.touch.TouchEvent) -> onSceneTouchEvent
    boolean onChildSceneTouchEvent(org.andengine.input.touch.TouchEvent) -> onChildSceneTouchEvent
    void onApplyMatrix(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onApplyMatrix
    void centerShapeInCamera(org.andengine.entity.shape.IAreaShape) -> centerShapeInCamera
    void centerShapeInCameraHorizontally(org.andengine.entity.shape.IAreaShape) -> centerShapeInCameraHorizontally
    void centerShapeInCameraVertically(org.andengine.entity.shape.IAreaShape) -> centerShapeInCameraVertically
org.andengine.entity.scene.IOnAreaTouchListener -> org.andengine.entity.scene.IOnAreaTouchListener:
    boolean onAreaTouched(org.andengine.input.touch.TouchEvent,org.andengine.entity.scene.ITouchArea,float,float) -> onAreaTouched
org.andengine.entity.scene.IOnSceneTouchListener -> org.andengine.entity.scene.IOnSceneTouchListener:
    boolean onSceneTouchEvent(org.andengine.entity.scene.Scene,org.andengine.input.touch.TouchEvent) -> onSceneTouchEvent
org.andengine.entity.scene.ITouchArea -> org.andengine.entity.scene.ITouchArea:
    boolean contains(float,float) -> contains
    float[] convertSceneToLocalCoordinates(float,float) -> convertSceneToLocalCoordinates
    float[] convertLocalToSceneCoordinates(float,float) -> convertLocalToSceneCoordinates
    boolean onAreaTouched(org.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
org.andengine.entity.scene.ITouchArea$ITouchAreaMatcher -> org.andengine.entity.scene.ITouchArea$ITouchAreaMatcher:
org.andengine.entity.scene.Scene -> org.andengine.entity.scene.Scene:
    int TOUCHAREAS_CAPACITY_DEFAULT -> TOUCHAREAS_CAPACITY_DEFAULT
    float mSecondsElapsedTotal -> mSecondsElapsedTotal
    org.andengine.entity.scene.Scene mParentScene -> mParentScene
    org.andengine.entity.scene.Scene mChildScene -> mChildScene
    boolean mChildSceneModalDraw -> mChildSceneModalDraw
    boolean mChildSceneModalUpdate -> mChildSceneModalUpdate
    boolean mChildSceneModalTouch -> mChildSceneModalTouch
    org.andengine.util.adt.list.SmartList mTouchAreas -> mTouchAreas
    org.andengine.engine.handler.runnable.RunnableHandler mRunnableHandler -> mRunnableHandler
    org.andengine.entity.scene.IOnSceneTouchListener mOnSceneTouchListener -> mOnSceneTouchListener
    org.andengine.entity.scene.IOnAreaTouchListener mOnAreaTouchListener -> mOnAreaTouchListener
    org.andengine.entity.scene.background.IBackground mBackground -> mBackground
    boolean mBackgroundEnabled -> mBackgroundEnabled
    boolean mOnAreaTouchTraversalBackToFront -> mOnAreaTouchTraversalBackToFront
    boolean mTouchAreaBindingOnActionDownEnabled -> mTouchAreaBindingOnActionDownEnabled
    boolean mTouchAreaBindingOnActionMoveEnabled -> mTouchAreaBindingOnActionMoveEnabled
    android.util.SparseArray mTouchAreaBindings -> mTouchAreaBindings
    boolean mOnSceneTouchListenerBindingOnActionDownEnabled -> mOnSceneTouchListenerBindingOnActionDownEnabled
    android.util.SparseArray mOnSceneTouchListenerBindings -> mOnSceneTouchListenerBindings
    float getSecondsElapsedTotal() -> getSecondsElapsedTotal
    org.andengine.entity.scene.background.IBackground getBackground() -> getBackground
    void setBackground(org.andengine.entity.scene.background.IBackground) -> setBackground
    boolean isBackgroundEnabled() -> isBackgroundEnabled
    void setBackgroundEnabled(boolean) -> setBackgroundEnabled
    void setOnSceneTouchListener(org.andengine.entity.scene.IOnSceneTouchListener) -> setOnSceneTouchListener
    org.andengine.entity.scene.IOnSceneTouchListener getOnSceneTouchListener() -> getOnSceneTouchListener
    boolean hasOnSceneTouchListener() -> hasOnSceneTouchListener
    void setOnAreaTouchListener(org.andengine.entity.scene.IOnAreaTouchListener) -> setOnAreaTouchListener
    org.andengine.entity.scene.IOnAreaTouchListener getOnAreaTouchListener() -> getOnAreaTouchListener
    boolean hasOnAreaTouchListener() -> hasOnAreaTouchListener
    void setParentScene(org.andengine.entity.scene.Scene) -> setParentScene
    boolean hasChildScene() -> hasChildScene
    org.andengine.entity.scene.Scene getChildScene() -> getChildScene
    void setChildSceneModal(org.andengine.entity.scene.Scene) -> setChildSceneModal
    void setChildScene(org.andengine.entity.scene.Scene) -> setChildScene
    void setChildScene(org.andengine.entity.scene.Scene,boolean,boolean,boolean) -> setChildScene
    void clearChildScene() -> clearChildScene
    void setOnAreaTouchTraversalBackToFront() -> setOnAreaTouchTraversalBackToFront
    void setOnAreaTouchTraversalFrontToBack() -> setOnAreaTouchTraversalFrontToBack
    boolean isTouchAreaBindingOnActionDownEnabled() -> isTouchAreaBindingOnActionDownEnabled
    boolean isTouchAreaBindingOnActionMoveEnabled() -> isTouchAreaBindingOnActionMoveEnabled
    void setTouchAreaBindingOnActionDownEnabled(boolean) -> setTouchAreaBindingOnActionDownEnabled
    void setTouchAreaBindingOnActionMoveEnabled(boolean) -> setTouchAreaBindingOnActionMoveEnabled
    boolean isOnSceneTouchListenerBindingOnActionDownEnabled() -> isOnSceneTouchListenerBindingOnActionDownEnabled
    void setOnSceneTouchListenerBindingOnActionDownEnabled(boolean) -> setOnSceneTouchListenerBindingOnActionDownEnabled
    void onManagedDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onManagedDraw
    void onApplyMatrix(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onApplyMatrix
    void onManagedUpdate(float) -> onManagedUpdate
    boolean onSceneTouchEvent(org.andengine.input.touch.TouchEvent) -> onSceneTouchEvent
    java.lang.Boolean onAreaTouchEvent(org.andengine.input.touch.TouchEvent,float,float,org.andengine.entity.scene.ITouchArea) -> onAreaTouchEvent
    boolean onChildSceneTouchEvent(org.andengine.input.touch.TouchEvent) -> onChildSceneTouchEvent
    void reset() -> reset
    void setParent(org.andengine.entity.IEntity) -> setParent
    void postRunnable(java.lang.Runnable) -> postRunnable
    void registerTouchArea(org.andengine.entity.scene.ITouchArea) -> registerTouchArea
    boolean unregisterTouchArea(org.andengine.entity.scene.ITouchArea) -> unregisterTouchArea
    boolean unregisterTouchAreas(org.andengine.entity.scene.ITouchArea$ITouchAreaMatcher) -> unregisterTouchAreas
    void clearTouchAreas() -> clearTouchAreas
    org.andengine.util.adt.list.SmartList getTouchAreas() -> getTouchAreas
    void back() -> back
org.andengine.entity.scene.background.AutoParallaxBackground -> org.andengine.entity.scene.background.AutoParallaxBackground:
    float mParallaxChangePerSecond -> mParallaxChangePerSecond
    void setParallaxChangePerSecond(float) -> setParallaxChangePerSecond
    void onUpdate(float) -> onUpdate
org.andengine.entity.scene.background.Background -> org.andengine.entity.scene.background.Background:
    int BACKGROUNDMODIFIERS_CAPACITY_DEFAULT -> BACKGROUNDMODIFIERS_CAPACITY_DEFAULT
    org.andengine.util.modifier.ModifierList mBackgroundModifiers -> mBackgroundModifiers
    org.andengine.util.color.Color mColor -> mColor
    boolean mColorEnabled -> mColorEnabled
    void setColor(float,float,float) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(org.andengine.util.color.Color) -> setColor
    boolean isColorEnabled() -> isColorEnabled
    void setColorEnabled(boolean) -> setColorEnabled
    void registerBackgroundModifier(org.andengine.util.modifier.IModifier) -> registerBackgroundModifier
    boolean unregisterBackgroundModifier(org.andengine.util.modifier.IModifier) -> unregisterBackgroundModifier
    void clearBackgroundModifiers() -> clearBackgroundModifiers
    void onUpdate(float) -> onUpdate
    void onDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onDraw
    void reset() -> reset
    void allocateBackgroundModifiers() -> allocateBackgroundModifiers
org.andengine.entity.scene.background.EntityBackground -> org.andengine.entity.scene.background.EntityBackground:
    org.andengine.entity.IEntity mEntity -> mEntity
    void onDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onDraw
org.andengine.entity.scene.background.IBackground -> org.andengine.entity.scene.background.IBackground:
    void registerBackgroundModifier(org.andengine.util.modifier.IModifier) -> registerBackgroundModifier
    boolean unregisterBackgroundModifier(org.andengine.util.modifier.IModifier) -> unregisterBackgroundModifier
    void clearBackgroundModifiers() -> clearBackgroundModifiers
    boolean isColorEnabled() -> isColorEnabled
    void setColorEnabled(boolean) -> setColorEnabled
    void setColor(org.andengine.util.color.Color) -> setColor
    void setColor(float,float,float) -> setColor
    void setColor(float,float,float,float) -> setColor
org.andengine.entity.scene.background.ParallaxBackground -> org.andengine.entity.scene.background.ParallaxBackground:
    java.util.ArrayList mParallaxEntities -> mParallaxEntities
    int mParallaxEntityCount -> mParallaxEntityCount
    float mParallaxValue -> mParallaxValue
    void setParallaxValue(float) -> setParallaxValue
    void onDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onDraw
    void attachParallaxEntity(org.andengine.entity.scene.background.ParallaxBackground$ParallaxEntity) -> attachParallaxEntity
    boolean detachParallaxEntity(org.andengine.entity.scene.background.ParallaxBackground$ParallaxEntity) -> detachParallaxEntity
org.andengine.entity.scene.background.ParallaxBackground$ParallaxEntity -> org.andengine.entity.scene.background.ParallaxBackground$ParallaxEntity:
    float mParallaxFactor -> mParallaxFactor
    org.andengine.entity.shape.IAreaShape mAreaShape -> mAreaShape
    void onDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera,float) -> onDraw
org.andengine.entity.scene.background.RepeatingSpriteBackground -> org.andengine.entity.scene.background.RepeatingSpriteBackground:
    org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas mBitmapTextureAtlas -> mBitmapTextureAtlas
    float mScale -> mScale
    org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas getBitmapTextureAtlas() -> getBitmapTextureAtlas
    org.andengine.entity.sprite.Sprite loadSprite(float,float,org.andengine.opengl.texture.TextureManager,org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource,org.andengine.opengl.vbo.VertexBufferObjectManager) -> loadSprite
org.andengine.entity.scene.background.SpriteBackground -> org.andengine.entity.scene.background.SpriteBackground:
    org.andengine.entity.sprite.Sprite getSprite() -> getSprite
org.andengine.entity.scene.background.modifier.ColorBackgroundModifier -> org.andengine.entity.scene.background.modifier.ColorBackgroundModifier:
    org.andengine.entity.scene.background.modifier.ColorBackgroundModifier deepCopy() -> deepCopy
    void onSetInitialValues(org.andengine.entity.scene.background.IBackground,float,float,float) -> onSetInitialValues
    void onSetValues(org.andengine.entity.scene.background.IBackground,float,float,float,float) -> onSetValues
    void onSetValues(java.lang.Object,float,float,float,float) -> onSetValues
    void onSetInitialValues(java.lang.Object,float,float,float) -> onSetInitialValues
    org.andengine.entity.scene.background.modifier.IBackgroundModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.entity.scene.background.modifier.IBackgroundModifier -> org.andengine.entity.scene.background.modifier.IBackgroundModifier:
    org.andengine.entity.scene.background.modifier.IBackgroundModifier deepCopy() -> deepCopy
org.andengine.entity.scene.background.modifier.IBackgroundModifier$IBackgroundModifierListener -> org.andengine.entity.scene.background.modifier.IBackgroundModifier$IBackgroundModifierListener:
org.andengine.entity.scene.background.modifier.LoopBackgroundModifier -> org.andengine.entity.scene.background.modifier.LoopBackgroundModifier:
    org.andengine.entity.scene.background.modifier.LoopBackgroundModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
    org.andengine.entity.scene.background.modifier.IBackgroundModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.LoopModifier deepCopy() -> deepCopy
org.andengine.entity.scene.background.modifier.LoopBackgroundModifier$ILoopBackgroundModifierListener -> org.andengine.entity.scene.background.modifier.LoopBackgroundModifier$ILoopBackgroundModifierListener:
org.andengine.entity.scene.background.modifier.ParallelBackgroundModifier -> org.andengine.entity.scene.background.modifier.ParallelBackgroundModifier:
    org.andengine.entity.scene.background.modifier.ParallelBackgroundModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
    org.andengine.entity.scene.background.modifier.IBackgroundModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.ParallelModifier deepCopy() -> deepCopy
org.andengine.entity.scene.background.modifier.SequenceBackgroundModifier -> org.andengine.entity.scene.background.modifier.SequenceBackgroundModifier:
    org.andengine.entity.scene.background.modifier.SequenceBackgroundModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
    org.andengine.entity.scene.background.modifier.IBackgroundModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.SequenceModifier deepCopy() -> deepCopy
org.andengine.entity.scene.background.modifier.SequenceBackgroundModifier$ISubSequenceBackgroundModifierListener -> org.andengine.entity.scene.background.modifier.SequenceBackgroundModifier$ISubSequenceBackgroundModifierListener:
org.andengine.entity.scene.menu.MenuScene -> org.andengine.entity.scene.menu.MenuScene:
    java.util.ArrayList mMenuItems -> mMenuItems
    org.andengine.entity.scene.menu.MenuScene$IOnMenuItemClickListener mOnMenuItemClickListener -> mOnMenuItemClickListener
    org.andengine.entity.scene.menu.animator.IMenuAnimator mMenuAnimator -> mMenuAnimator
    org.andengine.entity.scene.menu.item.IMenuItem mSelectedMenuItem -> mSelectedMenuItem
    org.andengine.entity.scene.menu.MenuScene$IOnMenuItemClickListener getOnMenuItemClickListener() -> getOnMenuItemClickListener
    void setOnMenuItemClickListener(org.andengine.entity.scene.menu.MenuScene$IOnMenuItemClickListener) -> setOnMenuItemClickListener
    int getMenuItemCount() -> getMenuItemCount
    void addMenuItem(org.andengine.entity.scene.menu.item.IMenuItem) -> addMenuItem
    void clearMenuItems() -> clearMenuItems
    org.andengine.entity.scene.menu.MenuScene getChildScene() -> getChildScene
    void setChildScene(org.andengine.entity.scene.Scene,boolean,boolean,boolean) -> setChildScene
    void clearChildScene() -> clearChildScene
    void setMenuAnimator(org.andengine.entity.scene.menu.animator.IMenuAnimator) -> setMenuAnimator
    boolean onAreaTouched(org.andengine.input.touch.TouchEvent,org.andengine.entity.scene.ITouchArea,float,float) -> onAreaTouched
    boolean onSceneTouchEvent(org.andengine.entity.scene.Scene,org.andengine.input.touch.TouchEvent) -> onSceneTouchEvent
    void back() -> back
    void reset() -> reset
    void closeMenuScene() -> closeMenuScene
    void buildAnimations() -> buildAnimations
    void prepareAnimations() -> prepareAnimations
    org.andengine.entity.scene.Scene getChildScene() -> getChildScene
org.andengine.entity.scene.menu.MenuScene$IOnMenuItemClickListener -> org.andengine.entity.scene.menu.MenuScene$IOnMenuItemClickListener:
    boolean onMenuItemClicked(org.andengine.entity.scene.menu.MenuScene,org.andengine.entity.scene.menu.item.IMenuItem,float,float) -> onMenuItemClicked
org.andengine.entity.scene.menu.animator.AlphaMenuAnimator -> org.andengine.entity.scene.menu.animator.AlphaMenuAnimator:
    float ALPHA_FROM -> ALPHA_FROM
    float ALPHA_TO -> ALPHA_TO
    int[] $SWITCH_TABLE$org$andengine$util$HorizontalAlign -> $SWITCH_TABLE$org$andengine$util$HorizontalAlign
    void buildAnimations(java.util.ArrayList,float,float) -> buildAnimations
    void prepareAnimations(java.util.ArrayList,float,float) -> prepareAnimations
    int[] $SWITCH_TABLE$org$andengine$util$HorizontalAlign() -> $SWITCH_TABLE$org$andengine$util$HorizontalAlign
org.andengine.entity.scene.menu.animator.BaseMenuAnimator -> org.andengine.entity.scene.menu.animator.BaseMenuAnimator:
    float DURATION -> DURATION
    float MENUITEMSPACING_DEFAULT -> MENUITEMSPACING_DEFAULT
    org.andengine.util.HorizontalAlign HORIZONTALALIGN_DEFAULT -> HORIZONTALALIGN_DEFAULT
    float mMenuItemSpacing -> mMenuItemSpacing
    org.andengine.util.HorizontalAlign mHorizontalAlign -> mHorizontalAlign
    org.andengine.util.modifier.ease.IEaseFunction mEaseFunction -> mEaseFunction
    float getMaximumWidth(java.util.ArrayList) -> getMaximumWidth
    float getOverallHeight(java.util.ArrayList) -> getOverallHeight
org.andengine.entity.scene.menu.animator.DirectMenuAnimator -> org.andengine.entity.scene.menu.animator.DirectMenuAnimator:
    int[] $SWITCH_TABLE$org$andengine$util$HorizontalAlign -> $SWITCH_TABLE$org$andengine$util$HorizontalAlign
    void buildAnimations(java.util.ArrayList,float,float) -> buildAnimations
    void prepareAnimations(java.util.ArrayList,float,float) -> prepareAnimations
    int[] $SWITCH_TABLE$org$andengine$util$HorizontalAlign() -> $SWITCH_TABLE$org$andengine$util$HorizontalAlign
org.andengine.entity.scene.menu.animator.IMenuAnimator -> org.andengine.entity.scene.menu.animator.IMenuAnimator:
    org.andengine.entity.scene.menu.animator.IMenuAnimator DEFAULT -> DEFAULT
    void prepareAnimations(java.util.ArrayList,float,float) -> prepareAnimations
    void buildAnimations(java.util.ArrayList,float,float) -> buildAnimations
org.andengine.entity.scene.menu.animator.SlideMenuAnimator -> org.andengine.entity.scene.menu.animator.SlideMenuAnimator:
    int[] $SWITCH_TABLE$org$andengine$util$HorizontalAlign -> $SWITCH_TABLE$org$andengine$util$HorizontalAlign
    void buildAnimations(java.util.ArrayList,float,float) -> buildAnimations
    void prepareAnimations(java.util.ArrayList,float,float) -> prepareAnimations
    int[] $SWITCH_TABLE$org$andengine$util$HorizontalAlign() -> $SWITCH_TABLE$org$andengine$util$HorizontalAlign
org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem -> org.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem:
    int mID -> mID
    int getID() -> getID
    void onSelected() -> onSelected
    void onUnselected() -> onUnselected
org.andengine.entity.scene.menu.item.IMenuItem -> org.andengine.entity.scene.menu.item.IMenuItem:
    int getID() -> getID
    void onSelected() -> onSelected
    void onUnselected() -> onUnselected
org.andengine.entity.scene.menu.item.SpriteMenuItem -> org.andengine.entity.scene.menu.item.SpriteMenuItem:
    int mID -> mID
    int getID() -> getID
    void onSelected() -> onSelected
    void onUnselected() -> onUnselected
org.andengine.entity.scene.menu.item.TextMenuItem -> org.andengine.entity.scene.menu.item.TextMenuItem:
    int mID -> mID
    int getID() -> getID
    void onSelected() -> onSelected
    void onUnselected() -> onUnselected
org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator -> org.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator:
    org.andengine.entity.scene.menu.item.IMenuItem mMenuItem -> mMenuItem
    void onMenuItemSelected(org.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemSelected
    void onMenuItemUnselected(org.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemUnselected
    void onMenuItemReset(org.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemReset
    int getID() -> getID
    org.andengine.opengl.vbo.VertexBufferObjectManager getVertexBufferObjectManager() -> getVertexBufferObjectManager
    org.andengine.opengl.vbo.IVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
    void onSelected() -> onSelected
    void onUnselected() -> onUnselected
    float getX() -> getX
    float getY() -> getY
    void setX(float) -> setX
    void setY(float) -> setY
    void setPosition(org.andengine.entity.IEntity) -> setPosition
    void setPosition(float,float) -> setPosition
    float getWidth() -> getWidth
    float getWidthScaled() -> getWidthScaled
    float getHeight() -> getHeight
    float getHeightScaled() -> getHeightScaled
    void setWidth(float) -> setWidth
    void setHeight(float) -> setHeight
    void setSize(float,float) -> setSize
    float getRed() -> getRed
    float getGreen() -> getGreen
    float getBlue() -> getBlue
    float getAlpha() -> getAlpha
    void setRed(float) -> setRed
    void setGreen(float) -> setGreen
    void setBlue(float) -> setBlue
    void setAlpha(float) -> setAlpha
    org.andengine.util.color.Color getColor() -> getColor
    void setColor(org.andengine.util.color.Color) -> setColor
    void setColor(float,float,float) -> setColor
    void setColor(float,float,float,float) -> setColor
    boolean isRotated() -> isRotated
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    float getRotationCenterX() -> getRotationCenterX
    float getRotationCenterY() -> getRotationCenterY
    void setRotationCenterX(float) -> setRotationCenterX
    void setRotationCenterY(float) -> setRotationCenterY
    void setRotationCenter(float,float) -> setRotationCenter
    boolean isScaled() -> isScaled
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    void setScaleX(float) -> setScaleX
    void setScaleY(float) -> setScaleY
    float getScaleCenterX() -> getScaleCenterX
    float getScaleCenterY() -> getScaleCenterY
    void setScaleCenterX(float) -> setScaleCenterX
    void setScaleCenterY(float) -> setScaleCenterY
    void setScaleCenter(float,float) -> setScaleCenter
    boolean isSkewed() -> isSkewed
    float getSkewX() -> getSkewX
    float getSkewY() -> getSkewY
    void setSkew(float) -> setSkew
    void setSkew(float,float) -> setSkew
    void setSkewX(float) -> setSkewX
    void setSkewY(float) -> setSkewY
    float getSkewCenterX() -> getSkewCenterX
    float getSkewCenterY() -> getSkewCenterY
    void setSkewCenterX(float) -> setSkewCenterX
    void setSkewCenterY(float) -> setSkewCenterY
    void setSkewCenter(float,float) -> setSkewCenter
    boolean isRotatedOrScaledOrSkewed() -> isRotatedOrScaledOrSkewed
    boolean collidesWith(org.andengine.entity.shape.IShape) -> collidesWith
    float[] getSceneCenterCoordinates() -> getSceneCenterCoordinates
    float[] getSceneCenterCoordinates(float[]) -> getSceneCenterCoordinates
    boolean isCullingEnabled() -> isCullingEnabled
    void registerEntityModifier(org.andengine.entity.modifier.IEntityModifier) -> registerEntityModifier
    boolean unregisterEntityModifier(org.andengine.entity.modifier.IEntityModifier) -> unregisterEntityModifier
    boolean unregisterEntityModifiers(org.andengine.entity.modifier.IEntityModifier$IEntityModifierMatcher) -> unregisterEntityModifiers
    int getEntityModifierCount() -> getEntityModifierCount
    void clearEntityModifiers() -> clearEntityModifiers
    boolean isBlendingEnabled() -> isBlendingEnabled
    void setBlendingEnabled(boolean) -> setBlendingEnabled
    int getBlendFunctionSource() -> getBlendFunctionSource
    void setBlendFunctionSource(int) -> setBlendFunctionSource
    int getBlendFunctionDestination() -> getBlendFunctionDestination
    void setBlendFunctionDestination(int) -> setBlendFunctionDestination
    void setBlendFunction(int,int) -> setBlendFunction
    void setCullingEnabled(boolean) -> setCullingEnabled
    int getTag() -> getTag
    void setTag(int) -> setTag
    int getZIndex() -> getZIndex
    void setZIndex(int) -> setZIndex
    org.andengine.opengl.shader.ShaderProgram getShaderProgram() -> getShaderProgram
    void setShaderProgram(org.andengine.opengl.shader.ShaderProgram) -> setShaderProgram
    void onDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onDraw
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    boolean isDisposed() -> isDisposed
    void dispose() -> dispose
    boolean contains(float,float) -> contains
    float[] convertLocalToSceneCoordinates(float,float) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float,float,float[]) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float[]) -> convertLocalToSceneCoordinates
    float[] convertLocalToSceneCoordinates(float[],float[]) -> convertLocalToSceneCoordinates
    float[] convertSceneToLocalCoordinates(float,float) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float,float,float[]) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float[]) -> convertSceneToLocalCoordinates
    float[] convertSceneToLocalCoordinates(float[],float[]) -> convertSceneToLocalCoordinates
    boolean onAreaTouched(org.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
    int getChildCount() -> getChildCount
    void attachChild(org.andengine.entity.IEntity) -> attachChild
    org.andengine.entity.IEntity getFirstChild() -> getFirstChild
    org.andengine.entity.IEntity getLastChild() -> getLastChild
    org.andengine.entity.IEntity getChildByTag(int) -> getChildByTag
    org.andengine.entity.IEntity getChildByIndex(int) -> getChildByIndex
    org.andengine.entity.IEntity getChildByMatcher(org.andengine.entity.IEntityMatcher) -> getChildByMatcher
    java.util.ArrayList query(org.andengine.entity.IEntityMatcher) -> query
    org.andengine.entity.IEntity queryFirst(org.andengine.entity.IEntityMatcher) -> queryFirst
    java.util.List query(org.andengine.entity.IEntityMatcher,java.util.List) -> query
    org.andengine.entity.IEntity queryFirstForSubclass(org.andengine.entity.IEntityMatcher) -> queryFirstForSubclass
    java.util.ArrayList queryForSubclass(org.andengine.entity.IEntityMatcher) -> queryForSubclass
    java.util.List queryForSubclass(org.andengine.entity.IEntityMatcher,java.util.List) -> queryForSubclass
    void sortChildren() -> sortChildren
    void sortChildren(boolean) -> sortChildren
    void sortChildren(org.andengine.entity.IEntityComparator) -> sortChildren
    boolean detachSelf() -> detachSelf
    boolean detachChild(org.andengine.entity.IEntity) -> detachChild
    org.andengine.entity.IEntity detachChild(int) -> detachChild
    org.andengine.entity.IEntity detachChild(org.andengine.entity.IEntityMatcher) -> detachChild
    boolean detachChildren(org.andengine.entity.IEntityMatcher) -> detachChildren
    void detachChildren() -> detachChildren
    void callOnChildren(org.andengine.entity.IEntityParameterCallable) -> callOnChildren
    void callOnChildren(org.andengine.entity.IEntityParameterCallable,org.andengine.entity.IEntityMatcher) -> callOnChildren
    org.andengine.util.adt.transformation.Transformation getLocalToSceneTransformation() -> getLocalToSceneTransformation
    org.andengine.util.adt.transformation.Transformation getSceneToLocalTransformation() -> getSceneToLocalTransformation
    org.andengine.util.adt.transformation.Transformation getLocalToParentTransformation() -> getLocalToParentTransformation
    org.andengine.util.adt.transformation.Transformation getParentToLocalTransformation() -> getParentToLocalTransformation
    boolean hasParent() -> hasParent
    org.andengine.entity.IEntity getParent() -> getParent
    void setParent(org.andengine.entity.IEntity) -> setParent
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    boolean isCulled(org.andengine.engine.camera.Camera) -> isCulled
    boolean isChildrenVisible() -> isChildrenVisible
    void setChildrenVisible(boolean) -> setChildrenVisible
    boolean isIgnoreUpdate() -> isIgnoreUpdate
    void setIgnoreUpdate(boolean) -> setIgnoreUpdate
    boolean isChildrenIgnoreUpdate() -> isChildrenIgnoreUpdate
    void setChildrenIgnoreUpdate(boolean) -> setChildrenIgnoreUpdate
    void setUserData(java.lang.Object) -> setUserData
    java.lang.Object getUserData() -> getUserData
    void onAttached() -> onAttached
    void onDetached() -> onDetached
    void registerUpdateHandler(org.andengine.engine.handler.IUpdateHandler) -> registerUpdateHandler
    boolean unregisterUpdateHandler(org.andengine.engine.handler.IUpdateHandler) -> unregisterUpdateHandler
    int getUpdateHandlerCount() -> getUpdateHandlerCount
    void clearUpdateHandlers() -> clearUpdateHandlers
    boolean unregisterUpdateHandlers(org.andengine.engine.handler.IUpdateHandler$IUpdateHandlerMatcher) -> unregisterUpdateHandlers
    void toString(java.lang.StringBuilder) -> toString
org.andengine.entity.scene.menu.item.decorator.ColorMenuItemDecorator -> org.andengine.entity.scene.menu.item.decorator.ColorMenuItemDecorator:
    org.andengine.util.color.Color mSelectedColor -> mSelectedColor
    org.andengine.util.color.Color mUnselectedColor -> mUnselectedColor
    void onMenuItemSelected(org.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemSelected
    void onMenuItemUnselected(org.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemUnselected
    void onMenuItemReset(org.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemReset
org.andengine.entity.scene.menu.item.decorator.ScaleMenuItemDecorator -> org.andengine.entity.scene.menu.item.decorator.ScaleMenuItemDecorator:
    float mSelectedScale -> mSelectedScale
    float mUnselectedScale -> mUnselectedScale
    void onMenuItemSelected(org.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemSelected
    void onMenuItemUnselected(org.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemUnselected
    void onMenuItemReset(org.andengine.entity.scene.menu.item.IMenuItem) -> onMenuItemReset
org.andengine.entity.shape.IAreaShape -> org.andengine.entity.shape.IAreaShape:
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getWidthScaled() -> getWidthScaled
    float getHeightScaled() -> getHeightScaled
    void setHeight(float) -> setHeight
    void setWidth(float) -> setWidth
    void setSize(float,float) -> setSize
org.andengine.entity.shape.IShape -> org.andengine.entity.shape.IShape:
    int BLENDFUNCTION_SOURCE_DEFAULT -> BLENDFUNCTION_SOURCE_DEFAULT
    int BLENDFUNCTION_DESTINATION_DEFAULT -> BLENDFUNCTION_DESTINATION_DEFAULT
    int BLENDFUNCTION_SOURCE_PREMULTIPLYALPHA_DEFAULT -> BLENDFUNCTION_SOURCE_PREMULTIPLYALPHA_DEFAULT
    int BLENDFUNCTION_DESTINATION_PREMULTIPLYALPHA_DEFAULT -> BLENDFUNCTION_DESTINATION_PREMULTIPLYALPHA_DEFAULT
    boolean collidesWith(org.andengine.entity.shape.IShape) -> collidesWith
    boolean isBlendingEnabled() -> isBlendingEnabled
    void setBlendingEnabled(boolean) -> setBlendingEnabled
    int getBlendFunctionSource() -> getBlendFunctionSource
    int getBlendFunctionDestination() -> getBlendFunctionDestination
    void setBlendFunctionSource(int) -> setBlendFunctionSource
    void setBlendFunctionDestination(int) -> setBlendFunctionDestination
    void setBlendFunction(int,int) -> setBlendFunction
    org.andengine.opengl.vbo.VertexBufferObjectManager getVertexBufferObjectManager() -> getVertexBufferObjectManager
    org.andengine.opengl.vbo.IVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
    org.andengine.opengl.shader.ShaderProgram getShaderProgram() -> getShaderProgram
    void setShaderProgram(org.andengine.opengl.shader.ShaderProgram) -> setShaderProgram
org.andengine.entity.shape.RectangularShape -> org.andengine.entity.shape.RectangularShape:
    float mWidth -> mWidth
    float mHeight -> mHeight
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void setWidth(float) -> setWidth
    void setHeight(float) -> setHeight
    void setSize(float,float) -> setSize
    float getWidthScaled() -> getWidthScaled
    float getHeightScaled() -> getHeightScaled
    boolean isCulled(org.andengine.engine.camera.Camera) -> isCulled
    void reset() -> reset
    boolean contains(float,float) -> contains
    float[] getSceneCenterCoordinates() -> getSceneCenterCoordinates
    float[] getSceneCenterCoordinates(float[]) -> getSceneCenterCoordinates
    boolean collidesWith(org.andengine.entity.shape.IShape) -> collidesWith
    void resetRotationCenter() -> resetRotationCenter
    void resetScaleCenter() -> resetScaleCenter
    void resetSkewCenter() -> resetSkewCenter
org.andengine.entity.shape.Shape -> org.andengine.entity.shape.Shape:
    int mBlendFunctionSource -> mBlendFunctionSource
    int mBlendFunctionDestination -> mBlendFunctionDestination
    boolean mBlendingEnabled -> mBlendingEnabled
    org.andengine.opengl.shader.ShaderProgram mShaderProgram -> mShaderProgram
    boolean isBlendingEnabled() -> isBlendingEnabled
    void setBlendingEnabled(boolean) -> setBlendingEnabled
    int getBlendFunctionSource() -> getBlendFunctionSource
    void setBlendFunctionSource(int) -> setBlendFunctionSource
    int getBlendFunctionDestination() -> getBlendFunctionDestination
    void setBlendFunctionDestination(int) -> setBlendFunctionDestination
    void setBlendFunction(int,int) -> setBlendFunction
    org.andengine.opengl.shader.ShaderProgram getShaderProgram() -> getShaderProgram
    void setShaderProgram(org.andengine.opengl.shader.ShaderProgram) -> setShaderProgram
    org.andengine.opengl.vbo.VertexBufferObjectManager getVertexBufferObjectManager() -> getVertexBufferObjectManager
    void onUpdateVertices() -> onUpdateVertices
    void preDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> preDraw
    void postDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> postDraw
    boolean onAreaTouched(org.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
    void reset() -> reset
    void dispose() -> dispose
    void initBlendFunction(org.andengine.opengl.texture.region.ITextureRegion) -> initBlendFunction
    void initBlendFunction(org.andengine.opengl.texture.ITexture) -> initBlendFunction
    void initBlendFunction(org.andengine.opengl.texture.TextureOptions) -> initBlendFunction
org.andengine.entity.sprite.AnimatedSprite -> org.andengine.entity.sprite.AnimatedSprite:
    int FRAMEINDEX_INVALID -> FRAMEINDEX_INVALID
    boolean mAnimationRunning -> mAnimationRunning
    boolean mAnimationStartedFired -> mAnimationStartedFired
    int mCurrentFrameIndex -> mCurrentFrameIndex
    long mAnimationProgress -> mAnimationProgress
    int mRemainingLoopCount -> mRemainingLoopCount
    org.andengine.entity.sprite.IAnimationData mAnimationData -> mAnimationData
    org.andengine.entity.sprite.AnimatedSprite$IAnimationListener mAnimationListener -> mAnimationListener
    boolean isAnimationRunning() -> isAnimationRunning
    void onManagedUpdate(float) -> onManagedUpdate
    void stopAnimation() -> stopAnimation
    void stopAnimation(int) -> stopAnimation
    void animate(long) -> animate
    void animate(long,org.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    void animate(long,boolean) -> animate
    void animate(long,boolean,org.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    void animate(long,int) -> animate
    void animate(long,int,org.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    void animate(long[]) -> animate
    void animate(long[],org.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    void animate(long[],boolean) -> animate
    void animate(long[],boolean,org.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    void animate(long[],int) -> animate
    void animate(long[],int,org.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    void animate(long[],int,int,boolean) -> animate
    void animate(long[],int,int,boolean,org.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    void animate(long[],int,int,int) -> animate
    void animate(long[],int,int,int,org.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    void animate(long[],int[]) -> animate
    void animate(long[],int[],org.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    void animate(long[],int[],boolean) -> animate
    void animate(long[],int[],boolean,org.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    void animate(long[],int[],int) -> animate
    void animate(long[],int[],int,org.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    void animate(org.andengine.entity.sprite.IAnimationData) -> animate
    void animate(org.andengine.entity.sprite.IAnimationData,org.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> animate
    void initAnimation(org.andengine.entity.sprite.AnimatedSprite$IAnimationListener) -> initAnimation
org.andengine.entity.sprite.AnimatedSprite$IAnimationListener -> org.andengine.entity.sprite.AnimatedSprite$IAnimationListener:
    void onAnimationStarted(org.andengine.entity.sprite.AnimatedSprite,int) -> onAnimationStarted
    void onAnimationFrameChanged(org.andengine.entity.sprite.AnimatedSprite,int,int) -> onAnimationFrameChanged
    void onAnimationLoopFinished(org.andengine.entity.sprite.AnimatedSprite,int,int) -> onAnimationLoopFinished
    void onAnimationFinished(org.andengine.entity.sprite.AnimatedSprite) -> onAnimationFinished
org.andengine.entity.sprite.AnimationData -> org.andengine.entity.sprite.AnimationData:
    int mFrameCount -> mFrameCount
    int[] mFrames -> mFrames
    long[] mFrameDurations -> mFrameDurations
    int mFirstFrameIndex -> mFirstFrameIndex
    int mLoopCount -> mLoopCount
    long[] mFrameEndsInNanoseconds -> mFrameEndsInNanoseconds
    long mAnimationDuration -> mAnimationDuration
    org.andengine.entity.sprite.IAnimationData deepCopy() -> deepCopy
    int[] getFrames() -> getFrames
    long[] getFrameDurations() -> getFrameDurations
    int getLoopCount() -> getLoopCount
    int getFrameCount() -> getFrameCount
    int getFirstFrameIndex() -> getFirstFrameIndex
    long getAnimationDuration() -> getAnimationDuration
    int calculateCurrentFrameIndex(long) -> calculateCurrentFrameIndex
    void set(long,int) -> set
    void set(long,int,boolean) -> set
    void set(long,int,int) -> set
    void set(long[]) -> set
    void set(long[],boolean) -> set
    void set(long[],int) -> set
    void set(long[],int,int) -> set
    void set(long[],int,int,boolean) -> set
    void set(long[],int,int,int) -> set
    void set(long[],int[]) -> set
    void set(long[],int[],boolean) -> set
    void set(long[],int[],int) -> set
    void set(org.andengine.entity.sprite.IAnimationData) -> set
    void set(long[],int,int[],int,int) -> set
    long[] fillFrameDurations(long,int) -> fillFrameDurations
org.andengine.entity.sprite.ButtonSprite -> org.andengine.entity.sprite.ButtonSprite:
    int mStateCount -> mStateCount
    org.andengine.entity.sprite.ButtonSprite$OnClickListener mOnClickListener -> mOnClickListener
    boolean mEnabled -> mEnabled
    org.andengine.entity.sprite.ButtonSprite$State mState -> mState
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPressed() -> isPressed
    org.andengine.entity.sprite.ButtonSprite$State getState() -> getState
    void setOnClickListener(org.andengine.entity.sprite.ButtonSprite$OnClickListener) -> setOnClickListener
    boolean onAreaTouched(org.andengine.input.touch.TouchEvent,float,float) -> onAreaTouched
    boolean contains(float,float) -> contains
    void changeState(org.andengine.entity.sprite.ButtonSprite$State) -> changeState
org.andengine.entity.sprite.ButtonSprite$OnClickListener -> org.andengine.entity.sprite.ButtonSprite$OnClickListener:
    void onClick(org.andengine.entity.sprite.ButtonSprite,float,float) -> onClick
org.andengine.entity.sprite.ButtonSprite$State -> org.andengine.entity.sprite.ButtonSprite$State:
    org.andengine.entity.sprite.ButtonSprite$State NORMAL -> NORMAL
    org.andengine.entity.sprite.ButtonSprite$State PRESSED -> PRESSED
    org.andengine.entity.sprite.ButtonSprite$State DISABLED -> DISABLED
    int mTiledTextureRegionIndex -> mTiledTextureRegionIndex
    org.andengine.entity.sprite.ButtonSprite$State[] ENUM$VALUES -> ENUM$VALUES
    int getTiledTextureRegionIndex() -> getTiledTextureRegionIndex
    org.andengine.entity.sprite.ButtonSprite$State[] values() -> values
    org.andengine.entity.sprite.ButtonSprite$State valueOf(java.lang.String) -> valueOf
org.andengine.entity.sprite.DiamondSprite -> org.andengine.entity.sprite.DiamondSprite:
org.andengine.entity.sprite.IAnimationData -> org.andengine.entity.sprite.IAnimationData:
    int LOOP_CONTINUOUS -> LOOP_CONTINUOUS
    int[] getFrames() -> getFrames
    long[] getFrameDurations() -> getFrameDurations
    int getLoopCount() -> getLoopCount
    int getFrameCount() -> getFrameCount
    int getFirstFrameIndex() -> getFirstFrameIndex
    long getAnimationDuration() -> getAnimationDuration
    int calculateCurrentFrameIndex(long) -> calculateCurrentFrameIndex
    void set(long,int) -> set
    void set(long,int,boolean) -> set
    void set(long,int,int) -> set
    void set(long[]) -> set
    void set(long[],boolean) -> set
    void set(long[],int) -> set
    void set(long[],int,int) -> set
    void set(long[],int,int,boolean) -> set
    void set(long[],int,int,int) -> set
    void set(long[],int[]) -> set
    void set(long[],int[],boolean) -> set
    void set(long[],int[],int) -> set
    void set(org.andengine.entity.sprite.IAnimationData) -> set
    org.andengine.entity.sprite.IAnimationData deepCopy() -> deepCopy
org.andengine.entity.sprite.Sprite -> org.andengine.entity.sprite.Sprite:
    int VERTEX_INDEX_X -> VERTEX_INDEX_X
    int VERTEX_INDEX_Y -> VERTEX_INDEX_Y
    int COLOR_INDEX -> COLOR_INDEX
    int TEXTURECOORDINATES_INDEX_U -> TEXTURECOORDINATES_INDEX_U
    int TEXTURECOORDINATES_INDEX_V -> TEXTURECOORDINATES_INDEX_V
    int VERTEX_SIZE -> VERTEX_SIZE
    int VERTICES_PER_SPRITE -> VERTICES_PER_SPRITE
    int SPRITE_SIZE -> SPRITE_SIZE
    org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT -> VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT
    org.andengine.opengl.texture.region.ITextureRegion mTextureRegion -> mTextureRegion
    org.andengine.entity.sprite.vbo.ISpriteVertexBufferObject mSpriteVertexBufferObject -> mSpriteVertexBufferObject
    boolean mFlippedVertical -> mFlippedVertical
    boolean mFlippedHorizontal -> mFlippedHorizontal
    org.andengine.opengl.texture.region.ITextureRegion getTextureRegion() -> getTextureRegion
    boolean isFlippedHorizontal() -> isFlippedHorizontal
    void setFlippedHorizontal(boolean) -> setFlippedHorizontal
    boolean isFlippedVertical() -> isFlippedVertical
    void setFlippedVertical(boolean) -> setFlippedVertical
    void setFlipped(boolean,boolean) -> setFlipped
    org.andengine.entity.sprite.vbo.ISpriteVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
    void reset() -> reset
    void preDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> preDraw
    void draw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> draw
    void postDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> postDraw
    void onUpdateVertices() -> onUpdateVertices
    void onUpdateColor() -> onUpdateColor
    void onUpdateTextureCoordinates() -> onUpdateTextureCoordinates
    org.andengine.opengl.vbo.IVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
org.andengine.entity.sprite.TiledSprite -> org.andengine.entity.sprite.TiledSprite:
    int VERTEX_SIZE -> VERTEX_SIZE
    int VERTICES_PER_TILEDSPRITE -> VERTICES_PER_TILEDSPRITE
    int TILEDSPRITE_SIZE -> TILEDSPRITE_SIZE
    int mCurrentTileIndex -> mCurrentTileIndex
    org.andengine.entity.sprite.vbo.ITiledSpriteVertexBufferObject mTiledSpriteVertexBufferObject -> mTiledSpriteVertexBufferObject
    org.andengine.opengl.texture.region.ITextureRegion getTextureRegion() -> getTextureRegion
    org.andengine.opengl.texture.region.ITiledTextureRegion getTiledTextureRegion() -> getTiledTextureRegion
    org.andengine.entity.sprite.vbo.ITiledSpriteVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
    void draw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> draw
    void onUpdateColor() -> onUpdateColor
    void onUpdateVertices() -> onUpdateVertices
    void onUpdateTextureCoordinates() -> onUpdateTextureCoordinates
    int getCurrentTileIndex() -> getCurrentTileIndex
    void setCurrentTileIndex(int) -> setCurrentTileIndex
    int getTileCount() -> getTileCount
    org.andengine.opengl.vbo.IVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
    org.andengine.entity.sprite.vbo.ISpriteVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
org.andengine.entity.sprite.UncoloredSprite -> org.andengine.entity.sprite.UncoloredSprite:
    int VERTEX_INDEX_X -> VERTEX_INDEX_X
    int VERTEX_INDEX_Y -> VERTEX_INDEX_Y
    int TEXTURECOORDINATES_INDEX_U -> TEXTURECOORDINATES_INDEX_U
    int TEXTURECOORDINATES_INDEX_V -> TEXTURECOORDINATES_INDEX_V
    int VERTEX_SIZE -> VERTEX_SIZE
    int VERTICES_PER_SPRITE -> VERTICES_PER_SPRITE
    int SPRITE_SIZE -> SPRITE_SIZE
    org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT -> VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT
    void onUpdateColor() -> onUpdateColor
org.andengine.entity.sprite.UniformColorSprite -> org.andengine.entity.sprite.UniformColorSprite:
    int VERTEX_INDEX_X -> VERTEX_INDEX_X
    int VERTEX_INDEX_Y -> VERTEX_INDEX_Y
    int TEXTURECOORDINATES_INDEX_U -> TEXTURECOORDINATES_INDEX_U
    int TEXTURECOORDINATES_INDEX_V -> TEXTURECOORDINATES_INDEX_V
    int VERTEX_SIZE -> VERTEX_SIZE
    int VERTICES_PER_SPRITE -> VERTICES_PER_SPRITE
    int SPRITE_SIZE -> SPRITE_SIZE
    org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT -> VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT
    void preDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> preDraw
    void draw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> draw
org.andengine.entity.sprite.batch.DynamicSpriteBatch -> org.andengine.entity.sprite.batch.DynamicSpriteBatch:
    boolean onUpdateSpriteBatch() -> onUpdateSpriteBatch
    void begin() -> begin
org.andengine.entity.sprite.batch.SpriteBatch -> org.andengine.entity.sprite.batch.SpriteBatch:
    float[] VERTICES_TMP -> VERTICES_TMP
    org.andengine.util.adt.transformation.Transformation TRANSFORATION_TMP -> TRANSFORATION_TMP
    int VERTEX_INDEX_X -> VERTEX_INDEX_X
    int VERTEX_INDEX_Y -> VERTEX_INDEX_Y
    int COLOR_INDEX -> COLOR_INDEX
    int TEXTURECOORDINATES_INDEX_U -> TEXTURECOORDINATES_INDEX_U
    int TEXTURECOORDINATES_INDEX_V -> TEXTURECOORDINATES_INDEX_V
    int VERTEX_SIZE -> VERTEX_SIZE
    int VERTICES_PER_SPRITE -> VERTICES_PER_SPRITE
    int SPRITE_SIZE -> SPRITE_SIZE
    org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT -> VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT
    org.andengine.opengl.texture.ITexture mTexture -> mTexture
    int mCapacity -> mCapacity
    org.andengine.entity.sprite.batch.vbo.ISpriteBatchVertexBufferObject mSpriteBatchVertexBufferObject -> mSpriteBatchVertexBufferObject
    int mIndex -> mIndex
    int mVertices -> mVertices
    int getIndex() -> getIndex
    org.andengine.opengl.texture.ITexture getTexture() -> getTexture
    void setTexture(org.andengine.opengl.texture.ITexture) -> setTexture
    void setIndex(int) -> setIndex
    org.andengine.entity.sprite.batch.vbo.ISpriteBatchVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
    boolean collidesWith(org.andengine.entity.shape.IShape) -> collidesWith
    boolean contains(float,float) -> contains
    void onUpdateVertices() -> onUpdateVertices
    void preDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> preDraw
    void draw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> draw
    void postDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> postDraw
    void reset() -> reset
    void dispose() -> dispose
    void begin() -> begin
    void end() -> end
    void draw(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float) -> draw
    void drawWithoutChecks(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float) -> drawWithoutChecks
    void draw(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float) -> draw
    void drawWithoutChecks(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float) -> drawWithoutChecks
    void draw(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float,float) -> draw
    void drawWithoutChecks(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float,float) -> drawWithoutChecks
    void draw(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float,float,float) -> draw
    void drawWithoutChecks(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float,float,float) -> drawWithoutChecks
    void draw(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float,float,float,float) -> draw
    void drawWithoutChecks(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float,float,float,float) -> drawWithoutChecks
    void draw(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float,float,float,float,float) -> draw
    void drawWithoutChecks(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float,float,float,float,float) -> drawWithoutChecks
    void draw(org.andengine.entity.sprite.Sprite) -> draw
    void drawWithoutChecks(org.andengine.entity.sprite.Sprite) -> drawWithoutChecks
    void draw(org.andengine.entity.sprite.Sprite,float,float,float,float) -> draw
    void drawWithoutChecks(org.andengine.entity.sprite.Sprite,float,float,float,float) -> drawWithoutChecks
    void draw(org.andengine.entity.sprite.Sprite,float) -> draw
    void drawWithoutChecks(org.andengine.entity.sprite.Sprite,float) -> drawWithoutChecks
    void draw(org.andengine.opengl.texture.region.ITextureRegion,org.andengine.entity.IEntity,float,float) -> draw
    void drawWithoutChecks(org.andengine.opengl.texture.region.ITextureRegion,org.andengine.entity.IEntity,float,float) -> drawWithoutChecks
    void draw(org.andengine.opengl.texture.region.ITextureRegion,org.andengine.entity.IEntity,float,float,float,float,float,float) -> draw
    void drawWithoutChecks(org.andengine.opengl.texture.region.ITextureRegion,org.andengine.entity.IEntity,float,float,float,float,float,float) -> drawWithoutChecks
    void draw(org.andengine.opengl.texture.region.ITextureRegion,org.andengine.entity.IEntity,float,float,float) -> draw
    void drawWithoutChecks(org.andengine.opengl.texture.region.ITextureRegion,org.andengine.entity.IEntity,float,float,float) -> drawWithoutChecks
    void submit() -> submit
    void onSubmit() -> onSubmit
    void assertCapacity(int) -> assertCapacity
    void assertCapacity() -> assertCapacity
    void assertTexture(org.andengine.opengl.texture.region.ITextureRegion) -> assertTexture
    void add(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float,float) -> add
    void addWithPackedColor(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float) -> addWithPackedColor
    void add(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float,float,float) -> add
    void addWithPackedColor(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float) -> addWithPackedColor
    void add(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float,float,float,float) -> add
    void addWithPackedColor(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float) -> addWithPackedColor
    void add(org.andengine.opengl.texture.region.ITextureRegion,float,float,org.andengine.util.adt.transformation.Transformation,float,float,float,float) -> add
    void addWithPackedColor(org.andengine.opengl.texture.region.ITextureRegion,float,float,org.andengine.util.adt.transformation.Transformation,float) -> addWithPackedColor
    void add(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float) -> add
    void add(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float) -> add
    void addWithPackedColor(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float) -> addWithPackedColor
    void addInner(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float) -> addInner
    void addInner(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float,float,float,float,float) -> addInner
    org.andengine.opengl.vbo.IVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
org.andengine.entity.sprite.batch.SpriteGroup -> org.andengine.entity.sprite.batch.SpriteGroup:
    void attachChild(org.andengine.entity.IEntity) -> attachChild
    void attachChild(org.andengine.entity.sprite.Sprite) -> attachChild
    void attachChildren(java.util.ArrayList) -> attachChildren
    boolean onUpdateSpriteBatch() -> onUpdateSpriteBatch
    void assertCapacity() -> assertCapacity
org.andengine.entity.sprite.batch.vbo.HighPerformanceSpriteBatchVertexBufferObject -> org.andengine.entity.sprite.batch.vbo.HighPerformanceSpriteBatchVertexBufferObject:
    int mBufferDataOffset -> mBufferDataOffset
    int getBufferDataOffset() -> getBufferDataOffset
    void setBufferDataOffset(int) -> setBufferDataOffset
    void addWithPackedColor(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float,float) -> addWithPackedColor
    void addWithPackedColor(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float) -> addWithPackedColor
org.andengine.entity.sprite.batch.vbo.ISpriteBatchVertexBufferObject -> org.andengine.entity.sprite.batch.vbo.ISpriteBatchVertexBufferObject:
    int getBufferDataOffset() -> getBufferDataOffset
    void setBufferDataOffset(int) -> setBufferDataOffset
    void addWithPackedColor(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float) -> addWithPackedColor
    void addWithPackedColor(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float,float) -> addWithPackedColor
org.andengine.entity.sprite.batch.vbo.LowMemorySpriteBatchVertexBufferObject -> org.andengine.entity.sprite.batch.vbo.LowMemorySpriteBatchVertexBufferObject:
    int mBufferDataOffset -> mBufferDataOffset
    int getBufferDataOffset() -> getBufferDataOffset
    void setBufferDataOffset(int) -> setBufferDataOffset
    void addWithPackedColor(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float,float,float,float,float) -> addWithPackedColor
    void addWithPackedColor(org.andengine.opengl.texture.region.ITextureRegion,float,float,float,float,float) -> addWithPackedColor
org.andengine.entity.sprite.vbo.HighPerformanceDiamondSpriteVertexBufferObject -> org.andengine.entity.sprite.vbo.HighPerformanceDiamondSpriteVertexBufferObject:
    void onUpdateVertices(org.andengine.entity.sprite.Sprite) -> onUpdateVertices
    void onUpdateTextureCoordinates(org.andengine.entity.sprite.Sprite) -> onUpdateTextureCoordinates
org.andengine.entity.sprite.vbo.HighPerformanceSpriteVertexBufferObject -> org.andengine.entity.sprite.vbo.HighPerformanceSpriteVertexBufferObject:
    void onUpdateColor(org.andengine.entity.sprite.Sprite) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.sprite.Sprite) -> onUpdateVertices
    void onUpdateTextureCoordinates(org.andengine.entity.sprite.Sprite) -> onUpdateTextureCoordinates
org.andengine.entity.sprite.vbo.HighPerformanceTiledSpriteVertexBufferObject -> org.andengine.entity.sprite.vbo.HighPerformanceTiledSpriteVertexBufferObject:
    void onUpdateColor(org.andengine.entity.sprite.TiledSprite) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.sprite.TiledSprite) -> onUpdateVertices
    void onUpdateTextureCoordinates(org.andengine.entity.sprite.TiledSprite) -> onUpdateTextureCoordinates
org.andengine.entity.sprite.vbo.HighPerformanceUncoloredSpriteVertexBufferObject -> org.andengine.entity.sprite.vbo.HighPerformanceUncoloredSpriteVertexBufferObject:
    void onUpdateVertices(org.andengine.entity.sprite.Sprite) -> onUpdateVertices
    void onUpdateTextureCoordinates(org.andengine.entity.sprite.Sprite) -> onUpdateTextureCoordinates
org.andengine.entity.sprite.vbo.HighPerformanceUniformColorSpriteVertexBufferObject -> org.andengine.entity.sprite.vbo.HighPerformanceUniformColorSpriteVertexBufferObject:
    void onUpdateColor(org.andengine.entity.sprite.Sprite) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.sprite.Sprite) -> onUpdateVertices
    void onUpdateTextureCoordinates(org.andengine.entity.sprite.Sprite) -> onUpdateTextureCoordinates
org.andengine.entity.sprite.vbo.IDiamondSpriteVertexBufferObject -> org.andengine.entity.sprite.vbo.IDiamondSpriteVertexBufferObject:
org.andengine.entity.sprite.vbo.ISpriteVertexBufferObject -> org.andengine.entity.sprite.vbo.ISpriteVertexBufferObject:
    void onUpdateColor(org.andengine.entity.sprite.Sprite) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.sprite.Sprite) -> onUpdateVertices
    void onUpdateTextureCoordinates(org.andengine.entity.sprite.Sprite) -> onUpdateTextureCoordinates
org.andengine.entity.sprite.vbo.ITiledSpriteVertexBufferObject -> org.andengine.entity.sprite.vbo.ITiledSpriteVertexBufferObject:
    void onUpdateColor(org.andengine.entity.sprite.TiledSprite) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.sprite.TiledSprite) -> onUpdateVertices
    void onUpdateTextureCoordinates(org.andengine.entity.sprite.TiledSprite) -> onUpdateTextureCoordinates
org.andengine.entity.sprite.vbo.IUncoloredSpriteVertexBufferObject -> org.andengine.entity.sprite.vbo.IUncoloredSpriteVertexBufferObject:
org.andengine.entity.sprite.vbo.IUniformColorSpriteVertexBufferObject -> org.andengine.entity.sprite.vbo.IUniformColorSpriteVertexBufferObject:
org.andengine.entity.sprite.vbo.LowMemoryDiamondSpriteVertexBufferObject -> org.andengine.entity.sprite.vbo.LowMemoryDiamondSpriteVertexBufferObject:
    void onUpdateVertices(org.andengine.entity.sprite.Sprite) -> onUpdateVertices
    void onUpdateTextureCoordinates(org.andengine.entity.sprite.Sprite) -> onUpdateTextureCoordinates
org.andengine.entity.sprite.vbo.LowMemorySpriteVertexBufferObject -> org.andengine.entity.sprite.vbo.LowMemorySpriteVertexBufferObject:
    void onUpdateColor(org.andengine.entity.sprite.Sprite) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.sprite.Sprite) -> onUpdateVertices
    void onUpdateTextureCoordinates(org.andengine.entity.sprite.Sprite) -> onUpdateTextureCoordinates
org.andengine.entity.sprite.vbo.LowMemoryTiledSpriteVertexBufferObject -> org.andengine.entity.sprite.vbo.LowMemoryTiledSpriteVertexBufferObject:
    void onUpdateColor(org.andengine.entity.sprite.TiledSprite) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.sprite.TiledSprite) -> onUpdateVertices
    void onUpdateTextureCoordinates(org.andengine.entity.sprite.TiledSprite) -> onUpdateTextureCoordinates
org.andengine.entity.sprite.vbo.LowMemoryUncoloredSpriteVertexBufferObject -> org.andengine.entity.sprite.vbo.LowMemoryUncoloredSpriteVertexBufferObject:
    void onUpdateVertices(org.andengine.entity.sprite.Sprite) -> onUpdateVertices
    void onUpdateTextureCoordinates(org.andengine.entity.sprite.Sprite) -> onUpdateTextureCoordinates
org.andengine.entity.sprite.vbo.LowMemoryUniformColorSpriteVertexBufferObject -> org.andengine.entity.sprite.vbo.LowMemoryUniformColorSpriteVertexBufferObject:
    void onUpdateColor(org.andengine.entity.sprite.Sprite) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.sprite.Sprite) -> onUpdateVertices
    void onUpdateTextureCoordinates(org.andengine.entity.sprite.Sprite) -> onUpdateTextureCoordinates
org.andengine.entity.text.AutoWrap -> org.andengine.entity.text.AutoWrap:
    org.andengine.entity.text.AutoWrap NONE -> NONE
    org.andengine.entity.text.AutoWrap WORDS -> WORDS
    org.andengine.entity.text.AutoWrap LETTERS -> LETTERS
    org.andengine.entity.text.AutoWrap CJK -> CJK
    org.andengine.entity.text.AutoWrap[] ENUM$VALUES -> ENUM$VALUES
    org.andengine.entity.text.AutoWrap[] values() -> values
    org.andengine.entity.text.AutoWrap valueOf(java.lang.String) -> valueOf
org.andengine.entity.text.Text -> org.andengine.entity.text.Text:
    float LEADING_DEFAULT -> LEADING_DEFAULT
    int VERTEX_INDEX_X -> VERTEX_INDEX_X
    int VERTEX_INDEX_Y -> VERTEX_INDEX_Y
    int COLOR_INDEX -> COLOR_INDEX
    int TEXTURECOORDINATES_INDEX_U -> TEXTURECOORDINATES_INDEX_U
    int TEXTURECOORDINATES_INDEX_V -> TEXTURECOORDINATES_INDEX_V
    int VERTEX_SIZE -> VERTEX_SIZE
    int VERTICES_PER_LETTER -> VERTICES_PER_LETTER
    int LETTER_SIZE -> LETTER_SIZE
    int VERTEX_STRIDE -> VERTEX_STRIDE
    org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT -> VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT
    org.andengine.opengl.font.IFont mFont -> mFont
    float mLineWidthMaximum -> mLineWidthMaximum
    float mLineAlignmentWidth -> mLineAlignmentWidth
    org.andengine.entity.text.TextOptions mTextOptions -> mTextOptions
    int mCharactersMaximum -> mCharactersMaximum
    int mCharactersToDraw -> mCharactersToDraw
    int mVertexCountToDraw -> mVertexCountToDraw
    int mVertexCount -> mVertexCount
    org.andengine.entity.text.vbo.ITextVertexBufferObject mTextVertexBufferObject -> mTextVertexBufferObject
    java.lang.CharSequence mText -> mText
    java.util.ArrayList mLines -> mLines
    org.andengine.util.adt.list.IFloatList mLineWidths -> mLineWidths
    org.andengine.opengl.font.IFont getFont() -> getFont
    int getCharactersMaximum() -> getCharactersMaximum
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.util.ArrayList getLines() -> getLines
    org.andengine.util.adt.list.IFloatList getLineWidths() -> getLineWidths
    float getLineAlignmentWidth() -> getLineAlignmentWidth
    float getLineWidthMaximum() -> getLineWidthMaximum
    float getLeading() -> getLeading
    void setLeading(float) -> setLeading
    org.andengine.util.HorizontalAlign getHorizontalAlign() -> getHorizontalAlign
    void setHorizontalAlign(org.andengine.util.HorizontalAlign) -> setHorizontalAlign
    org.andengine.entity.text.AutoWrap getAutoWrap() -> getAutoWrap
    void setAutoWrap(org.andengine.entity.text.AutoWrap) -> setAutoWrap
    float getAutoWrapWidth() -> getAutoWrapWidth
    void setAutoWrapWidth(float) -> setAutoWrapWidth
    org.andengine.entity.text.TextOptions getTextOptions() -> getTextOptions
    void setTextOptions(org.andengine.entity.text.TextOptions) -> setTextOptions
    void setCharactersToDraw(int) -> setCharactersToDraw
    org.andengine.entity.text.vbo.ITextVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
    void preDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> preDraw
    void draw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> draw
    void postDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> postDraw
    void onUpdateColor() -> onUpdateColor
    void onUpdateVertices() -> onUpdateVertices
    void invalidateText() -> invalidateText
    org.andengine.opengl.vbo.IVertexBufferObject getVertexBufferObject() -> getVertexBufferObject
org.andengine.entity.text.TextOptions -> org.andengine.entity.text.TextOptions:
    org.andengine.entity.text.AutoWrap mAutoWrap -> mAutoWrap
    float mAutoWrapWidth -> mAutoWrapWidth
    float mLeading -> mLeading
    org.andengine.util.HorizontalAlign mHorizontalAlign -> mHorizontalAlign
    org.andengine.entity.text.AutoWrap getAutoWrap() -> getAutoWrap
    void setAutoWrap(org.andengine.entity.text.AutoWrap) -> setAutoWrap
    float getAutoWrapWidth() -> getAutoWrapWidth
    void setAutoWrapWidth(float) -> setAutoWrapWidth
    float getLeading() -> getLeading
    void setLeading(float) -> setLeading
    org.andengine.util.HorizontalAlign getHorizontalAlign() -> getHorizontalAlign
    void setHorizontalAlign(org.andengine.util.HorizontalAlign) -> setHorizontalAlign
org.andengine.entity.text.TickerText -> org.andengine.entity.text.TickerText:
    org.andengine.entity.text.TickerText$TickerTextOptions mTickerTextOptions -> mTickerTextOptions
    int mCharactersVisible -> mCharactersVisible
    float mSecondsElapsed -> mSecondsElapsed
    float mDuration -> mDuration
    org.andengine.entity.text.TickerText$TickerTextOptions getTextOptions() -> getTextOptions
    boolean isReverse() -> isReverse
    void setReverse(boolean) -> setReverse
    float getCharactersPerSecond() -> getCharactersPerSecond
    void setCharactersPerSecond(float) -> setCharactersPerSecond
    int getCharactersVisible() -> getCharactersVisible
    void setText(java.lang.CharSequence) -> setText
    void onManagedUpdate(float) -> onManagedUpdate
    void draw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> draw
    void reset() -> reset
    org.andengine.entity.text.TextOptions getTextOptions() -> getTextOptions
org.andengine.entity.text.TickerText$TickerTextOptions -> org.andengine.entity.text.TickerText$TickerTextOptions:
    float mCharactersPerSecond -> mCharactersPerSecond
    boolean mReverse -> mReverse
    float getCharactersPerSecond() -> getCharactersPerSecond
    void setCharactersPerSecond(float) -> setCharactersPerSecond
    boolean isReverse() -> isReverse
    void setReverse(boolean) -> setReverse
org.andengine.entity.text.exception.OutOfCharactersException -> org.andengine.entity.text.exception.OutOfCharactersException:
    long serialVersionUID -> serialVersionUID
org.andengine.entity.text.exception.TextException -> org.andengine.entity.text.exception.TextException:
    long serialVersionUID -> serialVersionUID
org.andengine.entity.text.vbo.HighPerformanceTextVertexBufferObject -> org.andengine.entity.text.vbo.HighPerformanceTextVertexBufferObject:
    int[] $SWITCH_TABLE$org$andengine$util$HorizontalAlign -> $SWITCH_TABLE$org$andengine$util$HorizontalAlign
    void onUpdateColor(org.andengine.entity.text.Text) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.text.Text) -> onUpdateVertices
    int[] $SWITCH_TABLE$org$andengine$util$HorizontalAlign() -> $SWITCH_TABLE$org$andengine$util$HorizontalAlign
org.andengine.entity.text.vbo.ITextVertexBufferObject -> org.andengine.entity.text.vbo.ITextVertexBufferObject:
    void onUpdateColor(org.andengine.entity.text.Text) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.text.Text) -> onUpdateVertices
org.andengine.entity.text.vbo.LowMemoryTextVertexBufferObject -> org.andengine.entity.text.vbo.LowMemoryTextVertexBufferObject:
    int[] $SWITCH_TABLE$org$andengine$util$HorizontalAlign -> $SWITCH_TABLE$org$andengine$util$HorizontalAlign
    void onUpdateColor(org.andengine.entity.text.Text) -> onUpdateColor
    void onUpdateVertices(org.andengine.entity.text.Text) -> onUpdateVertices
    int[] $SWITCH_TABLE$org$andengine$util$HorizontalAlign() -> $SWITCH_TABLE$org$andengine$util$HorizontalAlign
org.andengine.entity.util.AverageFPSCounter -> org.andengine.entity.util.AverageFPSCounter:
    float AVERAGE_DURATION_DEFAULT -> AVERAGE_DURATION_DEFAULT
    float mAverageDuration -> mAverageDuration
    void onHandleAverageDurationElapsed(float) -> onHandleAverageDurationElapsed
    void onUpdate(float) -> onUpdate
org.andengine.entity.util.FPSCounter -> org.andengine.entity.util.FPSCounter:
    float mSecondsElapsed -> mSecondsElapsed
    int mFrames -> mFrames
    float getFPS() -> getFPS
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.andengine.entity.util.FPSLogger -> org.andengine.entity.util.FPSLogger:
    float mShortestFrame -> mShortestFrame
    float mLongestFrame -> mLongestFrame
    void onHandleAverageDurationElapsed(float) -> onHandleAverageDurationElapsed
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    void onLogFPS() -> onLogFPS
org.andengine.entity.util.FrameCountCrasher -> org.andengine.entity.util.FrameCountCrasher:
    int mFramesLeft -> mFramesLeft
    float[] mFrameLengths -> mFrameLengths
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.andengine.entity.util.FrameCounter -> org.andengine.entity.util.FrameCounter:
    int mFrames -> mFrames
    int getFrames() -> getFrames
    void onUpdate(float) -> onUpdate
    void reset() -> reset
org.andengine.entity.util.ScreenCapture -> org.andengine.entity.util.ScreenCapture:
    java.lang.String mFilePath -> mFilePath
    org.andengine.entity.util.ScreenGrabber mScreenGrabber -> mScreenGrabber
    org.andengine.entity.util.ScreenCapture$IScreenCaptureCallback mScreenCaptureCallback -> mScreenCaptureCallback
    void onManagedDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onManagedDraw
    void onManagedUpdate(float) -> onManagedUpdate
    void reset() -> reset
    void onScreenGrabbed(android.graphics.Bitmap) -> onScreenGrabbed
    void onScreenGrabFailed(java.lang.Exception) -> onScreenGrabFailed
    void capture(int,int,java.lang.String,org.andengine.entity.util.ScreenCapture$IScreenCaptureCallback) -> capture
    void capture(int,int,int,int,java.lang.String,org.andengine.entity.util.ScreenCapture$IScreenCaptureCallback) -> capture
    void saveCapture(android.graphics.Bitmap,java.lang.String) -> saveCapture
org.andengine.entity.util.ScreenCapture$IScreenCaptureCallback -> org.andengine.entity.util.ScreenCapture$IScreenCaptureCallback:
    void onScreenCaptured(java.lang.String) -> onScreenCaptured
    void onScreenCaptureFailed(java.lang.String,java.lang.Exception) -> onScreenCaptureFailed
org.andengine.entity.util.ScreenGrabber -> org.andengine.entity.util.ScreenGrabber:
    int mGrabX -> mGrabX
    int mGrabY -> mGrabY
    int mGrabWidth -> mGrabWidth
    int mGrabHeight -> mGrabHeight
    boolean mScreenGrabPending -> mScreenGrabPending
    org.andengine.entity.util.ScreenGrabber$IScreenGrabberCallback mScreenGrabCallback -> mScreenGrabCallback
    void onManagedDraw(org.andengine.opengl.util.GLState,org.andengine.engine.camera.Camera) -> onManagedDraw
    void onManagedUpdate(float) -> onManagedUpdate
    void reset() -> reset
    void grab(int,int,org.andengine.entity.util.ScreenGrabber$IScreenGrabberCallback) -> grab
    void grab(int,int,int,int,org.andengine.entity.util.ScreenGrabber$IScreenGrabberCallback) -> grab
    android.graphics.Bitmap grab(int,int,int,int) -> grab
org.andengine.entity.util.ScreenGrabber$IScreenGrabberCallback -> org.andengine.entity.util.ScreenGrabber$IScreenGrabberCallback:
    void onScreenGrabbed(android.graphics.Bitmap) -> onScreenGrabbed
    void onScreenGrabFailed(java.lang.Exception) -> onScreenGrabFailed
org.andengine.input.sensor.BaseSensorData -> org.andengine.input.sensor.BaseSensorData:
    float[] mValues -> mValues
    int mAccuracy -> mAccuracy
    int mDisplayRotation -> mDisplayRotation
    float[] getValues() -> getValues
    void setValues(float[]) -> setValues
    void setAccuracy(int) -> setAccuracy
    int getAccuracy() -> getAccuracy
    java.lang.String toString() -> toString
org.andengine.input.sensor.SensorDelay -> org.andengine.input.sensor.SensorDelay:
    org.andengine.input.sensor.SensorDelay NORMAL -> NORMAL
    org.andengine.input.sensor.SensorDelay UI -> UI
    org.andengine.input.sensor.SensorDelay GAME -> GAME
    org.andengine.input.sensor.SensorDelay FASTEST -> FASTEST
    int mDelay -> mDelay
    org.andengine.input.sensor.SensorDelay[] ENUM$VALUES -> ENUM$VALUES
    int getDelay() -> getDelay
    org.andengine.input.sensor.SensorDelay[] values() -> values
    org.andengine.input.sensor.SensorDelay valueOf(java.lang.String) -> valueOf
org.andengine.input.sensor.acceleration.AccelerationData -> org.andengine.input.sensor.acceleration.AccelerationData:
    org.andengine.input.sensor.acceleration.AccelerationData$IAxisSwap[] AXISSWAPS -> AXISSWAPS
    float getX() -> getX
    float getY() -> getY
    float getZ() -> getZ
    void setX(float) -> setX
    void setY(float) -> setY
    void setZ(float) -> setZ
    void setValues(float[]) -> setValues
    java.lang.String toString() -> toString
org.andengine.input.sensor.acceleration.AccelerationData$1 -> org.andengine.input.sensor.acceleration.AccelerationData$1:
    void swapAxis(float[]) -> swapAxis
org.andengine.input.sensor.acceleration.AccelerationData$2 -> org.andengine.input.sensor.acceleration.AccelerationData$2:
    void swapAxis(float[]) -> swapAxis
org.andengine.input.sensor.acceleration.AccelerationData$3 -> org.andengine.input.sensor.acceleration.AccelerationData$3:
    void swapAxis(float[]) -> swapAxis
org.andengine.input.sensor.acceleration.AccelerationData$4 -> org.andengine.input.sensor.acceleration.AccelerationData$4:
    void swapAxis(float[]) -> swapAxis
org.andengine.input.sensor.acceleration.AccelerationData$IAxisSwap -> org.andengine.input.sensor.acceleration.AccelerationData$IAxisSwap:
    void swapAxis(float[]) -> swapAxis
org.andengine.input.sensor.acceleration.AccelerationSensorOptions -> org.andengine.input.sensor.acceleration.AccelerationSensorOptions:
    org.andengine.input.sensor.SensorDelay mSensorDelay -> mSensorDelay
    org.andengine.input.sensor.SensorDelay getSensorDelay() -> getSensorDelay
org.andengine.input.sensor.acceleration.IAccelerationListener -> org.andengine.input.sensor.acceleration.IAccelerationListener:
    void onAccelerationAccuracyChanged(org.andengine.input.sensor.acceleration.AccelerationData) -> onAccelerationAccuracyChanged
    void onAccelerationChanged(org.andengine.input.sensor.acceleration.AccelerationData) -> onAccelerationChanged
org.andengine.input.sensor.location.ILocationListener -> org.andengine.input.sensor.location.ILocationListener:
    void onLocationProviderEnabled() -> onLocationProviderEnabled
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onLocationLost() -> onLocationLost
    void onLocationProviderDisabled() -> onLocationProviderDisabled
    void onLocationProviderStatusChanged(org.andengine.input.sensor.location.LocationProviderStatus,android.os.Bundle) -> onLocationProviderStatusChanged
org.andengine.input.sensor.location.LocationProviderStatus -> org.andengine.input.sensor.location.LocationProviderStatus:
    org.andengine.input.sensor.location.LocationProviderStatus AVAILABLE -> AVAILABLE
    org.andengine.input.sensor.location.LocationProviderStatus OUT_OF_SERVICE -> OUT_OF_SERVICE
    org.andengine.input.sensor.location.LocationProviderStatus TEMPORARILY_UNAVAILABLE -> TEMPORARILY_UNAVAILABLE
    org.andengine.input.sensor.location.LocationProviderStatus[] ENUM$VALUES -> ENUM$VALUES
    org.andengine.input.sensor.location.LocationProviderStatus[] values() -> values
    org.andengine.input.sensor.location.LocationProviderStatus valueOf(java.lang.String) -> valueOf
org.andengine.input.sensor.location.LocationSensorOptions -> org.andengine.input.sensor.location.LocationSensorOptions:
    long MINIMUMTRIGGERTIME_DEFAULT -> MINIMUMTRIGGERTIME_DEFAULT
    long MINIMUMTRIGGERDISTANCE_DEFAULT -> MINIMUMTRIGGERDISTANCE_DEFAULT
    boolean mEnabledOnly -> mEnabledOnly
    long mMinimumTriggerTime -> mMinimumTriggerTime
    long mMinimumTriggerDistance -> mMinimumTriggerDistance
    void setEnabledOnly(boolean) -> setEnabledOnly
    boolean isEnabledOnly() -> isEnabledOnly
    long getMinimumTriggerTime() -> getMinimumTriggerTime
    void setMinimumTriggerTime(long) -> setMinimumTriggerTime
    long getMinimumTriggerDistance() -> getMinimumTriggerDistance
    void setMinimumTriggerDistance(long) -> setMinimumTriggerDistance
org.andengine.input.sensor.orientation.IOrientationListener -> org.andengine.input.sensor.orientation.IOrientationListener:
    void onOrientationAccuracyChanged(org.andengine.input.sensor.orientation.OrientationData) -> onOrientationAccuracyChanged
    void onOrientationChanged(org.andengine.input.sensor.orientation.OrientationData) -> onOrientationChanged
org.andengine.input.sensor.orientation.OrientationData -> org.andengine.input.sensor.orientation.OrientationData:
    float[] mAccelerationValues -> mAccelerationValues
    float[] mMagneticFieldValues -> mMagneticFieldValues
    float[] mRotationMatrix -> mRotationMatrix
    int mMagneticFieldAccuracy -> mMagneticFieldAccuracy
    float getRoll() -> getRoll
    float getPitch() -> getPitch
    float getYaw() -> getYaw
    void setValues(float[]) -> setValues
    void setAccuracy(int) -> setAccuracy
    void setAccelerationValues(float[]) -> setAccelerationValues
    void setMagneticFieldValues(float[]) -> setMagneticFieldValues
    void updateOrientation() -> updateOrientation
    int getAccelerationAccuracy() -> getAccelerationAccuracy
    void setAccelerationAccuracy(int) -> setAccelerationAccuracy
    int getMagneticFieldAccuracy() -> getMagneticFieldAccuracy
    void setMagneticFieldAccuracy(int) -> setMagneticFieldAccuracy
    java.lang.String toString() -> toString
org.andengine.input.sensor.orientation.OrientationSensorOptions -> org.andengine.input.sensor.orientation.OrientationSensorOptions:
    org.andengine.input.sensor.SensorDelay mSensorDelay -> mSensorDelay
    org.andengine.input.sensor.SensorDelay getSensorDelay() -> getSensorDelay
org.andengine.input.touch.TouchEvent -> org.andengine.input.touch.TouchEvent:
    int INVALID_POINTER_ID -> INVALID_POINTER_ID
    int ACTION_CANCEL -> ACTION_CANCEL
    int ACTION_DOWN -> ACTION_DOWN
    int ACTION_MOVE -> ACTION_MOVE
    int ACTION_OUTSIDE -> ACTION_OUTSIDE
    int ACTION_UP -> ACTION_UP
    org.andengine.input.touch.TouchEvent$TouchEventPool TOUCHEVENT_POOL -> TOUCHEVENT_POOL
    int mPointerID -> mPointerID
    float mX -> mX
    float mY -> mY
    int mAction -> mAction
    android.view.MotionEvent mMotionEvent -> mMotionEvent
    org.andengine.input.touch.TouchEvent obtain(float,float,int,int,android.view.MotionEvent) -> obtain
    void set(float,float,int,int,android.view.MotionEvent) -> set
    void recycle() -> recycle
    void recycle(org.andengine.input.touch.TouchEvent) -> recycle
    float getX() -> getX
    float getY() -> getY
    void set(float,float) -> set
    void offset(float,float) -> offset
    int getPointerID() -> getPointerID
    int getAction() -> getAction
    boolean isActionDown() -> isActionDown
    boolean isActionUp() -> isActionUp
    boolean isActionMove() -> isActionMove
    boolean isActionCancel() -> isActionCancel
    boolean isActionOutside() -> isActionOutside
    android.view.MotionEvent getMotionEvent() -> getMotionEvent
org.andengine.input.touch.TouchEvent$TouchEventPool -> org.andengine.input.touch.TouchEvent$TouchEventPool:
    org.andengine.input.touch.TouchEvent onAllocatePoolItem() -> onAllocatePoolItem
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
org.andengine.input.touch.controller.BaseTouchController -> org.andengine.input.touch.controller.BaseTouchController:
    org.andengine.input.touch.controller.ITouchEventCallback mTouchEventCallback -> mTouchEventCallback
    org.andengine.util.adt.pool.RunnablePoolUpdateHandler mTouchEventRunnablePoolUpdateHandler -> mTouchEventRunnablePoolUpdateHandler
    void setTouchEventCallback(org.andengine.input.touch.controller.ITouchEventCallback) -> setTouchEventCallback
    void reset() -> reset
    void onUpdate(float) -> onUpdate
    void fireTouchEvent(float,float,int,int,android.view.MotionEvent) -> fireTouchEvent
    org.andengine.input.touch.controller.ITouchEventCallback access$0(org.andengine.input.touch.controller.BaseTouchController) -> access$0
org.andengine.input.touch.controller.BaseTouchController$1 -> org.andengine.input.touch.controller.BaseTouchController$1:
    org.andengine.input.touch.controller.BaseTouchController this$0 -> this$0
    org.andengine.input.touch.controller.BaseTouchController$TouchEventRunnablePoolItem onAllocatePoolItem() -> onAllocatePoolItem
    org.andengine.util.adt.pool.RunnablePoolItem onAllocatePoolItem() -> onAllocatePoolItem
org.andengine.input.touch.controller.BaseTouchController$TouchEventRunnablePoolItem -> org.andengine.input.touch.controller.BaseTouchController$TouchEventRunnablePoolItem:
    org.andengine.input.touch.TouchEvent mTouchEvent -> mTouchEvent
    org.andengine.input.touch.controller.BaseTouchController this$0 -> this$0
    void set(org.andengine.input.touch.TouchEvent) -> set
    void run() -> run
    void onRecycle() -> onRecycle
org.andengine.input.touch.controller.ITouchController -> org.andengine.input.touch.controller.ITouchController:
    void setTouchEventCallback(org.andengine.input.touch.controller.ITouchEventCallback) -> setTouchEventCallback
    void onHandleMotionEvent(android.view.MotionEvent) -> onHandleMotionEvent
org.andengine.input.touch.controller.ITouchEventCallback -> org.andengine.input.touch.controller.ITouchEventCallback:
    boolean onTouchEvent(org.andengine.input.touch.TouchEvent) -> onTouchEvent
org.andengine.input.touch.controller.MultiTouch -> org.andengine.input.touch.controller.MultiTouch:
    java.lang.Boolean SUPPORTED -> SUPPORTED
    java.lang.Boolean SUPPORTED_DISTINCT -> SUPPORTED_DISTINCT
    boolean isSupported(android.content.Context) -> isSupported
    boolean isSupportedDistinct(android.content.Context) -> isSupportedDistinct
org.andengine.input.touch.controller.MultiTouchController -> org.andengine.input.touch.controller.MultiTouchController:
    void onHandleMotionEvent(android.view.MotionEvent) -> onHandleMotionEvent
    void onHandleTouchMove(android.view.MotionEvent) -> onHandleTouchMove
    void onHandleTouchAction(int,android.view.MotionEvent) -> onHandleTouchAction
    int getPointerIndex(android.view.MotionEvent) -> getPointerIndex
org.andengine.input.touch.controller.SingleTouchController -> org.andengine.input.touch.controller.SingleTouchController:
    void onHandleMotionEvent(android.view.MotionEvent) -> onHandleMotionEvent
org.andengine.input.touch.detector.BaseDetector -> org.andengine.input.touch.detector.BaseDetector:
    boolean mEnabled -> mEnabled
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    void reset() -> reset
    boolean onManagedTouchEvent(org.andengine.input.touch.TouchEvent) -> onManagedTouchEvent
    boolean onSceneTouchEvent(org.andengine.entity.scene.Scene,org.andengine.input.touch.TouchEvent) -> onSceneTouchEvent
    boolean onTouchEvent(org.andengine.input.touch.TouchEvent) -> onTouchEvent
org.andengine.input.touch.detector.ClickDetector -> org.andengine.input.touch.detector.ClickDetector:
    long TRIGGER_CLICK_MAXIMUM_MILLISECONDS_DEFAULT -> TRIGGER_CLICK_MAXIMUM_MILLISECONDS_DEFAULT
    long mTriggerClickMaximumMilliseconds -> mTriggerClickMaximumMilliseconds
    org.andengine.input.touch.detector.ClickDetector$IClickDetectorListener mClickDetectorListener -> mClickDetectorListener
    int mPointerID -> mPointerID
    long mDownTimeMilliseconds -> mDownTimeMilliseconds
    long getTriggerClickMaximumMilliseconds() -> getTriggerClickMaximumMilliseconds
    void setTriggerClickMaximumMilliseconds(long) -> setTriggerClickMaximumMilliseconds
    void reset() -> reset
    boolean onManagedTouchEvent(org.andengine.input.touch.TouchEvent) -> onManagedTouchEvent
    void prepareClick(org.andengine.input.touch.TouchEvent) -> prepareClick
org.andengine.input.touch.detector.ClickDetector$IClickDetectorListener -> org.andengine.input.touch.detector.ClickDetector$IClickDetectorListener:
    void onClick(org.andengine.input.touch.detector.ClickDetector,int,float,float) -> onClick
org.andengine.input.touch.detector.ContinuousHoldDetector -> org.andengine.input.touch.detector.ContinuousHoldDetector:
    float TIME_BETWEEN_UPDATES_DEFAULT -> TIME_BETWEEN_UPDATES_DEFAULT
    org.andengine.engine.handler.timer.TimerHandler mTimerHandler -> mTimerHandler
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    boolean onManagedTouchEvent(org.andengine.input.touch.TouchEvent) -> onManagedTouchEvent
    void prepareHold(org.andengine.input.touch.TouchEvent) -> prepareHold
    void fireListener() -> fireListener
org.andengine.input.touch.detector.ContinuousHoldDetector$1 -> org.andengine.input.touch.detector.ContinuousHoldDetector$1:
    org.andengine.input.touch.detector.ContinuousHoldDetector this$0 -> this$0
    void onTimePassed(org.andengine.engine.handler.timer.TimerHandler) -> onTimePassed
org.andengine.input.touch.detector.HoldDetector -> org.andengine.input.touch.detector.HoldDetector:
    long TRIGGER_HOLD_MINIMUM_MILLISECONDS_DEFAULT -> TRIGGER_HOLD_MINIMUM_MILLISECONDS_DEFAULT
    float TRIGGER_HOLD_MAXIMUM_DISTANCE_DEFAULT -> TRIGGER_HOLD_MAXIMUM_DISTANCE_DEFAULT
    long mTriggerHoldMinimumMilliseconds -> mTriggerHoldMinimumMilliseconds
    float mTriggerHoldMaximumDistance -> mTriggerHoldMaximumDistance
    org.andengine.input.touch.detector.HoldDetector$IHoldDetectorListener mHoldDetectorListener -> mHoldDetectorListener
    int mPointerID -> mPointerID
    long mDownTimeMilliseconds -> mDownTimeMilliseconds
    float mDownX -> mDownX
    float mDownY -> mDownY
    float mHoldX -> mHoldX
    float mHoldY -> mHoldY
    boolean mMaximumDistanceExceeded -> mMaximumDistanceExceeded
    boolean mTriggering -> mTriggering
    long getTriggerHoldMinimumMilliseconds() -> getTriggerHoldMinimumMilliseconds
    void setTriggerHoldMinimumMilliseconds(long) -> setTriggerHoldMinimumMilliseconds
    float getTriggerHoldMaximumDistance() -> getTriggerHoldMaximumDistance
    void setTriggerHoldMaximumDistance(float) -> setTriggerHoldMaximumDistance
    boolean isHolding() -> isHolding
    void reset() -> reset
    boolean onManagedTouchEvent(org.andengine.input.touch.TouchEvent) -> onManagedTouchEvent
    void prepareHold(org.andengine.input.touch.TouchEvent) -> prepareHold
    void triggerOnHoldStarted() -> triggerOnHoldStarted
    void triggerOnHold(long) -> triggerOnHold
    void triggerOnHoldFinished(long) -> triggerOnHoldFinished
org.andengine.input.touch.detector.HoldDetector$IHoldDetectorListener -> org.andengine.input.touch.detector.HoldDetector$IHoldDetectorListener:
    void onHoldStarted(org.andengine.input.touch.detector.HoldDetector,int,float,float) -> onHoldStarted
    void onHold(org.andengine.input.touch.detector.HoldDetector,long,int,float,float) -> onHold
    void onHoldFinished(org.andengine.input.touch.detector.HoldDetector,long,int,float,float) -> onHoldFinished
org.andengine.input.touch.detector.PinchZoomDetector -> org.andengine.input.touch.detector.PinchZoomDetector:
    float TRIGGER_PINCHZOOM_MINIMUM_DISTANCE_DEFAULT -> TRIGGER_PINCHZOOM_MINIMUM_DISTANCE_DEFAULT
    org.andengine.input.touch.detector.PinchZoomDetector$IPinchZoomDetectorListener mPinchZoomDetectorListener -> mPinchZoomDetectorListener
    float mInitialDistance -> mInitialDistance
    float mCurrentDistance -> mCurrentDistance
    boolean mPinchZooming -> mPinchZooming
    boolean isZooming() -> isZooming
    void reset() -> reset
    boolean onManagedTouchEvent(org.andengine.input.touch.TouchEvent) -> onManagedTouchEvent
    float getZoomFactor() -> getZoomFactor
    float calculatePointerDistance(android.view.MotionEvent) -> calculatePointerDistance
    boolean hasTwoOrMorePointers(android.view.MotionEvent) -> hasTwoOrMorePointers
org.andengine.input.touch.detector.PinchZoomDetector$IPinchZoomDetectorListener -> org.andengine.input.touch.detector.PinchZoomDetector$IPinchZoomDetectorListener:
    void onPinchZoomStarted(org.andengine.input.touch.detector.PinchZoomDetector,org.andengine.input.touch.TouchEvent) -> onPinchZoomStarted
    void onPinchZoom(org.andengine.input.touch.detector.PinchZoomDetector,org.andengine.input.touch.TouchEvent,float) -> onPinchZoom
    void onPinchZoomFinished(org.andengine.input.touch.detector.PinchZoomDetector,org.andengine.input.touch.TouchEvent,float) -> onPinchZoomFinished
org.andengine.input.touch.detector.ScrollDetector -> org.andengine.input.touch.detector.ScrollDetector:
    float TRIGGER_SCROLL_MINIMUM_DISTANCE_DEFAULT -> TRIGGER_SCROLL_MINIMUM_DISTANCE_DEFAULT
    float mTriggerScrollMinimumDistance -> mTriggerScrollMinimumDistance
    org.andengine.input.touch.detector.ScrollDetector$IScrollDetectorListener mScrollDetectorListener -> mScrollDetectorListener
    int mPointerID -> mPointerID
    boolean mTriggering -> mTriggering
    float mLastX -> mLastX
    float mLastY -> mLastY
    float getTriggerScrollMinimumDistance() -> getTriggerScrollMinimumDistance
    void setTriggerScrollMinimumDistance(float) -> setTriggerScrollMinimumDistance
    void reset() -> reset
    boolean onManagedTouchEvent(org.andengine.input.touch.TouchEvent) -> onManagedTouchEvent
    void prepareScroll(int,float,float) -> prepareScroll
    void triggerOnScrollStarted(float,float) -> triggerOnScrollStarted
    void triggerOnScroll(float,float) -> triggerOnScroll
    void triggerOnScrollFinished(float,float) -> triggerOnScrollFinished
    float getX(org.andengine.input.touch.TouchEvent) -> getX
    float getY(org.andengine.input.touch.TouchEvent) -> getY
org.andengine.input.touch.detector.ScrollDetector$IScrollDetectorListener -> org.andengine.input.touch.detector.ScrollDetector$IScrollDetectorListener:
    void onScrollStarted(org.andengine.input.touch.detector.ScrollDetector,int,float,float) -> onScrollStarted
    void onScroll(org.andengine.input.touch.detector.ScrollDetector,int,float,float) -> onScroll
    void onScrollFinished(org.andengine.input.touch.detector.ScrollDetector,int,float,float) -> onScrollFinished
org.andengine.input.touch.detector.SurfaceGestureDetector -> org.andengine.input.touch.detector.SurfaceGestureDetector:
    float SWIPE_MIN_DISTANCE_DEFAULT -> SWIPE_MIN_DISTANCE_DEFAULT
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    boolean onSingleTap() -> onSingleTap
    boolean onDoubleTap() -> onDoubleTap
    boolean onSwipeUp() -> onSwipeUp
    boolean onSwipeDown() -> onSwipeDown
    boolean onSwipeLeft() -> onSwipeLeft
    boolean onSwipeRight() -> onSwipeRight
    void reset() -> reset
    boolean onManagedTouchEvent(org.andengine.input.touch.TouchEvent) -> onManagedTouchEvent
org.andengine.input.touch.detector.SurfaceGestureDetector$InnerOnGestureDetectorListener -> org.andengine.input.touch.detector.SurfaceGestureDetector$InnerOnGestureDetectorListener:
    float mSwipeMinDistance -> mSwipeMinDistance
    org.andengine.input.touch.detector.SurfaceGestureDetector this$0 -> this$0
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
org.andengine.input.touch.detector.SurfaceGestureDetectorAdapter -> org.andengine.input.touch.detector.SurfaceGestureDetectorAdapter:
    boolean onDoubleTap() -> onDoubleTap
    boolean onSingleTap() -> onSingleTap
    boolean onSwipeDown() -> onSwipeDown
    boolean onSwipeLeft() -> onSwipeLeft
    boolean onSwipeRight() -> onSwipeRight
    boolean onSwipeUp() -> onSwipeUp
org.andengine.input.touch.detector.SurfaceScrollDetector -> org.andengine.input.touch.detector.SurfaceScrollDetector:
    float getX(org.andengine.input.touch.TouchEvent) -> getX
    float getY(org.andengine.input.touch.TouchEvent) -> getY
org.andengine.opengl.GLES20Fix -> org.andengine.opengl.GLES20Fix:
    boolean NATIVE_LIB_LOADED -> NATIVE_LIB_LOADED
    boolean WORKAROUND_MISSING_GLES20_METHODS -> WORKAROUND_MISSING_GLES20_METHODS
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glVertexAttribPointerFix(int,int,int,boolean,int,int) -> glVertexAttribPointerFix
    void glDrawElementsFix(int,int,int,int) -> glDrawElementsFix
org.andengine.opengl.exception.GLException -> org.andengine.opengl.exception.GLException:
    long serialVersionUID -> serialVersionUID
    int mError -> mError
    int getError() -> getError
    java.lang.String getErrorString(int) -> getErrorString
org.andengine.opengl.exception.GLFrameBufferException -> org.andengine.opengl.exception.GLFrameBufferException:
    long serialVersionUID -> serialVersionUID
org.andengine.opengl.exception.RenderTextureInitializationException -> org.andengine.opengl.exception.RenderTextureInitializationException:
    long serialVersionUID -> serialVersionUID
org.andengine.opengl.font.BitmapFont -> org.andengine.opengl.font.BitmapFont:
    java.lang.String TAG_INFO -> TAG_INFO
    int TAG_INFO_ATTRIBUTECOUNT -> TAG_INFO_ATTRIBUTECOUNT
    java.lang.String TAG_INFO_ATTRIBUTE_FACE -> TAG_INFO_ATTRIBUTE_FACE
    java.lang.String TAG_INFO_ATTRIBUTE_SIZE -> TAG_INFO_ATTRIBUTE_SIZE
    java.lang.String TAG_INFO_ATTRIBUTE_BOLD -> TAG_INFO_ATTRIBUTE_BOLD
    java.lang.String TAG_INFO_ATTRIBUTE_ITALIC -> TAG_INFO_ATTRIBUTE_ITALIC
    java.lang.String TAG_INFO_ATTRIBUTE_CHARSET -> TAG_INFO_ATTRIBUTE_CHARSET
    java.lang.String TAG_INFO_ATTRIBUTE_UNICODE -> TAG_INFO_ATTRIBUTE_UNICODE
    java.lang.String TAG_INFO_ATTRIBUTE_STRETCHHEIGHT -> TAG_INFO_ATTRIBUTE_STRETCHHEIGHT
    java.lang.String TAG_INFO_ATTRIBUTE_SMOOTH -> TAG_INFO_ATTRIBUTE_SMOOTH
    java.lang.String TAG_INFO_ATTRIBUTE_ANTIALIASED -> TAG_INFO_ATTRIBUTE_ANTIALIASED
    java.lang.String TAG_INFO_ATTRIBUTE_PADDING -> TAG_INFO_ATTRIBUTE_PADDING
    java.lang.String TAG_INFO_ATTRIBUTE_SPACING -> TAG_INFO_ATTRIBUTE_SPACING
    int TAG_INFO_ATTRIBUTE_FACE_INDEX -> TAG_INFO_ATTRIBUTE_FACE_INDEX
    int TAG_INFO_ATTRIBUTE_SIZE_INDEX -> TAG_INFO_ATTRIBUTE_SIZE_INDEX
    int TAG_INFO_ATTRIBUTE_BOLD_INDEX -> TAG_INFO_ATTRIBUTE_BOLD_INDEX
    int TAG_INFO_ATTRIBUTE_ITALIC_INDEX -> TAG_INFO_ATTRIBUTE_ITALIC_INDEX
    int TAG_INFO_ATTRIBUTE_CHARSET_INDEX -> TAG_INFO_ATTRIBUTE_CHARSET_INDEX
    int TAG_INFO_ATTRIBUTE_UNICODE_INDEX -> TAG_INFO_ATTRIBUTE_UNICODE_INDEX
    int TAG_INFO_ATTRIBUTE_STRETCHHEIGHT_INDEX -> TAG_INFO_ATTRIBUTE_STRETCHHEIGHT_INDEX
    int TAG_INFO_ATTRIBUTE_SMOOTH_INDEX -> TAG_INFO_ATTRIBUTE_SMOOTH_INDEX
    int TAG_INFO_ATTRIBUTE_ANTIALIASED_INDEX -> TAG_INFO_ATTRIBUTE_ANTIALIASED_INDEX
    int TAG_INFO_ATTRIBUTE_PADDING_INDEX -> TAG_INFO_ATTRIBUTE_PADDING_INDEX
    int TAG_INFO_ATTRIBUTE_SPACING_INDEX -> TAG_INFO_ATTRIBUTE_SPACING_INDEX
    java.lang.String TAG_COMMON -> TAG_COMMON
    int TAG_COMMON_ATTRIBUTECOUNT -> TAG_COMMON_ATTRIBUTECOUNT
    java.lang.String TAG_COMMON_ATTRIBUTE_LINEHEIGHT -> TAG_COMMON_ATTRIBUTE_LINEHEIGHT
    java.lang.String TAG_COMMON_ATTRIBUTE_BASE -> TAG_COMMON_ATTRIBUTE_BASE
    java.lang.String TAG_COMMON_ATTRIBUTE_SCALEWIDTH -> TAG_COMMON_ATTRIBUTE_SCALEWIDTH
    java.lang.String TAG_COMMON_ATTRIBUTE_SCALEHEIGHT -> TAG_COMMON_ATTRIBUTE_SCALEHEIGHT
    java.lang.String TAG_COMMON_ATTRIBUTE_PAGES -> TAG_COMMON_ATTRIBUTE_PAGES
    java.lang.String TAG_COMMON_ATTRIBUTE_PACKED -> TAG_COMMON_ATTRIBUTE_PACKED
    int TAG_COMMON_ATTRIBUTE_LINEHEIGHT_INDEX -> TAG_COMMON_ATTRIBUTE_LINEHEIGHT_INDEX
    int TAG_COMMON_ATTRIBUTE_BASE_INDEX -> TAG_COMMON_ATTRIBUTE_BASE_INDEX
    int TAG_COMMON_ATTRIBUTE_SCALEWIDTH_INDEX -> TAG_COMMON_ATTRIBUTE_SCALEWIDTH_INDEX
    int TAG_COMMON_ATTRIBUTE_SCALEHEIGHT_INDEX -> TAG_COMMON_ATTRIBUTE_SCALEHEIGHT_INDEX
    int TAG_COMMON_ATTRIBUTE_PAGES_INDEX -> TAG_COMMON_ATTRIBUTE_PAGES_INDEX
    int TAG_COMMON_ATTRIBUTE_PACKED_INDEX -> TAG_COMMON_ATTRIBUTE_PACKED_INDEX
    java.lang.String TAG_PAGE -> TAG_PAGE
    int TAG_PAGE_ATTRIBUTECOUNT -> TAG_PAGE_ATTRIBUTECOUNT
    java.lang.String TAG_PAGE_ATTRIBUTE_ID -> TAG_PAGE_ATTRIBUTE_ID
    java.lang.String TAG_PAGE_ATTRIBUTE_FILE -> TAG_PAGE_ATTRIBUTE_FILE
    int TAG_PAGE_ATTRIBUTE_ID_INDEX -> TAG_PAGE_ATTRIBUTE_ID_INDEX
    int TAG_PAGE_ATTRIBUTE_FILE_INDEX -> TAG_PAGE_ATTRIBUTE_FILE_INDEX
    java.lang.String TAG_CHARS -> TAG_CHARS
    int TAG_CHARS_ATTRIBUTECOUNT -> TAG_CHARS_ATTRIBUTECOUNT
    java.lang.String TAG_CHARS_ATTRIBUTE_COUNT -> TAG_CHARS_ATTRIBUTE_COUNT
    int TAG_CHARS_ATTRIBUTE_COUNT_INDEX -> TAG_CHARS_ATTRIBUTE_COUNT_INDEX
    java.lang.String TAG_CHAR -> TAG_CHAR
    int TAG_CHAR_ATTRIBUTECOUNT -> TAG_CHAR_ATTRIBUTECOUNT
    java.lang.String TAG_CHAR_ATTRIBUTE_ID -> TAG_CHAR_ATTRIBUTE_ID
    java.lang.String TAG_CHAR_ATTRIBUTE_X -> TAG_CHAR_ATTRIBUTE_X
    java.lang.String TAG_CHAR_ATTRIBUTE_Y -> TAG_CHAR_ATTRIBUTE_Y
    java.lang.String TAG_CHAR_ATTRIBUTE_WIDTH -> TAG_CHAR_ATTRIBUTE_WIDTH
    java.lang.String TAG_CHAR_ATTRIBUTE_HEIGHT -> TAG_CHAR_ATTRIBUTE_HEIGHT
    java.lang.String TAG_CHAR_ATTRIBUTE_XOFFSET -> TAG_CHAR_ATTRIBUTE_XOFFSET
    java.lang.String TAG_CHAR_ATTRIBUTE_YOFFSET -> TAG_CHAR_ATTRIBUTE_YOFFSET
    java.lang.String TAG_CHAR_ATTRIBUTE_XADVANCE -> TAG_CHAR_ATTRIBUTE_XADVANCE
    java.lang.String TAG_CHAR_ATTRIBUTE_PAGE -> TAG_CHAR_ATTRIBUTE_PAGE
    int TAG_CHAR_ATTRIBUTE_ID_INDEX -> TAG_CHAR_ATTRIBUTE_ID_INDEX
    int TAG_CHAR_ATTRIBUTE_X_INDEX -> TAG_CHAR_ATTRIBUTE_X_INDEX
    int TAG_CHAR_ATTRIBUTE_Y_INDEX -> TAG_CHAR_ATTRIBUTE_Y_INDEX
    int TAG_CHAR_ATTRIBUTE_WIDTH_INDEX -> TAG_CHAR_ATTRIBUTE_WIDTH_INDEX
    int TAG_CHAR_ATTRIBUTE_HEIGHT_INDEX -> TAG_CHAR_ATTRIBUTE_HEIGHT_INDEX
    int TAG_CHAR_ATTRIBUTE_XOFFSET_INDEX -> TAG_CHAR_ATTRIBUTE_XOFFSET_INDEX
    int TAG_CHAR_ATTRIBUTE_YOFFSET_INDEX -> TAG_CHAR_ATTRIBUTE_YOFFSET_INDEX
    int TAG_CHAR_ATTRIBUTE_XADVANCE_INDEX -> TAG_CHAR_ATTRIBUTE_XADVANCE_INDEX
    int TAG_CHAR_ATTRIBUTE_PAGE_INDEX -> TAG_CHAR_ATTRIBUTE_PAGE_INDEX
    java.lang.String TAG_KERNINGS -> TAG_KERNINGS
    int TAG_KERNINGS_ATTRIBUTECOUNT -> TAG_KERNINGS_ATTRIBUTECOUNT
    java.lang.String TAG_KERNINGS_ATTRIBUTE_COUNT -> TAG_KERNINGS_ATTRIBUTE_COUNT
    int TAG_KERNINGS_ATTRIBUTE_COUNT_INDEX -> TAG_KERNINGS_ATTRIBUTE_COUNT_INDEX
    java.lang.String TAG_KERNING -> TAG_KERNING
    int TAG_KERNING_ATTRIBUTECOUNT -> TAG_KERNING_ATTRIBUTECOUNT
    java.lang.String TAG_KERNING_ATTRIBUTE_FIRST -> TAG_KERNING_ATTRIBUTE_FIRST
    java.lang.String TAG_KERNING_ATTRIBUTE_SECOND -> TAG_KERNING_ATTRIBUTE_SECOND
    java.lang.String TAG_KERNING_ATTRIBUTE_AMOUNT -> TAG_KERNING_ATTRIBUTE_AMOUNT
    int TAG_KERNING_ATTRIBUTE_FIRST_INDEX -> TAG_KERNING_ATTRIBUTE_FIRST_INDEX
    int TAG_KERNING_ATTRIBUTE_SECOND_INDEX -> TAG_KERNING_ATTRIBUTE_SECOND_INDEX
    int TAG_KERNING_ATTRIBUTE_AMOUNT_INDEX -> TAG_KERNING_ATTRIBUTE_AMOUNT_INDEX
    org.andengine.opengl.texture.TextureManager mTextureManager -> mTextureManager
    org.andengine.opengl.texture.bitmap.BitmapTextureFormat mBitmapTextureFormat -> mBitmapTextureFormat
    org.andengine.opengl.texture.TextureOptions mTextureOptions -> mTextureOptions
    android.util.SparseArray mCharacterToLetterMap -> mCharacterToLetterMap
    org.andengine.opengl.font.BitmapFont$BitmapFontInfo mBitmapFontInfo -> mBitmapFontInfo
    org.andengine.opengl.font.BitmapFont$BitmapFontPage[] mBitmapFontPages -> mBitmapFontPages
    int mLineHeight -> mLineHeight
    int mBase -> mBase
    int mScaleWidth -> mScaleWidth
    int mScaleHeight -> mScaleHeight
    int mBitmapFontPageCount -> mBitmapFontPageCount
    boolean mPacked -> mPacked
    org.andengine.opengl.font.BitmapFont$BitmapFontOptions mBitmapFontOptions -> mBitmapFontOptions
    org.andengine.opengl.font.BitmapFont$BitmapFontInfo getBitmapFontInfo() -> getBitmapFontInfo
    int getBase() -> getBase
    int getScaleWidth() -> getScaleWidth
    int getScaleHeight() -> getScaleHeight
    int getBitmapFontPageCount() -> getBitmapFontPageCount
    org.andengine.opengl.font.BitmapFont$BitmapFontPage[] getBitmapFontPages() -> getBitmapFontPages
    org.andengine.opengl.font.BitmapFont$BitmapFontPage getBitmapFontPage(int) -> getBitmapFontPage
    boolean isPacked() -> isPacked
    org.andengine.opengl.texture.ITexture getTexture() -> getTexture
    void load() -> load
    void unload() -> unload
    float getLineHeight() -> getLineHeight
    org.andengine.opengl.font.Letter getLetter(char) -> getLetter
    void loadTextures() -> loadTextures
    void unloadTextures() -> unloadTextures
    void parseCharacters(int,java.io.BufferedReader) -> parseCharacters
    void parseKernings(int,java.io.BufferedReader) -> parseKernings
    boolean getBooleanAttribute(java.lang.String[],int,java.lang.String) -> getBooleanAttribute
    char getCharAttribute(java.lang.String[],int,java.lang.String) -> getCharAttribute
    int getIntAttribute(java.lang.String[],int,java.lang.String) -> getIntAttribute
    java.lang.String getStringAttribute(java.lang.String[],int,java.lang.String) -> getStringAttribute
    java.lang.String getAttribute(java.lang.String[],int,java.lang.String) -> getAttribute
    java.lang.String access$0(java.lang.String[],int,java.lang.String) -> access$0
    int access$1(java.lang.String[],int,java.lang.String) -> access$1
    boolean access$2(java.lang.String[],int,java.lang.String) -> access$2
    java.lang.String access$3(java.lang.String[],int,java.lang.String) -> access$3
    org.andengine.opengl.texture.TextureManager access$4(org.andengine.opengl.font.BitmapFont) -> access$4
    org.andengine.opengl.texture.bitmap.BitmapTextureFormat access$5(org.andengine.opengl.font.BitmapFont) -> access$5
    org.andengine.opengl.texture.TextureOptions access$6(org.andengine.opengl.font.BitmapFont) -> access$6
org.andengine.opengl.font.BitmapFont$BitmapFontInfo -> org.andengine.opengl.font.BitmapFont$BitmapFontInfo:
    int PADDING_LEFT_INDEX -> PADDING_LEFT_INDEX
    int PADDING_TOP_INDEX -> PADDING_TOP_INDEX
    int PADDING_RIGHT_INDEX -> PADDING_RIGHT_INDEX
    int PADDING_BOTTOM_INDEX -> PADDING_BOTTOM_INDEX
    int SPACING_X_INDEX -> SPACING_X_INDEX
    int SPACING_Y_INDEX -> SPACING_Y_INDEX
    java.lang.String mFace -> mFace
    int mSize -> mSize
    boolean mBold -> mBold
    boolean mItalic -> mItalic
    java.lang.String mCharset -> mCharset
    int mUnicode -> mUnicode
    int mStretchHeight -> mStretchHeight
    boolean mSmooth -> mSmooth
    boolean mAntiAliased -> mAntiAliased
    int mPaddingLeft -> mPaddingLeft
    int mPaddingTop -> mPaddingTop
    int mPaddingRight -> mPaddingRight
    int mPaddingBottom -> mPaddingBottom
    int mSpacingX -> mSpacingX
    int mSpacingY -> mSpacingY
    org.andengine.opengl.font.BitmapFont this$0 -> this$0
    java.lang.String getFace() -> getFace
    int getSize() -> getSize
    boolean isBold() -> isBold
    boolean isItalic() -> isItalic
    java.lang.String getCharset() -> getCharset
    int getUnicode() -> getUnicode
    int getStretchHeight() -> getStretchHeight
    boolean isSmooth() -> isSmooth
    boolean isAntiAliased() -> isAntiAliased
    int getPaddingLeft() -> getPaddingLeft
    int getPaddingTop() -> getPaddingTop
    int getPaddingRight() -> getPaddingRight
    int getPaddingBottom() -> getPaddingBottom
    int getSpacingX() -> getSpacingX
    int getSpacingY() -> getSpacingY
org.andengine.opengl.font.BitmapFont$BitmapFontOptions -> org.andengine.opengl.font.BitmapFont$BitmapFontOptions:
    org.andengine.opengl.font.BitmapFont$BitmapFontOptions DEFAULT -> DEFAULT
    int mTextureOffsetX -> mTextureOffsetX
    int mTextureOffsetY -> mTextureOffsetY
    int getTextureOffsetX() -> getTextureOffsetX
    int getTextureOffsetY() -> getTextureOffsetY
    int access$0(org.andengine.opengl.font.BitmapFont$BitmapFontOptions) -> access$0
    int access$1(org.andengine.opengl.font.BitmapFont$BitmapFontOptions) -> access$1
org.andengine.opengl.font.BitmapFont$BitmapFontPage -> org.andengine.opengl.font.BitmapFont$BitmapFontPage:
    int mID -> mID
    org.andengine.opengl.texture.ITexture mTexture -> mTexture
    org.andengine.opengl.font.BitmapFont this$0 -> this$0
    int getID() -> getID
    org.andengine.opengl.texture.ITexture getTexture() -> getTexture
org.andengine.opengl.font.Font -> org.andengine.opengl.font.Font:
    int LETTER_TEXTURE_PADDING -> LETTER_TEXTURE_PADDING
    org.andengine.opengl.font.FontManager mFontManager -> mFontManager
    org.andengine.opengl.texture.ITexture mTexture -> mTexture
    int mTextureWidth -> mTextureWidth
    int mTextureHeight -> mTextureHeight
    int mCurrentTextureX -> mCurrentTextureX
    int mCurrentTextureY -> mCurrentTextureY
    int mCurrentTextureYHeightMax -> mCurrentTextureYHeightMax
    android.util.SparseArray mManagedCharacterToLetterMap -> mManagedCharacterToLetterMap
    java.util.ArrayList mLettersPendingToBeDrawnToTexture -> mLettersPendingToBeDrawnToTexture
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mBackgroundPaint -> mBackgroundPaint
    android.graphics.Paint$FontMetrics mFontMetrics -> mFontMetrics
    android.graphics.Canvas mCanvas -> mCanvas
    android.graphics.Rect mTextBounds -> mTextBounds
    float[] mTextWidthContainer -> mTextWidthContainer
    float getLeading() -> getLeading
    float getAscent() -> getAscent
    float getDescent() -> getDescent
    org.andengine.opengl.texture.ITexture getTexture() -> getTexture
    void load() -> load
    void unload() -> unload
    float getLineHeight() -> getLineHeight
    org.andengine.opengl.font.Letter getLetter(char) -> getLetter
    void invalidateLetters() -> invalidateLetters
    float getLetterAdvance(java.lang.String) -> getLetterAdvance
    android.graphics.Bitmap getLetterBitmap(org.andengine.opengl.font.Letter) -> getLetterBitmap
    void drawLetter(java.lang.String,float,float) -> drawLetter
    void prepareLetters(char[]) -> prepareLetters
    org.andengine.opengl.font.Letter createLetter(char) -> createLetter
    void updateTextBounds(java.lang.String) -> updateTextBounds
    void update(org.andengine.opengl.util.GLState) -> update
org.andengine.opengl.font.FontFactory -> org.andengine.opengl.font.FontFactory:
    boolean ANTIALIAS_DEFAULT -> ANTIALIAS_DEFAULT
    int COLOR_DEFAULT -> COLOR_DEFAULT
    java.lang.String sAssetBasePath -> sAssetBasePath
    void setAssetBasePath(java.lang.String) -> setAssetBasePath
    java.lang.String getAssetBasePath() -> getAssetBasePath
    void onCreate() -> onCreate
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.ITexture,float) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.ITexture,float,boolean) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.ITexture,float,int) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.ITexture,float,boolean,int) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,float,boolean,int) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,org.andengine.opengl.texture.TextureOptions,float,boolean,int) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,android.graphics.Typeface,float) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,android.graphics.Typeface,float,boolean) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,android.graphics.Typeface,float,int) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,android.graphics.Typeface,float,boolean,int) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,org.andengine.opengl.texture.TextureOptions,android.graphics.Typeface,float) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,org.andengine.opengl.texture.TextureOptions,android.graphics.Typeface,float,boolean) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,org.andengine.opengl.texture.TextureOptions,android.graphics.Typeface,float,int) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,org.andengine.opengl.texture.TextureOptions,android.graphics.Typeface,float,boolean,int) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,org.andengine.opengl.texture.bitmap.BitmapTextureFormat,org.andengine.opengl.texture.TextureOptions,android.graphics.Typeface,float) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,org.andengine.opengl.texture.bitmap.BitmapTextureFormat,org.andengine.opengl.texture.TextureOptions,android.graphics.Typeface,float,boolean) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,org.andengine.opengl.texture.bitmap.BitmapTextureFormat,org.andengine.opengl.texture.TextureOptions,android.graphics.Typeface,float,int) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,org.andengine.opengl.texture.bitmap.BitmapTextureFormat,org.andengine.opengl.texture.TextureOptions,android.graphics.Typeface,float,boolean,int) -> create
    org.andengine.opengl.font.Font create(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.ITexture,android.graphics.Typeface,float,boolean,int) -> create
    org.andengine.opengl.font.Font createFromAsset(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.ITexture,android.content.res.AssetManager,java.lang.String,float,boolean,int) -> createFromAsset
    org.andengine.opengl.font.Font createFromAsset(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,android.content.res.AssetManager,java.lang.String,float,boolean,int) -> createFromAsset
    org.andengine.opengl.font.Font createFromAsset(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,org.andengine.opengl.texture.TextureOptions,android.content.res.AssetManager,java.lang.String,float,boolean,int) -> createFromAsset
    org.andengine.opengl.font.Font createFromAsset(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.TextureManager,int,int,org.andengine.opengl.texture.bitmap.BitmapTextureFormat,org.andengine.opengl.texture.TextureOptions,android.content.res.AssetManager,java.lang.String,float,boolean,int) -> createFromAsset
    org.andengine.opengl.font.StrokeFont createStroke(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.ITexture,android.graphics.Typeface,float,boolean,int,float,int) -> createStroke
    org.andengine.opengl.font.StrokeFont createStroke(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.ITexture,android.graphics.Typeface,float,boolean,int,float,int,boolean) -> createStroke
    org.andengine.opengl.font.StrokeFont createStrokeFromAsset(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.ITexture,android.content.res.AssetManager,java.lang.String,float,boolean,int,float,int) -> createStrokeFromAsset
    org.andengine.opengl.font.StrokeFont createStrokeFromAsset(org.andengine.opengl.font.FontManager,org.andengine.opengl.texture.ITexture,android.content.res.AssetManager,java.lang.String,float,boolean,int,float,int,boolean) -> createStrokeFromAsset
org.andengine.opengl.font.FontLibrary -> org.andengine.opengl.font.FontLibrary:
    void loadFonts(org.andengine.opengl.font.FontManager) -> loadFonts
org.andengine.opengl.font.FontManager -> org.andengine.opengl.font.FontManager:
    java.util.ArrayList mFontsManaged -> mFontsManaged
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void loadFont(org.andengine.opengl.font.Font) -> loadFont
    void loadFonts(org.andengine.opengl.font.Font[]) -> loadFonts
    void unloadFont(org.andengine.opengl.font.Font) -> unloadFont
    void unloadFonts(org.andengine.opengl.font.Font[]) -> unloadFonts
    void updateFonts(org.andengine.opengl.util.GLState) -> updateFonts
    void onReload() -> onReload
org.andengine.opengl.font.FontUtils -> org.andengine.opengl.font.FontUtils:
    int UNSPECIFIED -> UNSPECIFIED
    int[] $SWITCH_TABLE$org$andengine$entity$text$AutoWrap -> $SWITCH_TABLE$org$andengine$entity$text$AutoWrap
    float measureText(org.andengine.opengl.font.IFont,java.lang.CharSequence) -> measureText
    float measureText(org.andengine.opengl.font.IFont,java.lang.CharSequence,int,int) -> measureText
    float measureText(org.andengine.opengl.font.IFont,java.lang.CharSequence,float[]) -> measureText
    float measureText(org.andengine.opengl.font.IFont,java.lang.CharSequence,int,int,float[]) -> measureText
    int breakText(org.andengine.opengl.font.IFont,java.lang.CharSequence,org.andengine.opengl.font.FontUtils$MeasureDirection,float,float[]) -> breakText
    java.util.List splitLines(java.lang.CharSequence,java.util.List) -> splitLines
    java.util.List splitLines(org.andengine.opengl.font.IFont,java.lang.CharSequence,java.util.List,org.andengine.entity.text.AutoWrap,float) -> splitLines
    java.util.List splitLinesByLetters(org.andengine.opengl.font.IFont,java.lang.CharSequence,java.util.List,float) -> splitLinesByLetters
    java.util.List splitLinesByWords(org.andengine.opengl.font.IFont,java.lang.CharSequence,java.util.List,float) -> splitLinesByWords
    java.util.List splitLinesByCJK(org.andengine.opengl.font.IFont,java.lang.CharSequence,java.util.List,float) -> splitLinesByCJK
    float getAdvanceCorrection(org.andengine.opengl.font.IFont,java.lang.CharSequence,int) -> getAdvanceCorrection
    int[] $SWITCH_TABLE$org$andengine$entity$text$AutoWrap() -> $SWITCH_TABLE$org$andengine$entity$text$AutoWrap
org.andengine.opengl.font.FontUtils$MeasureDirection -> org.andengine.opengl.font.FontUtils$MeasureDirection:
    org.andengine.opengl.font.FontUtils$MeasureDirection FORWARDS -> FORWARDS
    org.andengine.opengl.font.FontUtils$MeasureDirection BACKWARDS -> BACKWARDS
    org.andengine.opengl.font.FontUtils$MeasureDirection[] ENUM$VALUES -> ENUM$VALUES
    org.andengine.opengl.font.FontUtils$MeasureDirection[] values() -> values
    org.andengine.opengl.font.FontUtils$MeasureDirection valueOf(java.lang.String) -> valueOf
org.andengine.opengl.font.IFont -> org.andengine.opengl.font.IFont:
    void load() -> load
    void unload() -> unload
    org.andengine.opengl.texture.ITexture getTexture() -> getTexture
    float getLineHeight() -> getLineHeight
    org.andengine.opengl.font.Letter getLetter(char) -> getLetter
org.andengine.opengl.font.Letter -> org.andengine.opengl.font.Letter:
    char mCharacter -> mCharacter
    boolean mWhitespace -> mWhitespace
    int mTextureX -> mTextureX
    int mTextureY -> mTextureY
    int mWidth -> mWidth
    int mHeight -> mHeight
    float mOffsetX -> mOffsetX
    float mOffsetY -> mOffsetY
    float mAdvance -> mAdvance
    float mU -> mU
    float mV -> mV
    float mU2 -> mU2
    float mV2 -> mV2
    android.util.SparseIntArray mKernings -> mKernings
    int getKerning(int) -> getKerning
    boolean isWhitespace() -> isWhitespace
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    void addKerning(int,int) -> addKerning
org.andengine.opengl.font.StrokeFont -> org.andengine.opengl.font.StrokeFont:
    android.graphics.Paint mStrokePaint -> mStrokePaint
    boolean mStrokeOnly -> mStrokeOnly
    float mStrokeWidth -> mStrokeWidth
    void updateTextBounds(java.lang.String) -> updateTextBounds
    void drawLetter(java.lang.String,float,float) -> drawLetter
org.andengine.opengl.font.exception.FontException -> org.andengine.opengl.font.exception.FontException:
    long serialVersionUID -> serialVersionUID
org.andengine.opengl.font.exception.LetterNotFoundException -> org.andengine.opengl.font.exception.LetterNotFoundException:
    long serialVersionUID -> serialVersionUID
org.andengine.opengl.shader.PositionColorShaderProgram -> org.andengine.opengl.shader.PositionColorShaderProgram:
    org.andengine.opengl.shader.PositionColorShaderProgram INSTANCE -> INSTANCE
    java.lang.String VERTEXSHADER -> VERTEXSHADER
    java.lang.String FRAGMENTSHADER -> FRAGMENTSHADER
    int sUniformModelViewPositionMatrixLocation -> sUniformModelViewPositionMatrixLocation
    org.andengine.opengl.shader.PositionColorShaderProgram getInstance() -> getInstance
    void link(org.andengine.opengl.util.GLState) -> link
    void bind(org.andengine.opengl.util.GLState,org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes) -> bind
    void unbind(org.andengine.opengl.util.GLState) -> unbind
org.andengine.opengl.shader.PositionColorTextureCoordinatesShaderProgram -> org.andengine.opengl.shader.PositionColorTextureCoordinatesShaderProgram:
    org.andengine.opengl.shader.PositionColorTextureCoordinatesShaderProgram INSTANCE -> INSTANCE
    java.lang.String VERTEXSHADER -> VERTEXSHADER
    java.lang.String FRAGMENTSHADER -> FRAGMENTSHADER
    int sUniformModelViewPositionMatrixLocation -> sUniformModelViewPositionMatrixLocation
    int sUniformTexture0Location -> sUniformTexture0Location
    org.andengine.opengl.shader.PositionColorTextureCoordinatesShaderProgram getInstance() -> getInstance
    void link(org.andengine.opengl.util.GLState) -> link
    void bind(org.andengine.opengl.util.GLState,org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes) -> bind
org.andengine.opengl.shader.PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram -> org.andengine.opengl.shader.PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram:
    org.andengine.opengl.shader.PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram INSTANCE -> INSTANCE
    java.lang.String VERTEXSHADER -> VERTEXSHADER
    java.lang.String FRAGMENTSHADER -> FRAGMENTSHADER
    int sUniformModelViewPositionMatrixLocation -> sUniformModelViewPositionMatrixLocation
    int sUniformTexture0Location -> sUniformTexture0Location
    int sUniformTexture1Location -> sUniformTexture1Location
    int sUniformTextureSelectTexture0Location -> sUniformTextureSelectTexture0Location
    int sUniformPositionInterpolationMix0Location -> sUniformPositionInterpolationMix0Location
    org.andengine.opengl.shader.PositionTextureCoordinatesPositionInterpolationTextureSelectShaderProgram getInstance() -> getInstance
    void link(org.andengine.opengl.util.GLState) -> link
    void bind(org.andengine.opengl.util.GLState,org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes) -> bind
    void unbind(org.andengine.opengl.util.GLState) -> unbind
org.andengine.opengl.shader.PositionTextureCoordinatesShaderProgram -> org.andengine.opengl.shader.PositionTextureCoordinatesShaderProgram:
    org.andengine.opengl.shader.PositionTextureCoordinatesShaderProgram INSTANCE -> INSTANCE
    java.lang.String VERTEXSHADER -> VERTEXSHADER
    java.lang.String FRAGMENTSHADER -> FRAGMENTSHADER
    int sUniformModelViewPositionMatrixLocation -> sUniformModelViewPositionMatrixLocation
    int sUniformTexture0Location -> sUniformTexture0Location
    org.andengine.opengl.shader.PositionTextureCoordinatesShaderProgram getInstance() -> getInstance
    void link(org.andengine.opengl.util.GLState) -> link
    void bind(org.andengine.opengl.util.GLState,org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes) -> bind
    void unbind(org.andengine.opengl.util.GLState) -> unbind
org.andengine.opengl.shader.PositionTextureCoordinatesTextureSelectShaderProgram -> org.andengine.opengl.shader.PositionTextureCoordinatesTextureSelectShaderProgram:
    org.andengine.opengl.shader.PositionTextureCoordinatesTextureSelectShaderProgram INSTANCE -> INSTANCE
    java.lang.String VERTEXSHADER -> VERTEXSHADER
    java.lang.String FRAGMENTSHADER -> FRAGMENTSHADER
    int sUniformModelViewPositionMatrixLocation -> sUniformModelViewPositionMatrixLocation
    int sUniformTexture0Location -> sUniformTexture0Location
    int sUniformTexture1Location -> sUniformTexture1Location
    int sUniformTextureSelectTexture0Location -> sUniformTextureSelectTexture0Location
    org.andengine.opengl.shader.PositionTextureCoordinatesTextureSelectShaderProgram getInstance() -> getInstance
    void link(org.andengine.opengl.util.GLState) -> link
    void bind(org.andengine.opengl.util.GLState,org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes) -> bind
    void unbind(org.andengine.opengl.util.GLState) -> unbind
org.andengine.opengl.shader.PositionTextureCoordinatesUniformColorShaderProgram -> org.andengine.opengl.shader.PositionTextureCoordinatesUniformColorShaderProgram:
    org.andengine.opengl.shader.PositionTextureCoordinatesUniformColorShaderProgram INSTANCE -> INSTANCE
    java.lang.String VERTEXSHADER -> VERTEXSHADER
    java.lang.String FRAGMENTSHADER -> FRAGMENTSHADER
    int sUniformModelViewPositionMatrixLocation -> sUniformModelViewPositionMatrixLocation
    int sUniformTexture0Location -> sUniformTexture0Location
    int sUniformColorLocation -> sUniformColorLocation
    org.andengine.opengl.shader.PositionTextureCoordinatesUniformColorShaderProgram getInstance() -> getInstance
    void link(org.andengine.opengl.util.GLState) -> link
    void bind(org.andengine.opengl.util.GLState,org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes) -> bind
    void unbind(org.andengine.opengl.util.GLState) -> unbind
org.andengine.opengl.shader.ShaderProgram -> org.andengine.opengl.shader.ShaderProgram:
    int[] HARDWAREID_CONTAINER -> HARDWAREID_CONTAINER
    int[] PARAMETERS_CONTAINER -> PARAMETERS_CONTAINER
    int[] LENGTH_CONTAINER -> LENGTH_CONTAINER
    int[] SIZE_CONTAINER -> SIZE_CONTAINER
    int[] TYPE_CONTAINER -> TYPE_CONTAINER
    int NAME_CONTAINER_SIZE -> NAME_CONTAINER_SIZE
    byte[] NAME_CONTAINER -> NAME_CONTAINER
    org.andengine.opengl.shader.source.IShaderSource mVertexShaderSource -> mVertexShaderSource
    org.andengine.opengl.shader.source.IShaderSource mFragmentShaderSource -> mFragmentShaderSource
    int mProgramID -> mProgramID
    boolean mCompiled -> mCompiled
    java.util.HashMap mUniformLocations -> mUniformLocations
    java.util.HashMap mAttributeLocations -> mAttributeLocations
    boolean isCompiled() -> isCompiled
    void setCompiled(boolean) -> setCompiled
    int getAttributeLocation(java.lang.String) -> getAttributeLocation
    int getAttributeLocationOptional(java.lang.String) -> getAttributeLocationOptional
    int getUniformLocation(java.lang.String) -> getUniformLocation
    int getUniformLocationOptional(java.lang.String) -> getUniformLocationOptional
    void bind(org.andengine.opengl.util.GLState,org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes) -> bind
    void unbind(org.andengine.opengl.util.GLState) -> unbind
    void delete(org.andengine.opengl.util.GLState) -> delete
    void compile(org.andengine.opengl.util.GLState) -> compile
    void link(org.andengine.opengl.util.GLState) -> link
    int compileShader(java.lang.String,int) -> compileShader
    void initUniformLocations() -> initUniformLocations
    void initAttributeLocations() -> initAttributeLocations
    void setUniform(java.lang.String,float[]) -> setUniform
    void setUniformOptional(java.lang.String,float[]) -> setUniformOptional
    void setUniform(java.lang.String,float) -> setUniform
    void setUniformOptional(java.lang.String,float) -> setUniformOptional
    void setUniform(java.lang.String,float,float) -> setUniform
    void setUniformOptional(java.lang.String,float,float) -> setUniformOptional
    void setUniform(java.lang.String,float,float,float) -> setUniform
    void setUniformOptional(java.lang.String,float,float,float) -> setUniformOptional
    void setUniform(java.lang.String,float,float,float,float) -> setUniform
    void setUniformOptional(java.lang.String,float,float,float,float) -> setUniformOptional
    void setTexture(java.lang.String,int) -> setTexture
    void setTextureOptional(java.lang.String,int) -> setTextureOptional
org.andengine.opengl.shader.ShaderProgramManager -> org.andengine.opengl.shader.ShaderProgramManager:
    java.util.ArrayList mShaderProgramsManaged -> mShaderProgramsManaged
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void loadShaderProgram(org.andengine.opengl.shader.ShaderProgram) -> loadShaderProgram
    void loadShaderPrograms(org.andengine.opengl.shader.ShaderProgram[]) -> loadShaderPrograms
    void onReload() -> onReload
org.andengine.opengl.shader.constants.ShaderProgramConstants -> org.andengine.opengl.shader.constants.ShaderProgramConstants:
    int LOCATION_INVALID -> LOCATION_INVALID
    java.lang.String ATTRIBUTE_POSITION -> ATTRIBUTE_POSITION
    int ATTRIBUTE_POSITION_LOCATION -> ATTRIBUTE_POSITION_LOCATION
    java.lang.String ATTRIBUTE_COLOR -> ATTRIBUTE_COLOR
    int ATTRIBUTE_COLOR_LOCATION -> ATTRIBUTE_COLOR_LOCATION
    java.lang.String ATTRIBUTE_NORMAL -> ATTRIBUTE_NORMAL
    int ATTRIBUTE_NORMAL_LOCATION -> ATTRIBUTE_NORMAL_LOCATION
    java.lang.String ATTRIBUTE_TEXTURECOORDINATES -> ATTRIBUTE_TEXTURECOORDINATES
    int ATTRIBUTE_TEXTURECOORDINATES_LOCATION -> ATTRIBUTE_TEXTURECOORDINATES_LOCATION
    java.lang.String ATTRIBUTE_POSITION_0 -> ATTRIBUTE_POSITION_0
    int ATTRIBUTE_POSITION_0_LOCATION -> ATTRIBUTE_POSITION_0_LOCATION
    java.lang.String ATTRIBUTE_POSITION_1 -> ATTRIBUTE_POSITION_1
    int ATTRIBUTE_POSITION_1_LOCATION -> ATTRIBUTE_POSITION_1_LOCATION
    java.lang.String ATTRIBUTE_POSITION_2 -> ATTRIBUTE_POSITION_2
    int ATTRIBUTE_POSITION_2_LOCATION -> ATTRIBUTE_POSITION_2_LOCATION
    java.lang.String UNIFORM_MODELVIEWPROJECTIONMATRIX -> UNIFORM_MODELVIEWPROJECTIONMATRIX
    java.lang.String UNIFORM_MODELVIEWMATRIX -> UNIFORM_MODELVIEWMATRIX
    java.lang.String UNIFORM_PROJECTIONMATRIX -> UNIFORM_PROJECTIONMATRIX
    java.lang.String UNIFORM_COLOR -> UNIFORM_COLOR
    java.lang.String UNIFORM_RED -> UNIFORM_RED
    java.lang.String UNIFORM_GREEN -> UNIFORM_GREEN
    java.lang.String UNIFORM_BLUE -> UNIFORM_BLUE
    java.lang.String UNIFORM_ALPHA -> UNIFORM_ALPHA
    java.lang.String UNIFORM_TEXTURE_0 -> UNIFORM_TEXTURE_0
    java.lang.String UNIFORM_TEXTURE_1 -> UNIFORM_TEXTURE_1
    java.lang.String UNIFORM_TEXTURE_2 -> UNIFORM_TEXTURE_2
    java.lang.String UNIFORM_TEXTURE_3 -> UNIFORM_TEXTURE_3
    java.lang.String UNIFORM_TEXTURE_4 -> UNIFORM_TEXTURE_4
    java.lang.String UNIFORM_TEXTURE_5 -> UNIFORM_TEXTURE_5
    java.lang.String UNIFORM_TEXTURE_6 -> UNIFORM_TEXTURE_6
    java.lang.String UNIFORM_TEXTURE_7 -> UNIFORM_TEXTURE_7
    java.lang.String UNIFORM_TEXTURE_8 -> UNIFORM_TEXTURE_8
    java.lang.String UNIFORM_TEXTURE_9 -> UNIFORM_TEXTURE_9
    java.lang.String UNIFORM_TEXTURESELECT_TEXTURE_0 -> UNIFORM_TEXTURESELECT_TEXTURE_0
    java.lang.String UNIFORM_POSITION_INTERPOLATION_MIX_0 -> UNIFORM_POSITION_INTERPOLATION_MIX_0
    java.lang.String UNIFORM_POSITION_INTERPOLATION_MIX_1 -> UNIFORM_POSITION_INTERPOLATION_MIX_1
    java.lang.String VARYING_TEXTURECOORDINATES -> VARYING_TEXTURECOORDINATES
    java.lang.String VARYING_COLOR -> VARYING_COLOR
org.andengine.opengl.shader.exception.ShaderProgramCompileException -> org.andengine.opengl.shader.exception.ShaderProgramCompileException:
    long serialVersionUID -> serialVersionUID
org.andengine.opengl.shader.exception.ShaderProgramException -> org.andengine.opengl.shader.exception.ShaderProgramException:
    long serialVersionUID -> serialVersionUID
org.andengine.opengl.shader.exception.ShaderProgramLinkException -> org.andengine.opengl.shader.exception.ShaderProgramLinkException:
    long serialVersionUID -> serialVersionUID
org.andengine.opengl.shader.source.CriteriaShaderSource -> org.andengine.opengl.shader.source.CriteriaShaderSource:
    org.andengine.opengl.shader.source.CriteriaShaderSource$CriteriaShaderSourceEntry[] mCriteriaShaderSourceEntries -> mCriteriaShaderSourceEntries
    java.lang.String getShaderSource(org.andengine.opengl.util.GLState) -> getShaderSource
org.andengine.opengl.shader.source.CriteriaShaderSource$CriteriaShaderSourceEntry -> org.andengine.opengl.shader.source.CriteriaShaderSource$CriteriaShaderSourceEntry:
    java.lang.String mShaderSource -> mShaderSource
    org.andengine.opengl.util.criteria.IGLCriteria[] mGLCriterias -> mGLCriterias
    java.lang.String getShaderSource() -> getShaderSource
    boolean isMet(org.andengine.opengl.util.GLState) -> isMet
org.andengine.opengl.shader.source.IShaderSource -> org.andengine.opengl.shader.source.IShaderSource:
    java.lang.String getShaderSource(org.andengine.opengl.util.GLState) -> getShaderSource
org.andengine.opengl.shader.source.StringShaderSource -> org.andengine.opengl.shader.source.StringShaderSource:
    java.lang.String mShaderSource -> mShaderSource
    java.lang.String getShaderSource(org.andengine.opengl.util.GLState) -> getShaderSource
org.andengine.opengl.texture.DebugTextureStateListener -> org.andengine.opengl.texture.DebugTextureStateListener:
    void onLoadedToHardware(org.andengine.opengl.texture.ITexture) -> onLoadedToHardware
    void onUnloadedFromHardware(org.andengine.opengl.texture.ITexture) -> onUnloadedFromHardware
org.andengine.opengl.texture.ITexture -> org.andengine.opengl.texture.ITexture:
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getHardwareTextureID() -> getHardwareTextureID
    boolean isLoadedToHardware() -> isLoadedToHardware
    void setNotLoadedToHardware() -> setNotLoadedToHardware
    boolean isUpdateOnHardwareNeeded() -> isUpdateOnHardwareNeeded
    void setUpdateOnHardwareNeeded(boolean) -> setUpdateOnHardwareNeeded
    void load() -> load
    void load(org.andengine.opengl.util.GLState) -> load
    void unload() -> unload
    void unload(org.andengine.opengl.util.GLState) -> unload
    void loadToHardware(org.andengine.opengl.util.GLState) -> loadToHardware
    void unloadFromHardware(org.andengine.opengl.util.GLState) -> unloadFromHardware
    void reloadToHardware(org.andengine.opengl.util.GLState) -> reloadToHardware
    void bind(org.andengine.opengl.util.GLState) -> bind
    void bind(org.andengine.opengl.util.GLState,int) -> bind
    org.andengine.opengl.texture.PixelFormat getPixelFormat() -> getPixelFormat
    org.andengine.opengl.texture.TextureOptions getTextureOptions() -> getTextureOptions
    boolean hasTextureStateListener() -> hasTextureStateListener
    org.andengine.opengl.texture.ITextureStateListener getTextureStateListener() -> getTextureStateListener
    void setTextureStateListener(org.andengine.opengl.texture.ITextureStateListener) -> setTextureStateListener
org.andengine.opengl.texture.ITextureStateListener -> org.andengine.opengl.texture.ITextureStateListener:
    void onLoadedToHardware(org.andengine.opengl.texture.ITexture) -> onLoadedToHardware
    void onUnloadedFromHardware(org.andengine.opengl.texture.ITexture) -> onUnloadedFromHardware
org.andengine.opengl.texture.PixelFormat -> org.andengine.opengl.texture.PixelFormat:
    org.andengine.opengl.texture.PixelFormat UNDEFINED -> UNDEFINED
    org.andengine.opengl.texture.PixelFormat RGBA_4444 -> RGBA_4444
    org.andengine.opengl.texture.PixelFormat RGBA_5551 -> RGBA_5551
    org.andengine.opengl.texture.PixelFormat RGBA_8888 -> RGBA_8888
    org.andengine.opengl.texture.PixelFormat RGB_565 -> RGB_565
    org.andengine.opengl.texture.PixelFormat A_8 -> A_8
    org.andengine.opengl.texture.PixelFormat I_8 -> I_8
    org.andengine.opengl.texture.PixelFormat AI_88 -> AI_88
    int mGLInternalFormat -> mGLInternalFormat
    int mGLFormat -> mGLFormat
    int mGLType -> mGLType
    int mBitsPerPixel -> mBitsPerPixel
    org.andengine.opengl.texture.PixelFormat[] ENUM$VALUES -> ENUM$VALUES
    int getGLInternalFormat() -> getGLInternalFormat
    int getGLFormat() -> getGLFormat
    int getGLType() -> getGLType
    int getBitsPerPixel() -> getBitsPerPixel
    org.andengine.opengl.texture.PixelFormat[] values() -> values
    org.andengine.opengl.texture.PixelFormat valueOf(java.lang.String) -> valueOf
org.andengine.opengl.texture.Texture -> org.andengine.opengl.texture.Texture:
    int HARDWARE_TEXTURE_ID_INVALID -> HARDWARE_TEXTURE_ID_INVALID
    org.andengine.opengl.texture.TextureManager mTextureManager -> mTextureManager
    org.andengine.opengl.texture.PixelFormat mPixelFormat -> mPixelFormat
    org.andengine.opengl.texture.TextureOptions mTextureOptions -> mTextureOptions
    int mHardwareTextureID -> mHardwareTextureID
    boolean mUpdateOnHardwareNeeded -> mUpdateOnHardwareNeeded
    org.andengine.opengl.texture.ITextureStateListener mTextureStateListener -> mTextureStateListener
    int getHardwareTextureID() -> getHardwareTextureID
    boolean isLoadedToHardware() -> isLoadedToHardware
    void setNotLoadedToHardware() -> setNotLoadedToHardware
    boolean isUpdateOnHardwareNeeded() -> isUpdateOnHardwareNeeded
    void setUpdateOnHardwareNeeded(boolean) -> setUpdateOnHardwareNeeded
    org.andengine.opengl.texture.PixelFormat getPixelFormat() -> getPixelFormat
    org.andengine.opengl.texture.TextureOptions getTextureOptions() -> getTextureOptions
    org.andengine.opengl.texture.ITextureStateListener getTextureStateListener() -> getTextureStateListener
    void setTextureStateListener(org.andengine.opengl.texture.ITextureStateListener) -> setTextureStateListener
    boolean hasTextureStateListener() -> hasTextureStateListener
    void writeTextureToHardware(org.andengine.opengl.util.GLState) -> writeTextureToHardware
    void load() -> load
    void load(org.andengine.opengl.util.GLState) -> load
    void unload() -> unload
    void unload(org.andengine.opengl.util.GLState) -> unload
    void loadToHardware(org.andengine.opengl.util.GLState) -> loadToHardware
    void unloadFromHardware(org.andengine.opengl.util.GLState) -> unloadFromHardware
    void reloadToHardware(org.andengine.opengl.util.GLState) -> reloadToHardware
    void bind(org.andengine.opengl.util.GLState) -> bind
    void bind(org.andengine.opengl.util.GLState,int) -> bind
org.andengine.opengl.texture.TextureManager -> org.andengine.opengl.texture.TextureManager:
    java.util.HashSet mTexturesManaged -> mTexturesManaged
    java.util.HashMap mTexturesMapped -> mTexturesMapped
    java.util.ArrayList mTexturesLoaded -> mTexturesLoaded
    java.util.ArrayList mTexturesToBeLoaded -> mTexturesToBeLoaded
    java.util.ArrayList mTexturesToBeUnloaded -> mTexturesToBeUnloaded
    org.andengine.opengl.texture.TextureWarmUpVertexBufferObject mTextureWarmUpVertexBufferObject -> mTextureWarmUpVertexBufferObject
    void onCreate() -> onCreate
    void onReload() -> onReload
    void onDestroy() -> onDestroy
    boolean hasMappedTexture(java.lang.String) -> hasMappedTexture
    org.andengine.opengl.texture.ITexture getMappedTexture(java.lang.String) -> getMappedTexture
    void addMappedTexture(java.lang.String,org.andengine.opengl.texture.ITexture) -> addMappedTexture
    org.andengine.opengl.texture.ITexture removedMappedTexture(java.lang.String) -> removedMappedTexture
    boolean loadTexture(org.andengine.opengl.texture.ITexture) -> loadTexture
    boolean loadTexture(org.andengine.opengl.util.GLState,org.andengine.opengl.texture.ITexture) -> loadTexture
    boolean unloadTexture(org.andengine.opengl.texture.ITexture) -> unloadTexture
    boolean unloadTexture(org.andengine.opengl.util.GLState,org.andengine.opengl.texture.ITexture) -> unloadTexture
    void updateTextures(org.andengine.opengl.util.GLState) -> updateTextures
    org.andengine.opengl.texture.ITexture getTexture(java.lang.String,android.content.res.AssetManager,java.lang.String) -> getTexture
    org.andengine.opengl.texture.ITexture getTexture(java.lang.String,android.content.res.AssetManager,java.lang.String,org.andengine.opengl.texture.TextureOptions) -> getTexture
    org.andengine.opengl.texture.ITexture getTexture(java.lang.String,org.andengine.util.adt.io.in.IInputStreamOpener) -> getTexture
    org.andengine.opengl.texture.ITexture getTexture(java.lang.String,org.andengine.util.adt.io.in.IInputStreamOpener,org.andengine.opengl.texture.TextureOptions) -> getTexture
    org.andengine.opengl.texture.ITexture getTexture(java.lang.String,org.andengine.util.adt.io.in.IInputStreamOpener,org.andengine.opengl.texture.bitmap.BitmapTextureFormat,org.andengine.opengl.texture.TextureOptions) -> getTexture
    org.andengine.opengl.texture.ITexture getTexture(java.lang.String,org.andengine.util.adt.io.in.IInputStreamOpener,org.andengine.opengl.texture.bitmap.BitmapTextureFormat,org.andengine.opengl.texture.TextureOptions,boolean) -> getTexture
org.andengine.opengl.texture.TextureOptions -> org.andengine.opengl.texture.TextureOptions:
    org.andengine.opengl.texture.TextureOptions NEAREST -> NEAREST
    org.andengine.opengl.texture.TextureOptions BILINEAR -> BILINEAR
    org.andengine.opengl.texture.TextureOptions REPEATING_NEAREST -> REPEATING_NEAREST
    org.andengine.opengl.texture.TextureOptions REPEATING_BILINEAR -> REPEATING_BILINEAR
    org.andengine.opengl.texture.TextureOptions NEAREST_PREMULTIPLYALPHA -> NEAREST_PREMULTIPLYALPHA
    org.andengine.opengl.texture.TextureOptions BILINEAR_PREMULTIPLYALPHA -> BILINEAR_PREMULTIPLYALPHA
    org.andengine.opengl.texture.TextureOptions REPEATING_NEAREST_PREMULTIPLYALPHA -> REPEATING_NEAREST_PREMULTIPLYALPHA
    org.andengine.opengl.texture.TextureOptions REPEATING_BILINEAR_PREMULTIPLYALPHA -> REPEATING_BILINEAR_PREMULTIPLYALPHA
    org.andengine.opengl.texture.TextureOptions DEFAULT -> DEFAULT
    int mMagFilter -> mMagFilter
    int mMinFilter -> mMinFilter
    float mWrapT -> mWrapT
    float mWrapS -> mWrapS
    boolean mPreMultiplyAlpha -> mPreMultiplyAlpha
    void apply() -> apply
org.andengine.opengl.texture.TextureStateAdapter -> org.andengine.opengl.texture.TextureStateAdapter:
    void onLoadedToHardware(org.andengine.opengl.texture.ITexture) -> onLoadedToHardware
    void onUnloadedFromHardware(org.andengine.opengl.texture.ITexture) -> onUnloadedFromHardware
org.andengine.opengl.texture.TextureWarmUpVertexBufferObject -> org.andengine.opengl.texture.TextureWarmUpVertexBufferObject:
    int VERTEX_INDEX_X -> VERTEX_INDEX_X
    int VERTEX_INDEX_Y -> VERTEX_INDEX_Y
    int TEXTURECOORDINATES_INDEX_U -> TEXTURECOORDINATES_INDEX_U
    int TEXTURECOORDINATES_INDEX_V -> TEXTURECOORDINATES_INDEX_V
    int VERTEX_SIZE -> VERTEX_SIZE
    int VERTICES_PER_VERTEXBUFFEROBJECT_SIZE -> VERTICES_PER_VERTEXBUFFEROBJECT_SIZE
    int VERTEXBUFFEROBJECT_SIZE -> VERTEXBUFFEROBJECT_SIZE
    org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT -> VERTEXBUFFEROBJECTATTRIBUTES_DEFAULT
    java.nio.FloatBuffer mFloatBuffer -> mFloatBuffer
    int getHeapMemoryByteSize() -> getHeapMemoryByteSize
    int getNativeHeapMemoryByteSize() -> getNativeHeapMemoryByteSize
    void onBufferData() -> onBufferData
    void warmup(org.andengine.opengl.util.GLState,org.andengine.opengl.texture.ITexture) -> warmup
org.andengine.opengl.texture.atlas.ITextureAtlas -> org.andengine.opengl.texture.atlas.ITextureAtlas:
    void addTextureAtlasSource(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int) -> addTextureAtlasSource
    void addTextureAtlasSource(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int,int) -> addTextureAtlasSource
    void addEmptyTextureAtlasSource(int,int,int,int) -> addEmptyTextureAtlasSource
    void removeTextureAtlasSource(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int) -> removeTextureAtlasSource
    void clearTextureAtlasSources() -> clearTextureAtlasSources
    boolean hasTextureStateListener() -> hasTextureStateListener
    boolean hasTextureAtlasStateListener() -> hasTextureAtlasStateListener
    org.andengine.opengl.texture.atlas.ITextureAtlas$ITextureAtlasStateListener getTextureStateListener() -> getTextureStateListener
    org.andengine.opengl.texture.atlas.ITextureAtlas$ITextureAtlasStateListener getTextureAtlasStateListener() -> getTextureAtlasStateListener
    void setTextureStateListener(org.andengine.opengl.texture.ITextureStateListener) -> setTextureStateListener
    void setTextureAtlasStateListener(org.andengine.opengl.texture.atlas.ITextureAtlas$ITextureAtlasStateListener) -> setTextureAtlasStateListener
org.andengine.opengl.texture.atlas.ITextureAtlas$ITextureAtlasStateListener -> org.andengine.opengl.texture.atlas.ITextureAtlas$ITextureAtlasStateListener:
    void onTextureAtlasSourceLoaded(org.andengine.opengl.texture.atlas.ITextureAtlas,org.andengine.opengl.texture.atlas.source.ITextureAtlasSource) -> onTextureAtlasSourceLoaded
    void onTextureAtlasSourceLoadExeption(org.andengine.opengl.texture.atlas.ITextureAtlas,org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,java.lang.Throwable) -> onTextureAtlasSourceLoadExeption
org.andengine.opengl.texture.atlas.ITextureAtlas$ITextureAtlasStateListener$DebugTextureAtlasStateListener -> org.andengine.opengl.texture.atlas.ITextureAtlas$ITextureAtlasStateListener$DebugTextureAtlasStateListener:
    void onLoadedToHardware(org.andengine.opengl.texture.ITexture) -> onLoadedToHardware
    void onTextureAtlasSourceLoaded(org.andengine.opengl.texture.atlas.ITextureAtlas,org.andengine.opengl.texture.atlas.source.ITextureAtlasSource) -> onTextureAtlasSourceLoaded
    void onTextureAtlasSourceLoadExeption(org.andengine.opengl.texture.atlas.ITextureAtlas,org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,java.lang.Throwable) -> onTextureAtlasSourceLoadExeption
    void onUnloadedFromHardware(org.andengine.opengl.texture.ITexture) -> onUnloadedFromHardware
org.andengine.opengl.texture.atlas.ITextureAtlas$ITextureAtlasStateListener$TextureAtlasStateAdapter -> org.andengine.opengl.texture.atlas.ITextureAtlas$ITextureAtlasStateListener$TextureAtlasStateAdapter:
    void onLoadedToHardware(org.andengine.opengl.texture.ITexture) -> onLoadedToHardware
    void onTextureAtlasSourceLoaded(org.andengine.opengl.texture.atlas.ITextureAtlas,org.andengine.opengl.texture.atlas.source.ITextureAtlasSource) -> onTextureAtlasSourceLoaded
    void onTextureAtlasSourceLoadExeption(org.andengine.opengl.texture.atlas.ITextureAtlas,org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,java.lang.Throwable) -> onTextureAtlasSourceLoadExeption
    void onUnloadedFromHardware(org.andengine.opengl.texture.ITexture) -> onUnloadedFromHardware
org.andengine.opengl.texture.atlas.TextureAtlas -> org.andengine.opengl.texture.atlas.TextureAtlas:
    int mWidth -> mWidth
    int mHeight -> mHeight
    java.util.ArrayList mTextureAtlasSources -> mTextureAtlasSources
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean hasTextureStateListener() -> hasTextureStateListener
    boolean hasTextureAtlasStateListener() -> hasTextureAtlasStateListener
    org.andengine.opengl.texture.atlas.ITextureAtlas$ITextureAtlasStateListener getTextureStateListener() -> getTextureStateListener
    org.andengine.opengl.texture.atlas.ITextureAtlas$ITextureAtlasStateListener getTextureAtlasStateListener() -> getTextureAtlasStateListener
    void setTextureStateListener(org.andengine.opengl.texture.ITextureStateListener) -> setTextureStateListener
    void setTextureAtlasStateListener(org.andengine.opengl.texture.atlas.ITextureAtlas$ITextureAtlasStateListener) -> setTextureAtlasStateListener
    void addTextureAtlasSource(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int) -> addTextureAtlasSource
    void addTextureAtlasSource(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int,int) -> addTextureAtlasSource
    void removeTextureAtlasSource(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int) -> removeTextureAtlasSource
    void clearTextureAtlasSources() -> clearTextureAtlasSources
    void checkTextureAtlasSourcePosition(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int) -> checkTextureAtlasSourcePosition
    org.andengine.opengl.texture.ITextureStateListener getTextureStateListener() -> getTextureStateListener
org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas -> org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas:
    org.andengine.opengl.texture.bitmap.BitmapTextureFormat mBitmapTextureFormat -> mBitmapTextureFormat
    org.andengine.opengl.texture.bitmap.BitmapTextureFormat getBitmapTextureFormat() -> getBitmapTextureFormat
    void addEmptyTextureAtlasSource(int,int,int,int) -> addEmptyTextureAtlasSource
    void writeTextureToHardware(org.andengine.opengl.util.GLState) -> writeTextureToHardware
org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory -> org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory:
    java.lang.String sAssetBasePath -> sAssetBasePath
    void setAssetBasePath(java.lang.String) -> setAssetBasePath
    java.lang.String getAssetBasePath() -> getAssetBasePath
    void reset() -> reset
    org.andengine.opengl.texture.region.TextureRegion createFromAsset(org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas,android.content.Context,java.lang.String,int,int) -> createFromAsset
    org.andengine.opengl.texture.region.TextureRegion createFromAsset(org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas,android.content.res.AssetManager,java.lang.String,int,int) -> createFromAsset
    org.andengine.opengl.texture.region.TiledTextureRegion createTiledFromAsset(org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas,android.content.Context,java.lang.String,int,int,int,int) -> createTiledFromAsset
    org.andengine.opengl.texture.region.TiledTextureRegion createTiledFromAsset(org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas,android.content.res.AssetManager,java.lang.String,int,int,int,int) -> createTiledFromAsset
    org.andengine.opengl.texture.region.TextureRegion createFromResource(org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas,android.content.Context,int,int,int) -> createFromResource
    org.andengine.opengl.texture.region.TextureRegion createFromResource(org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas,android.content.res.Resources,int,int,int) -> createFromResource
    org.andengine.opengl.texture.region.TiledTextureRegion createTiledFromResource(org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas,android.content.Context,int,int,int,int,int) -> createTiledFromResource
    org.andengine.opengl.texture.region.TiledTextureRegion createTiledFromResource(org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas,android.content.res.Resources,int,int,int,int,int) -> createTiledFromResource
    org.andengine.opengl.texture.region.TextureRegion createFromSource(org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas,org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource,int,int) -> createFromSource
    org.andengine.opengl.texture.region.TiledTextureRegion createTiledFromSource(org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas,org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource,int,int,int,int) -> createTiledFromSource
    org.andengine.opengl.texture.region.TextureRegion createFromAsset(org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas,android.content.Context,java.lang.String) -> createFromAsset
    org.andengine.opengl.texture.region.TextureRegion createFromAsset(org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas,android.content.res.AssetManager,java.lang.String) -> createFromAsset
    org.andengine.opengl.texture.region.TextureRegion createFromAsset(org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas,android.content.Context,java.lang.String,boolean) -> createFromAsset
    org.andengine.opengl.texture.region.TextureRegion createFromAsset(org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas,android.content.res.AssetManager,java.lang.String,boolean) -> createFromAsset
    org.andengine.opengl.texture.region.TiledTextureRegion createTiledFromAsset(org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas,android.content.Context,java.lang.String,int,int) -> createTiledFromAsset
    org.andengine.opengl.texture.region.TiledTextureRegion createTiledFromAsset(org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas,android.content.res.AssetManager,java.lang.String,int,int) -> createTiledFromAsset
    org.andengine.opengl.texture.region.TextureRegion createFromResource(org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas,android.content.Context,int) -> createFromResource
    org.andengine.opengl.texture.region.TextureRegion createFromResource(org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas,android.content.res.Resources,int) -> createFromResource
    org.andengine.opengl.texture.region.TextureRegion createFromResource(org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas,android.content.Context,int,boolean) -> createFromResource
    org.andengine.opengl.texture.region.TextureRegion createFromResource(org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas,android.content.res.Resources,int,boolean) -> createFromResource
    org.andengine.opengl.texture.region.TiledTextureRegion createTiledFromResource(org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas,android.content.Context,int,int,int) -> createTiledFromResource
    org.andengine.opengl.texture.region.TiledTextureRegion createTiledFromResource(org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas,android.content.res.Resources,int,int,int) -> createTiledFromResource
    org.andengine.opengl.texture.region.TextureRegion createFromSource(org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas,org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource) -> createFromSource
    org.andengine.opengl.texture.region.TextureRegion createFromSource(org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas,org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource,boolean) -> createFromSource
    org.andengine.opengl.texture.region.TiledTextureRegion createTiledFromSource(org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas,org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource,int,int) -> createTiledFromSource
    org.andengine.opengl.texture.region.TiledTextureRegion createTiledFromAssetDirectory(org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas,android.content.res.AssetManager,java.lang.String) -> createTiledFromAssetDirectory
org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas -> org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas:
org.andengine.opengl.texture.atlas.bitmap.source.AssetBitmapTextureAtlasSource -> org.andengine.opengl.texture.atlas.bitmap.source.AssetBitmapTextureAtlasSource:
    android.content.res.AssetManager mAssetManager -> mAssetManager
    java.lang.String mAssetPath -> mAssetPath
    org.andengine.opengl.texture.atlas.bitmap.source.AssetBitmapTextureAtlasSource create(android.content.res.AssetManager,java.lang.String) -> create
    org.andengine.opengl.texture.atlas.bitmap.source.AssetBitmapTextureAtlasSource create(android.content.res.AssetManager,java.lang.String,int,int) -> create
    org.andengine.opengl.texture.atlas.bitmap.source.AssetBitmapTextureAtlasSource deepCopy() -> deepCopy
    android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config) -> onLoadBitmap
    java.lang.String toString() -> toString
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource deepCopy() -> deepCopy
org.andengine.opengl.texture.atlas.bitmap.source.EmptyBitmapTextureAtlasSource -> org.andengine.opengl.texture.atlas.bitmap.source.EmptyBitmapTextureAtlasSource:
    org.andengine.opengl.texture.atlas.bitmap.source.EmptyBitmapTextureAtlasSource deepCopy() -> deepCopy
    android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config) -> onLoadBitmap
    java.lang.String toString() -> toString
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource deepCopy() -> deepCopy
org.andengine.opengl.texture.atlas.bitmap.source.FileBitmapTextureAtlasSource -> org.andengine.opengl.texture.atlas.bitmap.source.FileBitmapTextureAtlasSource:
    java.io.File mFile -> mFile
    org.andengine.opengl.texture.atlas.bitmap.source.FileBitmapTextureAtlasSource create(java.io.File) -> create
    org.andengine.opengl.texture.atlas.bitmap.source.FileBitmapTextureAtlasSource create(java.io.File,int,int) -> create
    org.andengine.opengl.texture.atlas.bitmap.source.FileBitmapTextureAtlasSource createFromInternalStorage(android.content.Context,java.lang.String,int,int) -> createFromInternalStorage
    org.andengine.opengl.texture.atlas.bitmap.source.FileBitmapTextureAtlasSource createFromExternalStorage(android.content.Context,java.lang.String,int,int) -> createFromExternalStorage
    org.andengine.opengl.texture.atlas.bitmap.source.FileBitmapTextureAtlasSource deepCopy() -> deepCopy
    android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config) -> onLoadBitmap
    java.lang.String toString() -> toString
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource deepCopy() -> deepCopy
org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource -> org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource:
    org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource deepCopy() -> deepCopy
    android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config) -> onLoadBitmap
org.andengine.opengl.texture.atlas.bitmap.source.PictureBitmapTextureAtlasSource -> org.andengine.opengl.texture.atlas.bitmap.source.PictureBitmapTextureAtlasSource:
    android.graphics.Picture mPicture -> mPicture
    org.andengine.opengl.texture.atlas.bitmap.source.PictureBitmapTextureAtlasSource deepCopy() -> deepCopy
    android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config) -> onLoadBitmap
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource deepCopy() -> deepCopy
org.andengine.opengl.texture.atlas.bitmap.source.ResourceBitmapTextureAtlasSource -> org.andengine.opengl.texture.atlas.bitmap.source.ResourceBitmapTextureAtlasSource:
    android.content.res.Resources mResources -> mResources
    int mDrawableResourceID -> mDrawableResourceID
    org.andengine.opengl.texture.atlas.bitmap.source.ResourceBitmapTextureAtlasSource create(android.content.res.Resources,int) -> create
    org.andengine.opengl.texture.atlas.bitmap.source.ResourceBitmapTextureAtlasSource create(android.content.res.Resources,int,int,int) -> create
    org.andengine.opengl.texture.atlas.bitmap.source.ResourceBitmapTextureAtlasSource deepCopy() -> deepCopy
    android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config) -> onLoadBitmap
    java.lang.String toString() -> toString
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource deepCopy() -> deepCopy
org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator:
    org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource mBitmapTextureAtlasSource -> mBitmapTextureAtlasSource
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions mTextureAtlasSourceDecoratorOptions -> mTextureAtlasSourceDecoratorOptions
    android.graphics.Paint mPaint -> mPaint
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator deepCopy() -> deepCopy
    android.graphics.Paint getPaint() -> getPaint
    void setPaint(android.graphics.Paint) -> setPaint
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions getTextureAtlasSourceDecoratorOptions() -> getTextureAtlasSourceDecoratorOptions
    void setTextureAtlasSourceDecoratorOptions(org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions) -> setTextureAtlasSourceDecoratorOptions
    void onDecorateBitmap(android.graphics.Canvas) -> onDecorateBitmap
    int getTextureWidth() -> getTextureWidth
    int getTextureHeight() -> getTextureHeight
    android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config) -> onLoadBitmap
    android.graphics.Bitmap ensureLoadedBitmapIsMutable(android.graphics.Bitmap) -> ensureLoadedBitmapIsMutable
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource deepCopy() -> deepCopy
org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions:
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions DEFAULT -> DEFAULT
    float mInsetLeft -> mInsetLeft
    float mInsetRight -> mInsetRight
    float mInsetTop -> mInsetTop
    float mInsetBottom -> mInsetBottom
    boolean mAntiAliasing -> mAntiAliasing
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions deepCopy() -> deepCopy
    boolean getAntiAliasing() -> getAntiAliasing
    float getInsetLeft() -> getInsetLeft
    float getInsetRight() -> getInsetRight
    float getInsetTop() -> getInsetTop
    float getInsetBottom() -> getInsetBottom
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions setAntiAliasing(boolean) -> setAntiAliasing
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions setInsetLeft(float) -> setInsetLeft
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions setInsetRight(float) -> setInsetRight
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions setInsetTop(float) -> setInsetTop
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions setInsetBottom(float) -> setInsetBottom
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions setInsets(float) -> setInsets
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions setInsets(float,float,float,float) -> setInsets
org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseShapeBitmapTextureAtlasSourceDecorator -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseShapeBitmapTextureAtlasSourceDecorator:
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.IBitmapTextureAtlasSourceDecoratorShape mBitmapTextureAtlasSourceDecoratorShape -> mBitmapTextureAtlasSourceDecoratorShape
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseShapeBitmapTextureAtlasSourceDecorator deepCopy() -> deepCopy
    void onDecorateBitmap(android.graphics.Canvas) -> onDecorateBitmap
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator deepCopy() -> deepCopy
org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorKeyBitmapTextureAtlasSourceDecorator -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorKeyBitmapTextureAtlasSourceDecorator:
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorKeyBitmapTextureAtlasSourceDecorator deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorSwapBitmapTextureAtlasSourceDecorator deepCopy() -> deepCopy
org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorSwapBitmapTextureAtlasSourceDecorator -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorSwapBitmapTextureAtlasSourceDecorator:
    int TOLERANCE_DEFAULT -> TOLERANCE_DEFAULT
    int mColorKeyColorARGBPackedInt -> mColorKeyColorARGBPackedInt
    int mTolerance -> mTolerance
    int mColorSwapColorARGBPackedInt -> mColorSwapColorARGBPackedInt
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.ColorSwapBitmapTextureAtlasSourceDecorator deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseShapeBitmapTextureAtlasSourceDecorator deepCopy() -> deepCopy
org.andengine.opengl.texture.atlas.bitmap.source.decorator.FillBitmapTextureAtlasSourceDecorator -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.FillBitmapTextureAtlasSourceDecorator:
    int mFillColor -> mFillColor
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.FillBitmapTextureAtlasSourceDecorator deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseShapeBitmapTextureAtlasSourceDecorator deepCopy() -> deepCopy
org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator:
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection mLinearGradientDirection -> mLinearGradientDirection
    int[] mColors -> mColors
    float[] mPositions -> mPositions
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseShapeBitmapTextureAtlasSourceDecorator deepCopy() -> deepCopy
org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection:
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection LEFT_TO_RIGHT -> LEFT_TO_RIGHT
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection RIGHT_TO_LEFT -> RIGHT_TO_LEFT
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection BOTTOM_TO_TOP -> BOTTOM_TO_TOP
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection TOP_TO_BOTTOM -> TOP_TO_BOTTOM
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection TOPLEFT_TO_BOTTOMRIGHT -> TOPLEFT_TO_BOTTOMRIGHT
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection BOTTOMRIGHT_TO_TOPLEFT -> BOTTOMRIGHT_TO_TOPLEFT
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection TOPRIGHT_TO_BOTTOMLEFT -> TOPRIGHT_TO_BOTTOMLEFT
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection BOTTOMLEFT_TO_TOPRIGHT -> BOTTOMLEFT_TO_TOPRIGHT
    int mFromX -> mFromX
    int mFromY -> mFromY
    int mToX -> mToX
    int mToY -> mToY
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection[] ENUM$VALUES -> ENUM$VALUES
    int getFromX(int) -> getFromX
    int getFromY(int) -> getFromY
    int getToX(int) -> getToX
    int getToY(int) -> getToY
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection[] values() -> values
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.LinearGradientFillBitmapTextureAtlasSourceDecorator$LinearGradientDirection valueOf(java.lang.String) -> valueOf
org.andengine.opengl.texture.atlas.bitmap.source.decorator.OutlineBitmapTextureAtlasSourceDecorator -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.OutlineBitmapTextureAtlasSourceDecorator:
    int mOutlineColor -> mOutlineColor
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.OutlineBitmapTextureAtlasSourceDecorator deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseShapeBitmapTextureAtlasSourceDecorator deepCopy() -> deepCopy
org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator:
    float[] POSITIONS_DEFAULT -> POSITIONS_DEFAULT
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection mRadialGradientDirection -> mRadialGradientDirection
    int[] mColors -> mColors
    float[] mPositions -> mPositions
    int[] $SWITCH_TABLE$org$andengine$opengl$texture$atlas$bitmap$source$decorator$RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection -> $SWITCH_TABLE$org$andengine$opengl$texture$atlas$bitmap$source$decorator$RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource deepCopy() -> deepCopy
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseShapeBitmapTextureAtlasSourceDecorator deepCopy() -> deepCopy
    int[] $SWITCH_TABLE$org$andengine$opengl$texture$atlas$bitmap$source$decorator$RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection() -> $SWITCH_TABLE$org$andengine$opengl$texture$atlas$bitmap$source$decorator$RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection
org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection:
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection INSIDE_OUT -> INSIDE_OUT
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection OUTSIDE_IN -> OUTSIDE_IN
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection[] ENUM$VALUES -> ENUM$VALUES
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection[] values() -> values
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.RadialGradientFillBitmapTextureAtlasSourceDecorator$RadialGradientDirection valueOf(java.lang.String) -> valueOf
org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.ArcBitmapTextureAtlasSourceDecoratorShape -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.ArcBitmapTextureAtlasSourceDecoratorShape:
    float STARTANGLE_DEFAULT -> STARTANGLE_DEFAULT
    float SWEEPANGLE_DEFAULT -> SWEEPANGLE_DEFAULT
    boolean USECENTER_DEFAULT -> USECENTER_DEFAULT
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.ArcBitmapTextureAtlasSourceDecoratorShape sDefaultInstance -> sDefaultInstance
    android.graphics.RectF mRectF -> mRectF
    float mStartAngle -> mStartAngle
    float mSweepAngle -> mSweepAngle
    boolean mUseCenter -> mUseCenter
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.ArcBitmapTextureAtlasSourceDecoratorShape getDefaultInstance() -> getDefaultInstance
    void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions) -> onDecorateBitmap
org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.CircleBitmapTextureAtlasSourceDecoratorShape -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.CircleBitmapTextureAtlasSourceDecoratorShape:
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.CircleBitmapTextureAtlasSourceDecoratorShape sDefaultInstance -> sDefaultInstance
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.CircleBitmapTextureAtlasSourceDecoratorShape getDefaultInstance() -> getDefaultInstance
    void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions) -> onDecorateBitmap
org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.EllipseBitmapTextureAtlasSourceDecoratorShape -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.EllipseBitmapTextureAtlasSourceDecoratorShape:
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.EllipseBitmapTextureAtlasSourceDecoratorShape sDefaultInstance -> sDefaultInstance
    android.graphics.RectF mRectF -> mRectF
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.EllipseBitmapTextureAtlasSourceDecoratorShape getDefaultInstance() -> getDefaultInstance
    void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions) -> onDecorateBitmap
org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.IBitmapTextureAtlasSourceDecoratorShape -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.IBitmapTextureAtlasSourceDecoratorShape:
    void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions) -> onDecorateBitmap
org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RectangleBitmapTextureAtlasSourceDecoratorShape -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RectangleBitmapTextureAtlasSourceDecoratorShape:
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RectangleBitmapTextureAtlasSourceDecoratorShape sDefaultInstance -> sDefaultInstance
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RectangleBitmapTextureAtlasSourceDecoratorShape getDefaultInstance() -> getDefaultInstance
    void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions) -> onDecorateBitmap
org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RoundedRectangleBitmapTextureAtlasSourceDecoratorShape -> org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RoundedRectangleBitmapTextureAtlasSourceDecoratorShape:
    float CORNER_RADIUS_DEFAULT -> CORNER_RADIUS_DEFAULT
    android.graphics.RectF mRectF -> mRectF
    float mCornerRadiusX -> mCornerRadiusX
    float mCornerRadiusY -> mCornerRadiusY
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RoundedRectangleBitmapTextureAtlasSourceDecoratorShape sDefaultInstance -> sDefaultInstance
    org.andengine.opengl.texture.atlas.bitmap.source.decorator.shape.RoundedRectangleBitmapTextureAtlasSourceDecoratorShape getDefaultInstance() -> getDefaultInstance
    void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.andengine.opengl.texture.atlas.bitmap.source.decorator.BaseBitmapTextureAtlasSourceDecorator$TextureAtlasSourceDecoratorOptions) -> onDecorateBitmap
org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas -> org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas:
    org.andengine.opengl.texture.atlas.ITextureAtlas mTextureAtlas -> mTextureAtlas
    java.util.ArrayList mTextureAtlasSourcesToPlace -> mTextureAtlasSourcesToPlace
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getHardwareTextureID() -> getHardwareTextureID
    boolean isLoadedToHardware() -> isLoadedToHardware
    void setNotLoadedToHardware() -> setNotLoadedToHardware
    boolean isUpdateOnHardwareNeeded() -> isUpdateOnHardwareNeeded
    void setUpdateOnHardwareNeeded(boolean) -> setUpdateOnHardwareNeeded
    void load() -> load
    void load(org.andengine.opengl.util.GLState) -> load
    void unload() -> unload
    void unload(org.andengine.opengl.util.GLState) -> unload
    void loadToHardware(org.andengine.opengl.util.GLState) -> loadToHardware
    void unloadFromHardware(org.andengine.opengl.util.GLState) -> unloadFromHardware
    void reloadToHardware(org.andengine.opengl.util.GLState) -> reloadToHardware
    void bind(org.andengine.opengl.util.GLState) -> bind
    void bind(org.andengine.opengl.util.GLState,int) -> bind
    org.andengine.opengl.texture.PixelFormat getPixelFormat() -> getPixelFormat
    org.andengine.opengl.texture.TextureOptions getTextureOptions() -> getTextureOptions
    void addTextureAtlasSource(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int) -> addTextureAtlasSource
    void addTextureAtlasSource(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int,int) -> addTextureAtlasSource
    void removeTextureAtlasSource(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int) -> removeTextureAtlasSource
    void clearTextureAtlasSources() -> clearTextureAtlasSources
    boolean hasTextureStateListener() -> hasTextureStateListener
    boolean hasTextureAtlasStateListener() -> hasTextureAtlasStateListener
    org.andengine.opengl.texture.atlas.ITextureAtlas$ITextureAtlasStateListener getTextureStateListener() -> getTextureStateListener
    org.andengine.opengl.texture.atlas.ITextureAtlas$ITextureAtlasStateListener getTextureAtlasStateListener() -> getTextureAtlasStateListener
    void setTextureStateListener(org.andengine.opengl.texture.ITextureStateListener) -> setTextureStateListener
    void setTextureAtlasStateListener(org.andengine.opengl.texture.atlas.ITextureAtlas$ITextureAtlasStateListener) -> setTextureAtlasStateListener
    void addEmptyTextureAtlasSource(int,int,int,int) -> addEmptyTextureAtlasSource
    void addTextureAtlasSource(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,org.andengine.util.call.Callback) -> addTextureAtlasSource
    void removeTextureAtlasSource(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource) -> removeTextureAtlasSource
    org.andengine.opengl.texture.atlas.buildable.IBuildableTextureAtlas build(org.andengine.opengl.texture.atlas.buildable.builder.ITextureAtlasBuilder) -> build
    org.andengine.opengl.texture.ITextureStateListener getTextureStateListener() -> getTextureStateListener
org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas$TextureAtlasSourceWithWithLocationCallback -> org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas$TextureAtlasSourceWithWithLocationCallback:
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource mTextureAtlasSource -> mTextureAtlasSource
    org.andengine.util.call.Callback mCallback -> mCallback
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource getTextureAtlasSource() -> getTextureAtlasSource
    org.andengine.util.call.Callback getCallback() -> getCallback
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource access$0(org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas$TextureAtlasSourceWithWithLocationCallback) -> access$0
org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlasTextureRegionFactory -> org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlasTextureRegionFactory:
    org.andengine.opengl.texture.region.TextureRegion createFromSource(org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas,org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,boolean) -> createFromSource
    org.andengine.opengl.texture.region.TiledTextureRegion createTiledFromSource(org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas,org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int) -> createTiledFromSource
org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlasTextureRegionFactory$1 -> org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlasTextureRegionFactory$1:
    org.andengine.opengl.texture.region.TextureRegion val$textureRegion -> val$textureRegion
    void onCallback(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource) -> onCallback
    void onCallback(java.lang.Object) -> onCallback
org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlasTextureRegionFactory$2 -> org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlasTextureRegionFactory$2:
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource val$pTextureAtlasSource -> val$pTextureAtlasSource
    int val$pTileColumns -> val$pTileColumns
    int val$pTileRows -> val$pTileRows
    org.andengine.opengl.texture.region.TiledTextureRegion val$tiledTextureRegion -> val$tiledTextureRegion
    void onCallback(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource) -> onCallback
    void onCallback(java.lang.Object) -> onCallback
org.andengine.opengl.texture.atlas.buildable.IBuildableTextureAtlas -> org.andengine.opengl.texture.atlas.buildable.IBuildableTextureAtlas:
    void addTextureAtlasSource(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int) -> addTextureAtlasSource
    void addTextureAtlasSource(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int,int) -> addTextureAtlasSource
    void addTextureAtlasSource(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,org.andengine.util.call.Callback) -> addTextureAtlasSource
    void removeTextureAtlasSource(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource) -> removeTextureAtlasSource
    org.andengine.opengl.texture.atlas.buildable.IBuildableTextureAtlas build(org.andengine.opengl.texture.atlas.buildable.builder.ITextureAtlasBuilder) -> build
org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder -> org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder:
    java.util.Comparator TEXTURESOURCE_COMPARATOR -> TEXTURESOURCE_COMPARATOR
    int mTextureAtlasBorderSpacing -> mTextureAtlasBorderSpacing
    int mTextureAtlasSourceSpacing -> mTextureAtlasSourceSpacing
    int mTextureAtlasSourcePadding -> mTextureAtlasSourcePadding
    void build(org.andengine.opengl.texture.atlas.ITextureAtlas,java.util.ArrayList) -> build
org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$1 -> org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$1:
    int compare(org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas$TextureAtlasSourceWithWithLocationCallback,org.andengine.opengl.texture.atlas.buildable.BuildableTextureAtlas$TextureAtlasSourceWithWithLocationCallback) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$Node -> org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$Node:
    org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$Node mChildA -> mChildA
    org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$Node mChildB -> mChildB
    org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$Rect mRect -> mRect
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource mTextureAtlasSource -> mTextureAtlasSource
    org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$Rect getRect() -> getRect
    org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$Node getChildA() -> getChildA
    org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$Node getChildB() -> getChildB
    org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$Node insert(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int,int,int) -> insert
    org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$Node createChildren(org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int,int,int,int,int) -> createChildren
    org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$Rect access$0(org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$Node) -> access$0
org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$Rect -> org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$Rect:
    int mLeft -> mLeft
    int mTop -> mTop
    int mWidth -> mWidth
    int mHeight -> mHeight
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getLeft() -> getLeft
    int getTop() -> getTop
    int getRight() -> getRight
    int getBottom() -> getBottom
    java.lang.String toString() -> toString
    int access$0(org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$Rect) -> access$0
    int access$1(org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder$Rect) -> access$1
org.andengine.opengl.texture.atlas.buildable.builder.ITextureAtlasBuilder -> org.andengine.opengl.texture.atlas.buildable.builder.ITextureAtlasBuilder:
    void build(org.andengine.opengl.texture.atlas.ITextureAtlas,java.util.ArrayList) -> build
org.andengine.opengl.texture.atlas.buildable.builder.ITextureAtlasBuilder$TextureAtlasBuilderException -> org.andengine.opengl.texture.atlas.buildable.builder.ITextureAtlasBuilder$TextureAtlasBuilderException:
    long serialVersionUID -> serialVersionUID
org.andengine.opengl.texture.atlas.source.BaseTextureAtlasSource -> org.andengine.opengl.texture.atlas.source.BaseTextureAtlasSource:
    int mTextureX -> mTextureX
    int mTextureY -> mTextureY
    int mTextureWidth -> mTextureWidth
    int mTextureHeight -> mTextureHeight
    int getTextureX() -> getTextureX
    int getTextureY() -> getTextureY
    void setTextureX(int) -> setTextureX
    void setTextureY(int) -> setTextureY
    int getTextureWidth() -> getTextureWidth
    int getTextureHeight() -> getTextureHeight
    void setTextureWidth(int) -> setTextureWidth
    void setTextureHeight(int) -> setTextureHeight
    java.lang.String toString() -> toString
org.andengine.opengl.texture.atlas.source.ITextureAtlasSource -> org.andengine.opengl.texture.atlas.source.ITextureAtlasSource:
    int getTextureX() -> getTextureX
    int getTextureY() -> getTextureY
    void setTextureX(int) -> setTextureX
    void setTextureY(int) -> setTextureY
    int getTextureWidth() -> getTextureWidth
    int getTextureHeight() -> getTextureHeight
    void setTextureWidth(int) -> setTextureWidth
    void setTextureHeight(int) -> setTextureHeight
    org.andengine.opengl.texture.atlas.source.ITextureAtlasSource deepCopy() -> deepCopy
org.andengine.opengl.texture.bitmap.AssetBitmapTexture -> org.andengine.opengl.texture.bitmap.AssetBitmapTexture:
org.andengine.opengl.texture.bitmap.BitmapTexture -> org.andengine.opengl.texture.bitmap.BitmapTexture:
    int mWidth -> mWidth
    int mHeight -> mHeight
    org.andengine.util.adt.io.in.IInputStreamOpener mInputStreamOpener -> mInputStreamOpener
    org.andengine.opengl.texture.bitmap.BitmapTextureFormat mBitmapTextureFormat -> mBitmapTextureFormat
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void writeTextureToHardware(org.andengine.opengl.util.GLState) -> writeTextureToHardware
    android.graphics.Bitmap onGetBitmap(android.graphics.Bitmap$Config) -> onGetBitmap
org.andengine.opengl.texture.bitmap.BitmapTextureFormat -> org.andengine.opengl.texture.bitmap.BitmapTextureFormat:
    org.andengine.opengl.texture.bitmap.BitmapTextureFormat RGBA_8888 -> RGBA_8888
    org.andengine.opengl.texture.bitmap.BitmapTextureFormat RGB_565 -> RGB_565
    org.andengine.opengl.texture.bitmap.BitmapTextureFormat RGBA_4444 -> RGBA_4444
    org.andengine.opengl.texture.bitmap.BitmapTextureFormat A_8 -> A_8
    android.graphics.Bitmap$Config mBitmapConfig -> mBitmapConfig
    org.andengine.opengl.texture.PixelFormat mPixelFormat -> mPixelFormat
    int[] $SWITCH_TABLE$org$andengine$opengl$texture$PixelFormat -> $SWITCH_TABLE$org$andengine$opengl$texture$PixelFormat
    org.andengine.opengl.texture.bitmap.BitmapTextureFormat[] ENUM$VALUES -> ENUM$VALUES
    org.andengine.opengl.texture.bitmap.BitmapTextureFormat fromPixelFormat(org.andengine.opengl.texture.PixelFormat) -> fromPixelFormat
    android.graphics.Bitmap$Config getBitmapConfig() -> getBitmapConfig
    org.andengine.opengl.texture.PixelFormat getPixelFormat() -> getPixelFormat
    org.andengine.opengl.texture.bitmap.BitmapTextureFormat[] values() -> values
    org.andengine.opengl.texture.bitmap.BitmapTextureFormat valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$org$andengine$opengl$texture$PixelFormat() -> $SWITCH_TABLE$org$andengine$opengl$texture$PixelFormat
org.andengine.opengl.texture.bitmap.ResourceBitmapTexture -> org.andengine.opengl.texture.bitmap.ResourceBitmapTexture:
org.andengine.opengl.texture.compressed.etc1.ETC1Texture -> org.andengine.opengl.texture.compressed.etc1.ETC1Texture:
    org.andengine.opengl.texture.compressed.etc1.ETC1Texture$ETC1TextureHeader mETC1TextureHeader -> mETC1TextureHeader
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    java.io.InputStream getInputStream() -> getInputStream
    void writeTextureToHardware(org.andengine.opengl.util.GLState) -> writeTextureToHardware
org.andengine.opengl.texture.compressed.etc1.ETC1Texture$ETC1TextureHeader -> org.andengine.opengl.texture.compressed.etc1.ETC1Texture$ETC1TextureHeader:
    java.nio.ByteBuffer mDataByteBuffer -> mDataByteBuffer
    int mWidth -> mWidth
    int mHeight -> mHeight
    int getWidth() -> getWidth
    int getHeight() -> getHeight
org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture -> org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture:
    org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture$CCZHeader mCCZHeader -> mCCZHeader
    java.util.zip.InflaterInputStream getInputStream() -> getInputStream
    java.nio.ByteBuffer getPVRTextureBuffer() -> getPVRTextureBuffer
    java.io.InputStream getInputStream() -> getInputStream
org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture$CCZCompressionFormat -> org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture$CCZCompressionFormat:
    org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture$CCZCompressionFormat ZLIB -> ZLIB
    org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture$CCZCompressionFormat BZIP2 -> BZIP2
    org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture$CCZCompressionFormat GZIP -> GZIP
    org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture$CCZCompressionFormat NONE -> NONE
    short mID -> mID
    int[] $SWITCH_TABLE$org$andengine$opengl$texture$compressed$pvr$PVRCCZTexture$CCZCompressionFormat -> $SWITCH_TABLE$org$andengine$opengl$texture$compressed$pvr$PVRCCZTexture$CCZCompressionFormat
    org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture$CCZCompressionFormat[] ENUM$VALUES -> ENUM$VALUES
    java.util.zip.InflaterInputStream wrap(java.io.InputStream) -> wrap
    org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture$CCZCompressionFormat fromID(short) -> fromID
    org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture$CCZCompressionFormat[] values() -> values
    org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture$CCZCompressionFormat valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$org$andengine$opengl$texture$compressed$pvr$PVRCCZTexture$CCZCompressionFormat() -> $SWITCH_TABLE$org$andengine$opengl$texture$compressed$pvr$PVRCCZTexture$CCZCompressionFormat
org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture$CCZHeader -> org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture$CCZHeader:
    byte[] MAGIC_IDENTIFIER -> MAGIC_IDENTIFIER
    int SIZE -> SIZE
    java.nio.ByteBuffer mDataByteBuffer -> mDataByteBuffer
    org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture$CCZCompressionFormat mCCZCompressionFormat -> mCCZCompressionFormat
    short getCCZCompressionFormatID() -> getCCZCompressionFormatID
    org.andengine.opengl.texture.compressed.pvr.PVRCCZTexture$CCZCompressionFormat getCCZCompressionFormat() -> getCCZCompressionFormat
    short getVersion() -> getVersion
    int getUserdata() -> getUserdata
    int getUncompressedSize() -> getUncompressedSize
org.andengine.opengl.texture.compressed.pvr.PVRGZTexture -> org.andengine.opengl.texture.compressed.pvr.PVRGZTexture:
    java.util.zip.GZIPInputStream getInputStream() -> getInputStream
    java.io.InputStream getInputStream() -> getInputStream
org.andengine.opengl.texture.compressed.pvr.PVRTexture -> org.andengine.opengl.texture.compressed.pvr.PVRTexture:
    int FLAG_MIPMAP -> FLAG_MIPMAP
    int FLAG_TWIDDLE -> FLAG_TWIDDLE
    int FLAG_BUMPMAP -> FLAG_BUMPMAP
    int FLAG_TILING -> FLAG_TILING
    int FLAG_CUBEMAP -> FLAG_CUBEMAP
    int FLAG_FALSEMIPCOL -> FLAG_FALSEMIPCOL
    int FLAG_VOLUME -> FLAG_VOLUME
    int FLAG_ALPHA -> FLAG_ALPHA
    int FLAG_VERTICALFLIP -> FLAG_VERTICALFLIP
    org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureHeader mPVRTextureHeader -> mPVRTextureHeader
    org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.IPVRTexturePixelBufferStrategy mPVRTexturePixelBufferStrategy -> mPVRTexturePixelBufferStrategy
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean hasMipMaps() -> hasMipMaps
    org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureHeader getPVRTextureHeader() -> getPVRTextureHeader
    java.io.InputStream onGetInputStream() -> onGetInputStream
    java.io.InputStream getInputStream() -> getInputStream
    void writeTextureToHardware(org.andengine.opengl.util.GLState) -> writeTextureToHardware
    java.nio.ByteBuffer getPVRTextureBuffer() -> getPVRTextureBuffer
org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureFormat -> org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureFormat:
    org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureFormat RGBA_4444 -> RGBA_4444
    org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureFormat RGBA_5551 -> RGBA_5551
    org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureFormat RGBA_8888 -> RGBA_8888
    org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureFormat RGB_565 -> RGB_565
    org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureFormat I_8 -> I_8
    org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureFormat AI_88 -> AI_88
    org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureFormat A_8 -> A_8
    int mID -> mID
    boolean mCompressed -> mCompressed
    org.andengine.opengl.texture.PixelFormat mPixelFormat -> mPixelFormat
    int[] $SWITCH_TABLE$org$andengine$opengl$texture$PixelFormat -> $SWITCH_TABLE$org$andengine$opengl$texture$PixelFormat
    org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureFormat[] ENUM$VALUES -> ENUM$VALUES
    org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureFormat fromID(int) -> fromID
    org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureFormat fromPixelFormat(org.andengine.opengl.texture.PixelFormat) -> fromPixelFormat
    int getID() -> getID
    boolean isCompressed() -> isCompressed
    org.andengine.opengl.texture.PixelFormat getPixelFormat() -> getPixelFormat
    org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureFormat[] values() -> values
    org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureFormat valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$org$andengine$opengl$texture$PixelFormat() -> $SWITCH_TABLE$org$andengine$opengl$texture$PixelFormat
org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureHeader -> org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureHeader:
    byte[] MAGIC_IDENTIFIER -> MAGIC_IDENTIFIER
    int SIZE -> SIZE
    int FORMAT_FLAG_MASK -> FORMAT_FLAG_MASK
    java.nio.ByteBuffer mDataByteBuffer -> mDataByteBuffer
    org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureFormat mPVRTextureFormat -> mPVRTextureFormat
    org.andengine.opengl.texture.compressed.pvr.PVRTexture$PVRTextureFormat getPVRTextureFormat() -> getPVRTextureFormat
    int headerLength() -> headerLength
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    int getNumMipmaps() -> getNumMipmaps
    int getFlags() -> getFlags
    int getDataLength() -> getDataLength
    int getBitsPerPixel() -> getBitsPerPixel
    int getBitmaskRed() -> getBitmaskRed
    int getBitmaskGreen() -> getBitmaskGreen
    int getBitmaskBlue() -> getBitmaskBlue
    int getBitmaskAlpha() -> getBitmaskAlpha
    boolean hasAlpha() -> hasAlpha
    int getPVRTag() -> getPVRTag
    int numSurfs() -> numSurfs
org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.GreedyPVRTexturePixelBufferStrategy -> org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.GreedyPVRTexturePixelBufferStrategy:
    org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.IPVRTexturePixelBufferStrategy$IPVRTexturePixelBufferStrategyBufferManager newPVRTexturePixelBufferStrategyManager(org.andengine.opengl.texture.compressed.pvr.PVRTexture) -> newPVRTexturePixelBufferStrategyManager
    void loadPVRTextureData(org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.IPVRTexturePixelBufferStrategy$IPVRTexturePixelBufferStrategyBufferManager,int,int,int,org.andengine.opengl.texture.PixelFormat,int,int,int) -> loadPVRTextureData
org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.GreedyPVRTexturePixelBufferStrategy$GreedyPVRTexturePixelBufferStrategyBufferManager -> org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.GreedyPVRTexturePixelBufferStrategy$GreedyPVRTexturePixelBufferStrategyBufferManager:
    java.nio.ByteBuffer mByteBuffer -> mByteBuffer
    java.nio.ByteBuffer getPixelBuffer(int,int) -> getPixelBuffer
org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.IPVRTexturePixelBufferStrategy -> org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.IPVRTexturePixelBufferStrategy:
    org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.IPVRTexturePixelBufferStrategy$IPVRTexturePixelBufferStrategyBufferManager newPVRTexturePixelBufferStrategyManager(org.andengine.opengl.texture.compressed.pvr.PVRTexture) -> newPVRTexturePixelBufferStrategyManager
    void loadPVRTextureData(org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.IPVRTexturePixelBufferStrategy$IPVRTexturePixelBufferStrategyBufferManager,int,int,int,org.andengine.opengl.texture.PixelFormat,int,int,int) -> loadPVRTextureData
org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.IPVRTexturePixelBufferStrategy$IPVRTexturePixelBufferStrategyBufferManager -> org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.IPVRTexturePixelBufferStrategy$IPVRTexturePixelBufferStrategyBufferManager:
    java.nio.ByteBuffer getPixelBuffer(int,int) -> getPixelBuffer
org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.SmartPVRTexturePixelBufferStrategy -> org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.SmartPVRTexturePixelBufferStrategy:
    int mAllocationSizeMaximum -> mAllocationSizeMaximum
    org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.IPVRTexturePixelBufferStrategy$IPVRTexturePixelBufferStrategyBufferManager newPVRTexturePixelBufferStrategyManager(org.andengine.opengl.texture.compressed.pvr.PVRTexture) -> newPVRTexturePixelBufferStrategyManager
    void loadPVRTextureData(org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.IPVRTexturePixelBufferStrategy$IPVRTexturePixelBufferStrategyBufferManager,int,int,int,org.andengine.opengl.texture.PixelFormat,int,int,int) -> loadPVRTextureData
org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.SmartPVRTexturePixelBufferStrategy$SmartPVRTexturePixelBufferStrategyBufferManager -> org.andengine.opengl.texture.compressed.pvr.pixelbufferstrategy.SmartPVRTexturePixelBufferStrategy$SmartPVRTexturePixelBufferStrategyBufferManager:
    java.io.InputStream mInputStream -> mInputStream
    int mInputStreamPosition -> mInputStreamPosition
    byte[] mData -> mData
    java.nio.ByteBuffer getPixelBuffer(int,int) -> getPixelBuffer
org.andengine.opengl.texture.region.BaseTextureRegion -> org.andengine.opengl.texture.region.BaseTextureRegion:
    org.andengine.opengl.texture.ITexture mTexture -> mTexture
    org.andengine.opengl.texture.region.ITextureRegion deepCopy() -> deepCopy
    org.andengine.opengl.texture.ITexture getTexture() -> getTexture
org.andengine.opengl.texture.region.ITextureRegion -> org.andengine.opengl.texture.region.ITextureRegion:
    float getTextureX() -> getTextureX
    float getTextureY() -> getTextureY
    void setTextureX(float) -> setTextureX
    void setTextureY(float) -> setTextureY
    void setTexturePosition(float,float) -> setTexturePosition
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void setTextureWidth(float) -> setTextureWidth
    void setTextureHeight(float) -> setTextureHeight
    void setTextureSize(float,float) -> setTextureSize
    void set(float,float,float,float) -> set
    float getU() -> getU
    float getU2() -> getU2
    float getV() -> getV
    float getV2() -> getV2
    boolean isScaled() -> isScaled
    float getScale() -> getScale
    boolean isRotated() -> isRotated
    org.andengine.opengl.texture.ITexture getTexture() -> getTexture
    org.andengine.opengl.texture.region.ITextureRegion deepCopy() -> deepCopy
org.andengine.opengl.texture.region.ITiledTextureRegion -> org.andengine.opengl.texture.region.ITiledTextureRegion:
    int getCurrentTileIndex() -> getCurrentTileIndex
    void setCurrentTileIndex(int) -> setCurrentTileIndex
    void nextTile() -> nextTile
    org.andengine.opengl.texture.region.ITextureRegion getTextureRegion(int) -> getTextureRegion
    int getTileCount() -> getTileCount
    float getTextureX(int) -> getTextureX
    float getTextureY(int) -> getTextureY
    void setTextureX(int,float) -> setTextureX
    void setTextureY(int,float) -> setTextureY
    void setTexturePosition(int,float,float) -> setTexturePosition
    float getWidth(int) -> getWidth
    float getHeight(int) -> getHeight
    void setTextureWidth(int,float) -> setTextureWidth
    void setTextureHeight(int,float) -> setTextureHeight
    void setTextureSize(int,float,float) -> setTextureSize
    void set(int,float,float,float,float) -> set
    float getU(int) -> getU
    float getU2(int) -> getU2
    float getV(int) -> getV
    float getV2(int) -> getV2
    boolean isScaled(int) -> isScaled
    float getScale(int) -> getScale
    boolean isRotated(int) -> isRotated
    org.andengine.opengl.texture.region.ITiledTextureRegion deepCopy() -> deepCopy
org.andengine.opengl.texture.region.TextureRegion -> org.andengine.opengl.texture.region.TextureRegion:
    float SCALE_DEFAULT -> SCALE_DEFAULT
    float mTextureX -> mTextureX
    float mTextureY -> mTextureY
    float mTextureWidth -> mTextureWidth
    float mTextureHeight -> mTextureHeight
    float mU -> mU
    float mU2 -> mU2
    float mV -> mV
    float mV2 -> mV2
    float mScale -> mScale
    boolean mRotated -> mRotated
    org.andengine.opengl.texture.region.TextureRegion deepCopy() -> deepCopy
    float getTextureX() -> getTextureX
    float getTextureY() -> getTextureY
    void setTextureX(float) -> setTextureX
    void setTextureY(float) -> setTextureY
    void setTexturePosition(float,float) -> setTexturePosition
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void setTextureWidth(float) -> setTextureWidth
    void setTextureHeight(float) -> setTextureHeight
    void setTextureSize(float,float) -> setTextureSize
    void set(float,float,float,float) -> set
    float getU() -> getU
    float getU2() -> getU2
    float getV() -> getV
    float getV2() -> getV2
    boolean isScaled() -> isScaled
    float getScale() -> getScale
    boolean isRotated() -> isRotated
    void updateUV() -> updateUV
    org.andengine.opengl.texture.region.ITextureRegion deepCopy() -> deepCopy
org.andengine.opengl.texture.region.TextureRegionFactory -> org.andengine.opengl.texture.region.TextureRegionFactory:
    org.andengine.opengl.texture.region.TextureRegion extractFromTexture(org.andengine.opengl.texture.ITexture) -> extractFromTexture
    org.andengine.opengl.texture.region.TextureRegion extractFromTexture(org.andengine.opengl.texture.ITexture,int,int,int,int) -> extractFromTexture
    org.andengine.opengl.texture.region.TextureRegion extractFromTexture(org.andengine.opengl.texture.ITexture,boolean) -> extractFromTexture
    org.andengine.opengl.texture.region.TextureRegion extractFromTexture(org.andengine.opengl.texture.ITexture,int,int,int,int,boolean) -> extractFromTexture
    org.andengine.opengl.texture.region.TiledTextureRegion extractTiledFromTexture(org.andengine.opengl.texture.ITexture,int,int) -> extractTiledFromTexture
    org.andengine.opengl.texture.region.TiledTextureRegion extractTiledFromTexture(org.andengine.opengl.texture.ITexture,int,int,int,int,int,int) -> extractTiledFromTexture
    org.andengine.opengl.texture.region.TextureRegion createFromSource(org.andengine.opengl.texture.atlas.ITextureAtlas,org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int) -> createFromSource
    org.andengine.opengl.texture.region.TextureRegion createFromSource(org.andengine.opengl.texture.atlas.ITextureAtlas,org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int,boolean) -> createFromSource
    org.andengine.opengl.texture.region.TiledTextureRegion createTiledFromSource(org.andengine.opengl.texture.atlas.ITextureAtlas,org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int,int,int) -> createTiledFromSource
    org.andengine.opengl.texture.region.TiledTextureRegion createTiledFromSource(org.andengine.opengl.texture.atlas.ITextureAtlas,org.andengine.opengl.texture.atlas.source.ITextureAtlasSource,int,int,int,int,boolean) -> createTiledFromSource
org.andengine.opengl.texture.region.TextureRegionLibrary -> org.andengine.opengl.texture.region.TextureRegionLibrary:
    org.andengine.opengl.texture.region.TextureRegion get(int) -> get
    org.andengine.opengl.texture.region.TiledTextureRegion getTiled(int) -> getTiled
    java.lang.Object get(int) -> get
org.andengine.opengl.texture.region.TiledTextureRegion -> org.andengine.opengl.texture.region.TiledTextureRegion:
    int mCurrentTileIndex -> mCurrentTileIndex
    int mTileCount -> mTileCount
    org.andengine.opengl.texture.region.ITextureRegion[] mTextureRegions -> mTextureRegions
    org.andengine.opengl.texture.region.TiledTextureRegion create(org.andengine.opengl.texture.ITexture,int,int,int,int,int,int) -> create
    org.andengine.opengl.texture.region.TiledTextureRegion create(org.andengine.opengl.texture.ITexture,int,int,int,int,int,int,boolean) -> create
    org.andengine.opengl.texture.region.TiledTextureRegion deepCopy() -> deepCopy
    int getCurrentTileIndex() -> getCurrentTileIndex
    void setCurrentTileIndex(int) -> setCurrentTileIndex
    void nextTile() -> nextTile
    org.andengine.opengl.texture.region.ITextureRegion getTextureRegion(int) -> getTextureRegion
    int getTileCount() -> getTileCount
    float getTextureX() -> getTextureX
    float getTextureX(int) -> getTextureX
    float getTextureY() -> getTextureY
    float getTextureY(int) -> getTextureY
    void setTextureX(float) -> setTextureX
    void setTextureX(int,float) -> setTextureX
    void setTextureY(float) -> setTextureY
    void setTextureY(int,float) -> setTextureY
    void setTexturePosition(float,float) -> setTexturePosition
    void setTexturePosition(int,float,float) -> setTexturePosition
    float getWidth() -> getWidth
    float getWidth(int) -> getWidth
    float getHeight() -> getHeight
    float getHeight(int) -> getHeight
    void setTextureWidth(float) -> setTextureWidth
    void setTextureWidth(int,float) -> setTextureWidth
    void setTextureHeight(float) -> setTextureHeight
    void setTextureHeight(int,float) -> setTextureHeight
    void setTextureSize(float,float) -> setTextureSize
    void setTextureSize(int,float,float) -> setTextureSize
    void set(float,float,float,float) -> set
    void set(int,float,float,float,float) -> set
    float getU() -> getU
    float getU(int) -> getU
    float getV() -> getV
    float getV(int) -> getV
    float getU2() -> getU2
    float getU2(int) -> getU2
    float getV2() -> getV2
    float getV2(int) -> getV2
    boolean isScaled() -> isScaled
    boolean isScaled(int) -> isScaled
    float getScale() -> getScale
    float getScale(int) -> getScale
    boolean isRotated() -> isRotated
    boolean isRotated(int) -> isRotated
    org.andengine.opengl.texture.region.ITiledTextureRegion deepCopy() -> deepCopy
    org.andengine.opengl.texture.region.ITextureRegion deepCopy() -> deepCopy
org.andengine.opengl.texture.render.RenderTexture -> org.andengine.opengl.texture.render.RenderTexture:
    int[] VIEWPORT_CONTAINER -> VIEWPORT_CONTAINER
    float[] CLEARCOLOR_CONTAINER -> CLEARCOLOR_CONTAINER
    int VIEWPORT_CONTAINER_X_INDEX -> VIEWPORT_CONTAINER_X_INDEX
    int VIEWPORT_CONTAINER_Y_INDEX -> VIEWPORT_CONTAINER_Y_INDEX
    int VIEWPORT_CONTAINER_WIDTH_INDEX -> VIEWPORT_CONTAINER_WIDTH_INDEX
    int VIEWPORT_CONTAINER_HEIGHT_INDEX -> VIEWPORT_CONTAINER_HEIGHT_INDEX
    int CLEARCOLOR_CONTAINER_RED_INDEX -> CLEARCOLOR_CONTAINER_RED_INDEX
    int CLEARCOLOR_CONTAINER_GREEN_INDEX -> CLEARCOLOR_CONTAINER_GREEN_INDEX
    int CLEARCOLOR_CONTAINER_BLUE_INDEX -> CLEARCOLOR_CONTAINER_BLUE_INDEX
    int CLEARCOLOR_CONTAINER_ALPHA_INDEX -> CLEARCOLOR_CONTAINER_ALPHA_INDEX
    org.andengine.opengl.texture.PixelFormat mPixelFormat -> mPixelFormat
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mFramebufferObjectID -> mFramebufferObjectID
    int mPreviousFramebufferObjectID -> mPreviousFramebufferObjectID
    int mPreviousViewPortX -> mPreviousViewPortX
    int mPreviousViewPortY -> mPreviousViewPortY
    int mPreviousViewPortWidth -> mPreviousViewPortWidth
    int mPreviousViewPortHeight -> mPreviousViewPortHeight
    boolean mInitialized -> mInitialized
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean isInitialized() -> isInitialized
    void writeTextureToHardware(org.andengine.opengl.util.GLState) -> writeTextureToHardware
    void init(org.andengine.opengl.util.GLState) -> init
    void begin(org.andengine.opengl.util.GLState) -> begin
    void begin(org.andengine.opengl.util.GLState,org.andengine.util.color.Color) -> begin
    void begin(org.andengine.opengl.util.GLState,float,float,float,float) -> begin
    void begin(org.andengine.opengl.util.GLState,boolean,boolean,org.andengine.util.color.Color) -> begin
    void begin(org.andengine.opengl.util.GLState,boolean,boolean,float,float,float,float) -> begin
    void begin(org.andengine.opengl.util.GLState,boolean,boolean) -> begin
    void flush(org.andengine.opengl.util.GLState) -> flush
    void finish(org.andengine.opengl.util.GLState) -> finish
    void end(org.andengine.opengl.util.GLState) -> end
    void end(org.andengine.opengl.util.GLState,boolean,boolean) -> end
    void destroy(org.andengine.opengl.util.GLState) -> destroy
    void savePreviousFramebufferObjectID(org.andengine.opengl.util.GLState) -> savePreviousFramebufferObjectID
    void restorePreviousFramebufferObjectID(org.andengine.opengl.util.GLState) -> restorePreviousFramebufferObjectID
    void savePreviousViewport() -> savePreviousViewport
    void resotorePreviousViewport() -> resotorePreviousViewport
    int[] getPixelsARGB_8888(org.andengine.opengl.util.GLState) -> getPixelsARGB_8888
    int[] getPixelsARGB_8888(org.andengine.opengl.util.GLState,int,int,int,int) -> getPixelsARGB_8888
    android.graphics.Bitmap getBitmap(org.andengine.opengl.util.GLState) -> getBitmap
    android.graphics.Bitmap getBitmap(org.andengine.opengl.util.GLState,int,int,int,int) -> getBitmap
org.andengine.opengl.util.BufferUtils -> org.andengine.opengl.util.BufferUtils:
    boolean NATIVE_LIB_LOADED -> NATIVE_LIB_LOADED
    boolean WORKAROUND_BYTEBUFFER_PUT_FLOATARRAY -> WORKAROUND_BYTEBUFFER_PUT_FLOATARRAY
    boolean WORKAROUND_BYTEBUFFER_ALLOCATE_DIRECT -> WORKAROUND_BYTEBUFFER_ALLOCATE_DIRECT
    java.nio.ByteBuffer allocateDirectByteBuffer(int) -> allocateDirectByteBuffer
    void freeDirectByteBuffer(java.nio.ByteBuffer) -> freeDirectByteBuffer
    java.nio.ByteBuffer jniAllocateDirect(int) -> jniAllocateDirect
    void jniFreeDirect(java.nio.ByteBuffer) -> jniFreeDirect
    void put(java.nio.ByteBuffer,float[],int,int) -> put
    void jniPut(java.nio.ByteBuffer,float[],int,int) -> jniPut
    short getUnsignedByte(java.nio.ByteBuffer) -> getUnsignedByte
    void putUnsignedByte(java.nio.ByteBuffer,int) -> putUnsignedByte
    short getUnsignedByte(java.nio.ByteBuffer,int) -> getUnsignedByte
    void putUnsignedByte(java.nio.ByteBuffer,int,int) -> putUnsignedByte
    int getUnsignedShort(java.nio.ByteBuffer) -> getUnsignedShort
    void putUnsignedShort(java.nio.ByteBuffer,int) -> putUnsignedShort
    int getUnsignedShort(java.nio.ByteBuffer,int) -> getUnsignedShort
    void putUnsignedShort(java.nio.ByteBuffer,int,int) -> putUnsignedShort
    long getUnsignedInt(java.nio.ByteBuffer) -> getUnsignedInt
    void putUnsignedInt(java.nio.ByteBuffer,long) -> putUnsignedInt
    long getUnsignedInt(java.nio.ByteBuffer,int) -> getUnsignedInt
    void putUnsignedInt(java.nio.ByteBuffer,int,long) -> putUnsignedInt
org.andengine.opengl.util.GLHelper -> org.andengine.opengl.util.GLHelper:
    int[] $SWITCH_TABLE$org$andengine$opengl$texture$PixelFormat -> $SWITCH_TABLE$org$andengine$opengl$texture$PixelFormat
    java.nio.Buffer getPixels(android.graphics.Bitmap,org.andengine.opengl.texture.PixelFormat) -> getPixels
    java.nio.Buffer getPixels(android.graphics.Bitmap,org.andengine.opengl.texture.PixelFormat,java.nio.ByteOrder) -> getPixels
    int[] convertARGB_8888toRGBA_8888(int[]) -> convertARGB_8888toRGBA_8888
    int[] convertARGB_8888toRGBA_8888(int[],java.nio.ByteOrder) -> convertARGB_8888toRGBA_8888
    short[] convertARGB_8888toRGB_565(int[]) -> convertARGB_8888toRGB_565
    short[] convertARGB_8888toRGB_565(int[],java.nio.ByteOrder) -> convertARGB_8888toRGB_565
    short[] convertARGB_8888toRGBA_4444(int[]) -> convertARGB_8888toRGBA_4444
    short[] convertARGB_8888toRGBA_4444(int[],java.nio.ByteOrder) -> convertARGB_8888toRGBA_4444
    byte[] convertARGB_8888toA_8(int[]) -> convertARGB_8888toA_8
    int[] getPixelsARGB_8888(android.graphics.Bitmap) -> getPixelsARGB_8888
    int[] convertRGBA_8888toARGB_8888(int[]) -> convertRGBA_8888toARGB_8888
    int[] convertRGBA_8888toARGB_8888(int[],java.nio.ByteOrder) -> convertRGBA_8888toARGB_8888
    int[] convertRGBA_8888toARGB_8888_FlippedVertical(int[],int,int) -> convertRGBA_8888toARGB_8888_FlippedVertical
    int[] convertRGBA_8888toARGB_8888_FlippedVertical(int[],int,int,java.nio.ByteOrder) -> convertRGBA_8888toARGB_8888_FlippedVertical
    int[] $SWITCH_TABLE$org$andengine$opengl$texture$PixelFormat() -> $SWITCH_TABLE$org$andengine$opengl$texture$PixelFormat
org.andengine.opengl.util.GLMatrixStack -> org.andengine.opengl.util.GLMatrixStack:
    int GLMATRIXSTACK_DEPTH_MAX -> GLMATRIXSTACK_DEPTH_MAX
    int GLMATRIX_SIZE -> GLMATRIX_SIZE
    int GLMATRIXSTACKOFFSET_UNDERFLOW -> GLMATRIXSTACKOFFSET_UNDERFLOW
    int GLMATRIXSTACKOFFSET_OVERFLOW -> GLMATRIXSTACKOFFSET_OVERFLOW
    float[] mMatrixStack -> mMatrixStack
    int mMatrixStackOffset -> mMatrixStackOffset
    float[] mTemp -> mTemp
    void getMatrix(float[]) -> getMatrix
    void glLoadIdentity() -> glLoadIdentity
    void glTranslatef(float,float,float) -> glTranslatef
    void glRotatef(float,float,float,float) -> glRotatef
    void glScalef(float,float,float) -> glScalef
    void glSkewf(float,float) -> glSkewf
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glPushMatrix() -> glPushMatrix
    void glPopMatrix() -> glPopMatrix
    void reset() -> reset
    void setSkewM(float[],int,float,float) -> setSkewM
org.andengine.opengl.util.GLMatrixStack$GLMatrixStackOverflowException -> org.andengine.opengl.util.GLMatrixStack$GLMatrixStackOverflowException:
    long serialVersionUID -> serialVersionUID
org.andengine.opengl.util.GLMatrixStack$GLMatrixStackUnderflowException -> org.andengine.opengl.util.GLMatrixStack$GLMatrixStackUnderflowException:
    long serialVersionUID -> serialVersionUID
org.andengine.opengl.util.GLState -> org.andengine.opengl.util.GLState:
    int GL_UNPACK_ALIGNMENT_DEFAULT -> GL_UNPACK_ALIGNMENT_DEFAULT
    int[] mHardwareIDContainer -> mHardwareIDContainer
    java.lang.String mVersion -> mVersion
    java.lang.String mRenderer -> mRenderer
    java.lang.String mExtensions -> mExtensions
    int mMaximumVertexAttributeCount -> mMaximumVertexAttributeCount
    int mMaximumVertexShaderUniformVectorCount -> mMaximumVertexShaderUniformVectorCount
    int mMaximumFragmentShaderUniformVectorCount -> mMaximumFragmentShaderUniformVectorCount
    int mMaximumTextureSize -> mMaximumTextureSize
    int mMaximumTextureUnits -> mMaximumTextureUnits
    int mCurrentArrayBufferID -> mCurrentArrayBufferID
    int mCurrentIndexBufferID -> mCurrentIndexBufferID
    int mCurrentShaderProgramID -> mCurrentShaderProgramID
    int[] mCurrentBoundTextureIDs -> mCurrentBoundTextureIDs
    int mCurrentFramebufferID -> mCurrentFramebufferID
    int mCurrentActiveTextureIndex -> mCurrentActiveTextureIndex
    int mCurrentSourceBlendMode -> mCurrentSourceBlendMode
    int mCurrentDestinationBlendMode -> mCurrentDestinationBlendMode
    boolean mDitherEnabled -> mDitherEnabled
    boolean mDepthTestEnabled -> mDepthTestEnabled
    boolean mScissorTestEnabled -> mScissorTestEnabled
    boolean mBlendEnabled -> mBlendEnabled
    boolean mCullingEnabled -> mCullingEnabled
    float mLineWidth -> mLineWidth
    org.andengine.opengl.util.GLMatrixStack mModelViewGLMatrixStack -> mModelViewGLMatrixStack
    org.andengine.opengl.util.GLMatrixStack mProjectionGLMatrixStack -> mProjectionGLMatrixStack
    float[] mModelViewGLMatrix -> mModelViewGLMatrix
    float[] mProjectionGLMatrix -> mProjectionGLMatrix
    float[] mModelViewProjectionGLMatrix -> mModelViewProjectionGLMatrix
    java.lang.String getVersion() -> getVersion
    java.lang.String getRenderer() -> getRenderer
    java.lang.String getExtensions() -> getExtensions
    int getMaximumVertexAttributeCount() -> getMaximumVertexAttributeCount
    int getMaximumVertexShaderUniformVectorCount() -> getMaximumVertexShaderUniformVectorCount
    int getMaximumFragmentShaderUniformVectorCount() -> getMaximumFragmentShaderUniformVectorCount
    int getMaximumTextureUnits() -> getMaximumTextureUnits
    int getMaximumTextureSize() -> getMaximumTextureSize
    void reset(org.andengine.engine.options.RenderOptions,org.andengine.opengl.view.ConfigChooser,javax.microedition.khronos.egl.EGLConfig) -> reset
    boolean isScissorTestEnabled() -> isScissorTestEnabled
    boolean enableScissorTest() -> enableScissorTest
    boolean disableScissorTest() -> disableScissorTest
    boolean setScissorTestEnabled(boolean) -> setScissorTestEnabled
    boolean isBlendEnabled() -> isBlendEnabled
    boolean enableBlend() -> enableBlend
    boolean disableBlend() -> disableBlend
    boolean setBlendEnabled(boolean) -> setBlendEnabled
    boolean isCullingEnabled() -> isCullingEnabled
    boolean enableCulling() -> enableCulling
    boolean disableCulling() -> disableCulling
    boolean setCullingEnabled(boolean) -> setCullingEnabled
    boolean isDitherEnabled() -> isDitherEnabled
    boolean enableDither() -> enableDither
    boolean disableDither() -> disableDither
    boolean setDitherEnabled(boolean) -> setDitherEnabled
    boolean isDepthTestEnabled() -> isDepthTestEnabled
    boolean enableDepthTest() -> enableDepthTest
    boolean disableDepthTest() -> disableDepthTest
    boolean setDepthTestEnabled(boolean) -> setDepthTestEnabled
    int generateBuffer() -> generateBuffer
    int generateArrayBuffer(int,int) -> generateArrayBuffer
    void bindArrayBuffer(int) -> bindArrayBuffer
    void deleteArrayBuffer(int) -> deleteArrayBuffer
    int generateIndexBuffer(int,int) -> generateIndexBuffer
    void bindIndexBuffer(int) -> bindIndexBuffer
    void deleteIndexBuffer(int) -> deleteIndexBuffer
    int generateFramebuffer() -> generateFramebuffer
    void bindFramebuffer(int) -> bindFramebuffer
    int getFramebufferStatus() -> getFramebufferStatus
    void checkFramebufferStatus() -> checkFramebufferStatus
    int getActiveFramebuffer() -> getActiveFramebuffer
    void deleteFramebuffer(int) -> deleteFramebuffer
    void useProgram(int) -> useProgram
    void deleteProgram(int) -> deleteProgram
    int generateTexture() -> generateTexture
    boolean isTexture(int) -> isTexture
    int getActiveTexture() -> getActiveTexture
    void activeTexture(int) -> activeTexture
    void bindTexture(int) -> bindTexture
    void deleteTexture(int) -> deleteTexture
    void blendFunction(int,int) -> blendFunction
    void lineWidth(float) -> lineWidth
    void pushModelViewGLMatrix() -> pushModelViewGLMatrix
    void popModelViewGLMatrix() -> popModelViewGLMatrix
    void loadModelViewGLMatrixIdentity() -> loadModelViewGLMatrixIdentity
    void translateModelViewGLMatrixf(float,float,float) -> translateModelViewGLMatrixf
    void rotateModelViewGLMatrixf(float,float,float,float) -> rotateModelViewGLMatrixf
    void scaleModelViewGLMatrixf(float,float,int) -> scaleModelViewGLMatrixf
    void skewModelViewGLMatrixf(float,float) -> skewModelViewGLMatrixf
    void orthoModelViewGLMatrixf(float,float,float,float,float,float) -> orthoModelViewGLMatrixf
    void pushProjectionGLMatrix() -> pushProjectionGLMatrix
    void popProjectionGLMatrix() -> popProjectionGLMatrix
    void loadProjectionGLMatrixIdentity() -> loadProjectionGLMatrixIdentity
    void translateProjectionGLMatrixf(float,float,float) -> translateProjectionGLMatrixf
    void rotateProjectionGLMatrixf(float,float,float,float) -> rotateProjectionGLMatrixf
    void scaleProjectionGLMatrixf(float,float,float) -> scaleProjectionGLMatrixf
    void skewProjectionGLMatrixf(float,float) -> skewProjectionGLMatrixf
    void orthoProjectionGLMatrixf(float,float,float,float,float,float) -> orthoProjectionGLMatrixf
    float[] getModelViewGLMatrix() -> getModelViewGLMatrix
    float[] getProjectionGLMatrix() -> getProjectionGLMatrix
    float[] getModelViewProjectionGLMatrix() -> getModelViewProjectionGLMatrix
    void resetModelViewGLMatrixStack() -> resetModelViewGLMatrixStack
    void resetProjectionGLMatrixStack() -> resetProjectionGLMatrixStack
    void resetGLMatrixStacks() -> resetGLMatrixStacks
    void glTexImage2D(int,int,android.graphics.Bitmap,int,org.andengine.opengl.texture.PixelFormat) -> glTexImage2D
    void glTexSubImage2D(int,int,int,int,android.graphics.Bitmap,org.andengine.opengl.texture.PixelFormat) -> glTexSubImage2D
    void flush() -> flush
    void finish() -> finish
    int getInteger(int) -> getInteger
    int getError() -> getError
    void checkError() -> checkError
    void clearError() -> clearError
org.andengine.opengl.util.VertexUtils -> org.andengine.opengl.util.VertexUtils:
    float getVertex(float[],int,int,int) -> getVertex
org.andengine.opengl.util.criteria.AndroidVersionCodeGLCriteria -> org.andengine.opengl.util.criteria.AndroidVersionCodeGLCriteria:
    int getActualCriteria(org.andengine.opengl.util.GLState) -> getActualCriteria
org.andengine.opengl.util.criteria.BuildModelGLCriteria -> org.andengine.opengl.util.criteria.BuildModelGLCriteria:
    java.lang.String getActualCriteria(org.andengine.opengl.util.GLState) -> getActualCriteria
org.andengine.opengl.util.criteria.GLExtensionsGLCriteria -> org.andengine.opengl.util.criteria.GLExtensionsGLCriteria:
    java.lang.String getActualCriteria(org.andengine.opengl.util.GLState) -> getActualCriteria
org.andengine.opengl.util.criteria.GLRendererGLCriteria -> org.andengine.opengl.util.criteria.GLRendererGLCriteria:
    java.lang.String getActualCriteria(org.andengine.opengl.util.GLState) -> getActualCriteria
org.andengine.opengl.util.criteria.GLVersionGLCriteria -> org.andengine.opengl.util.criteria.GLVersionGLCriteria:
    java.lang.String getActualCriteria(org.andengine.opengl.util.GLState) -> getActualCriteria
org.andengine.opengl.util.criteria.IGLCriteria -> org.andengine.opengl.util.criteria.IGLCriteria:
    boolean isMet(org.andengine.opengl.util.GLState) -> isMet
org.andengine.opengl.util.criteria.IntGLCriteria -> org.andengine.opengl.util.criteria.IntGLCriteria:
    int mCriteria -> mCriteria
    org.andengine.util.adt.data.operator.IntOperator mIntOperator -> mIntOperator
    int getActualCriteria(org.andengine.opengl.util.GLState) -> getActualCriteria
    boolean isMet(org.andengine.opengl.util.GLState) -> isMet
org.andengine.opengl.util.criteria.LogicalAndGLCriteria -> org.andengine.opengl.util.criteria.LogicalAndGLCriteria:
    org.andengine.opengl.util.criteria.IGLCriteria[] mGLCriterias -> mGLCriterias
    boolean isMet(org.andengine.opengl.util.GLState) -> isMet
org.andengine.opengl.util.criteria.LogicalOrGLCriteria -> org.andengine.opengl.util.criteria.LogicalOrGLCriteria:
    org.andengine.opengl.util.criteria.IGLCriteria[] mGLCriterias -> mGLCriterias
    boolean isMet(org.andengine.opengl.util.GLState) -> isMet
org.andengine.opengl.util.criteria.StringGLCriteria -> org.andengine.opengl.util.criteria.StringGLCriteria:
    java.lang.String mCriteria -> mCriteria
    org.andengine.util.adt.data.operator.StringOperator mStringOperator -> mStringOperator
    java.lang.String getActualCriteria(org.andengine.opengl.util.GLState) -> getActualCriteria
    boolean isMet(org.andengine.opengl.util.GLState) -> isMet
org.andengine.opengl.vbo.DrawType -> org.andengine.opengl.vbo.DrawType:
    org.andengine.opengl.vbo.DrawType STATIC -> STATIC
    org.andengine.opengl.vbo.DrawType DYNAMIC -> DYNAMIC
    org.andengine.opengl.vbo.DrawType STREAM -> STREAM
    int mUsage -> mUsage
    org.andengine.opengl.vbo.DrawType[] ENUM$VALUES -> ENUM$VALUES
    int getUsage() -> getUsage
    org.andengine.opengl.vbo.DrawType[] values() -> values
    org.andengine.opengl.vbo.DrawType valueOf(java.lang.String) -> valueOf
org.andengine.opengl.vbo.HighPerformanceVertexBufferObject -> org.andengine.opengl.vbo.HighPerformanceVertexBufferObject:
    float[] mBufferData -> mBufferData
    java.nio.FloatBuffer mFloatBuffer -> mFloatBuffer
    float[] getBufferData() -> getBufferData
    int getHeapMemoryByteSize() -> getHeapMemoryByteSize
    int getNativeHeapMemoryByteSize() -> getNativeHeapMemoryByteSize
    void onBufferData() -> onBufferData
org.andengine.opengl.vbo.IVertexBufferObject -> org.andengine.opengl.vbo.IVertexBufferObject:
    int HARDWARE_BUFFER_ID_INVALID -> HARDWARE_BUFFER_ID_INVALID
    boolean isAutoDispose() -> isAutoDispose
    int getHardwareBufferID() -> getHardwareBufferID
    boolean isLoadedToHardware() -> isLoadedToHardware
    void setNotLoadedToHardware() -> setNotLoadedToHardware
    void unloadFromHardware(org.andengine.opengl.util.GLState) -> unloadFromHardware
    boolean isDirtyOnHardware() -> isDirtyOnHardware
    void setDirtyOnHardware() -> setDirtyOnHardware
    int getCapacity() -> getCapacity
    int getByteCapacity() -> getByteCapacity
    int getHeapMemoryByteSize() -> getHeapMemoryByteSize
    int getNativeHeapMemoryByteSize() -> getNativeHeapMemoryByteSize
    int getGPUMemoryByteSize() -> getGPUMemoryByteSize
    void bind(org.andengine.opengl.util.GLState) -> bind
    void bind(org.andengine.opengl.util.GLState,org.andengine.opengl.shader.ShaderProgram) -> bind
    void unbind(org.andengine.opengl.util.GLState,org.andengine.opengl.shader.ShaderProgram) -> unbind
    org.andengine.opengl.vbo.VertexBufferObjectManager getVertexBufferObjectManager() -> getVertexBufferObjectManager
    void draw(int,int) -> draw
    void draw(int,int,int) -> draw
org.andengine.opengl.vbo.LowMemoryVertexBufferObject -> org.andengine.opengl.vbo.LowMemoryVertexBufferObject:
    java.nio.FloatBuffer mFloatBuffer -> mFloatBuffer
    java.nio.FloatBuffer getFloatBuffer() -> getFloatBuffer
    int getHeapMemoryByteSize() -> getHeapMemoryByteSize
    int getNativeHeapMemoryByteSize() -> getNativeHeapMemoryByteSize
    void onBufferData() -> onBufferData
org.andengine.opengl.vbo.SharedMemoryVertexBufferObject -> org.andengine.opengl.vbo.SharedMemoryVertexBufferObject:
    java.util.concurrent.locks.ReentrantLock sSharedByteBufferLock -> sSharedByteBufferLock
    java.nio.ByteBuffer sSharedByteBuffer -> sSharedByteBuffer
    int getSharedByteBufferByteCapacity() -> getSharedByteBufferByteCapacity
    void dispose() -> dispose
    java.nio.ByteBuffer aquireByteBuffer() -> aquireByteBuffer
    void releaseByteBuffer(java.nio.ByteBuffer) -> releaseByteBuffer
org.andengine.opengl.vbo.VertexBufferObject -> org.andengine.opengl.vbo.VertexBufferObject:
    int mCapacity -> mCapacity
    boolean mAutoDispose -> mAutoDispose
    int mUsage -> mUsage
    java.nio.ByteBuffer mByteBuffer -> mByteBuffer
    int mHardwareBufferID -> mHardwareBufferID
    boolean mDirtyOnHardware -> mDirtyOnHardware
    boolean mDisposed -> mDisposed
    org.andengine.opengl.vbo.VertexBufferObjectManager mVertexBufferObjectManager -> mVertexBufferObjectManager
    org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes mVertexBufferObjectAttributes -> mVertexBufferObjectAttributes
    org.andengine.opengl.vbo.VertexBufferObjectManager getVertexBufferObjectManager() -> getVertexBufferObjectManager
    boolean isDisposed() -> isDisposed
    boolean isAutoDispose() -> isAutoDispose
    int getHardwareBufferID() -> getHardwareBufferID
    boolean isLoadedToHardware() -> isLoadedToHardware
    void setNotLoadedToHardware() -> setNotLoadedToHardware
    boolean isDirtyOnHardware() -> isDirtyOnHardware
    void setDirtyOnHardware() -> setDirtyOnHardware
    int getCapacity() -> getCapacity
    int getByteCapacity() -> getByteCapacity
    int getGPUMemoryByteSize() -> getGPUMemoryByteSize
    void onBufferData() -> onBufferData
    void bind(org.andengine.opengl.util.GLState) -> bind
    void bind(org.andengine.opengl.util.GLState,org.andengine.opengl.shader.ShaderProgram) -> bind
    void unbind(org.andengine.opengl.util.GLState,org.andengine.opengl.shader.ShaderProgram) -> unbind
    void unloadFromHardware(org.andengine.opengl.util.GLState) -> unloadFromHardware
    void draw(int,int) -> draw
    void draw(int,int,int) -> draw
    void dispose() -> dispose
    void finalize() -> finalize
    void loadToHardware(org.andengine.opengl.util.GLState) -> loadToHardware
org.andengine.opengl.vbo.VertexBufferObjectManager -> org.andengine.opengl.vbo.VertexBufferObjectManager:
    java.util.ArrayList mVertexBufferObjectsLoaded -> mVertexBufferObjectsLoaded
    java.util.ArrayList mVertexBufferObjectsToBeUnloaded -> mVertexBufferObjectsToBeUnloaded
    int getHeapMemoryByteSize() -> getHeapMemoryByteSize
    int getNativeHeapMemoryByteSize() -> getNativeHeapMemoryByteSize
    int getGPUHeapMemoryByteSize() -> getGPUHeapMemoryByteSize
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onVertexBufferObjectLoaded(org.andengine.opengl.vbo.IVertexBufferObject) -> onVertexBufferObjectLoaded
    void onUnloadVertexBufferObject(org.andengine.opengl.vbo.IVertexBufferObject) -> onUnloadVertexBufferObject
    void onReload() -> onReload
    void updateVertexBufferObjects(org.andengine.opengl.util.GLState) -> updateVertexBufferObjects
org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject -> org.andengine.opengl.vbo.ZeroMemoryVertexBufferObject:
    int mCapacity -> mCapacity
    boolean mAutoDispose -> mAutoDispose
    int mUsage -> mUsage
    int mHardwareBufferID -> mHardwareBufferID
    boolean mDirtyOnHardware -> mDirtyOnHardware
    boolean mDisposed -> mDisposed
    org.andengine.opengl.vbo.VertexBufferObjectManager mVertexBufferObjectManager -> mVertexBufferObjectManager
    org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes mVertexBufferObjectAttributes -> mVertexBufferObjectAttributes
    org.andengine.opengl.vbo.VertexBufferObjectManager getVertexBufferObjectManager() -> getVertexBufferObjectManager
    boolean isDisposed() -> isDisposed
    boolean isAutoDispose() -> isAutoDispose
    int getHardwareBufferID() -> getHardwareBufferID
    boolean isLoadedToHardware() -> isLoadedToHardware
    void setNotLoadedToHardware() -> setNotLoadedToHardware
    boolean isDirtyOnHardware() -> isDirtyOnHardware
    void setDirtyOnHardware() -> setDirtyOnHardware
    int getCapacity() -> getCapacity
    int getByteCapacity() -> getByteCapacity
    int getHeapMemoryByteSize() -> getHeapMemoryByteSize
    int getNativeHeapMemoryByteSize() -> getNativeHeapMemoryByteSize
    int getGPUMemoryByteSize() -> getGPUMemoryByteSize
    void onPopulateBufferData(java.nio.ByteBuffer) -> onPopulateBufferData
    void bind(org.andengine.opengl.util.GLState) -> bind
    void bind(org.andengine.opengl.util.GLState,org.andengine.opengl.shader.ShaderProgram) -> bind
    void unbind(org.andengine.opengl.util.GLState,org.andengine.opengl.shader.ShaderProgram) -> unbind
    void unloadFromHardware(org.andengine.opengl.util.GLState) -> unloadFromHardware
    void draw(int,int) -> draw
    void draw(int,int,int) -> draw
    void dispose() -> dispose
    void finalize() -> finalize
    void loadToHardware(org.andengine.opengl.util.GLState) -> loadToHardware
    java.nio.ByteBuffer aquireByteBuffer() -> aquireByteBuffer
    void releaseByteBuffer(java.nio.ByteBuffer) -> releaseByteBuffer
org.andengine.opengl.vbo.attribute.VertexBufferObjectAttribute -> org.andengine.opengl.vbo.attribute.VertexBufferObjectAttribute:
    int mLocation -> mLocation
    java.lang.String mName -> mName
    int mSize -> mSize
    int mType -> mType
    boolean mNormalized -> mNormalized
    int mOffset -> mOffset
    int getLocation() -> getLocation
    java.lang.String getName() -> getName
    int getSize() -> getSize
    int getType() -> getType
    boolean isNormalized() -> isNormalized
    int getOffset() -> getOffset
    void glVertexAttribPointer(int) -> glVertexAttribPointer
org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributeFix -> org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributeFix:
    void glVertexAttribPointer(int) -> glVertexAttribPointer
org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes -> org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes:
    int mStride -> mStride
    org.andengine.opengl.vbo.attribute.VertexBufferObjectAttribute[] mVertexBufferObjectAttributes -> mVertexBufferObjectAttributes
    void glVertexAttribPointers() -> glVertexAttribPointers
org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributesBuilder -> org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributesBuilder:
    boolean WORAROUND_GLES2_GLVERTEXATTRIBPOINTER_MISSING -> WORAROUND_GLES2_GLVERTEXATTRIBPOINTER_MISSING
    int mIndex -> mIndex
    org.andengine.opengl.vbo.attribute.VertexBufferObjectAttribute[] mVertexBufferObjectAttributes -> mVertexBufferObjectAttributes
    int mOffset -> mOffset
    org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributesBuilder add(int,java.lang.String,int,int,boolean) -> add
    org.andengine.opengl.vbo.attribute.VertexBufferObjectAttributes build() -> build
org.andengine.opengl.view.ConfigChooser -> org.andengine.opengl.view.ConfigChooser:
    int[] BUFFER -> BUFFER
    int RED_SIZE -> RED_SIZE
    int GREEN_SIZE -> GREEN_SIZE
    int BLUE_SIZE -> BLUE_SIZE
    int DEPTH_SIZE -> DEPTH_SIZE
    int ALPHA_SIZE -> ALPHA_SIZE
    int STENCIL_SIZE -> STENCIL_SIZE
    int MULTISAMPLE_COUNT -> MULTISAMPLE_COUNT
    int EGL_GLES2_BIT -> EGL_GLES2_BIT
    int[] EGLCONFIG_ATTRIBUTES_MULTISAMPLE -> EGLCONFIG_ATTRIBUTES_MULTISAMPLE
    int EGL_COVERAGE_BUFFERS_NV -> EGL_COVERAGE_BUFFERS_NV
    int EGL_COVERAGE_SAMPLES_NV -> EGL_COVERAGE_SAMPLES_NV
    int[] EGLCONFIG_ATTRIBUTES_COVERAGEMULTISAMPLE_NVIDIA -> EGLCONFIG_ATTRIBUTES_COVERAGEMULTISAMPLE_NVIDIA
    int[] EGLCONFIG_ATTRIBUTES_FALLBACK -> EGLCONFIG_ATTRIBUTES_FALLBACK
    boolean mMultiSamplingRequested -> mMultiSamplingRequested
    boolean mMultiSampling -> mMultiSampling
    boolean mCoverageMultiSampling -> mCoverageMultiSampling
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    boolean isMultiSampling() -> isMultiSampling
    boolean isCoverageMultiSampling() -> isCoverageMultiSampling
    int getRedSize() -> getRedSize
    int getGreenSize() -> getGreenSize
    int getBlueSize() -> getBlueSize
    int getAlphaSize() -> getAlphaSize
    int getDepthSize() -> getDepthSize
    int getStencilSize() -> getStencilSize
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher) -> chooseConfig
    int getEGLConfigCount(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,int[]) -> getEGLConfigCount
    javax.microedition.khronos.egl.EGLConfig findEGLConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,int[],int,org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher) -> findEGLConfig
    javax.microedition.khronos.egl.EGLConfig findEGLConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher) -> findEGLConfig
    int getConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getConfigAttrib
org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher -> org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher:
    org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher STRICT -> STRICT
    org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher LOOSE_STENCIL -> LOOSE_STENCIL
    org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher LOOSE_DEPTH_AND_STENCIL -> LOOSE_DEPTH_AND_STENCIL
    org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher ANY -> ANY
    org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher[] ENUM$VALUES -> ENUM$VALUES
    boolean matches(int,int,int,int,int,int) -> matches
    org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher[] values() -> values
    org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher valueOf(java.lang.String) -> valueOf
org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher$1 -> org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher$1:
    boolean matches(int,int,int,int,int,int) -> matches
org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher$2 -> org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher$2:
    boolean matches(int,int,int,int,int,int) -> matches
org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher$3 -> org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher$3:
    boolean matches(int,int,int,int,int,int) -> matches
org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher$4 -> org.andengine.opengl.view.ConfigChooser$ConfigChooserMatcher$4:
    boolean matches(int,int,int,int,int,int) -> matches
org.andengine.opengl.view.EngineRenderer -> org.andengine.opengl.view.EngineRenderer:
    org.andengine.engine.Engine mEngine -> mEngine
    org.andengine.opengl.view.ConfigChooser mConfigChooser -> mConfigChooser
    boolean mMultiSampling -> mMultiSampling
    org.andengine.opengl.view.IRendererListener mRendererListener -> mRendererListener
    org.andengine.opengl.util.GLState mGLState -> mGLState
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
org.andengine.opengl.view.IRendererListener -> org.andengine.opengl.view.IRendererListener:
    void onSurfaceCreated(org.andengine.opengl.util.GLState) -> onSurfaceCreated
    void onSurfaceChanged(org.andengine.opengl.util.GLState,int,int) -> onSurfaceChanged
org.andengine.opengl.view.RenderSurfaceView -> org.andengine.opengl.view.RenderSurfaceView:
    org.andengine.opengl.view.EngineRenderer mEngineRenderer -> mEngineRenderer
    org.andengine.opengl.view.ConfigChooser mConfigChooser -> mConfigChooser
    org.andengine.opengl.view.ConfigChooser getConfigChooser() -> getConfigChooser
    void onMeasure(int,int) -> onMeasure
    void setMeasuredDimensionProxy(int,int) -> setMeasuredDimensionProxy
    void setRenderer(org.andengine.engine.Engine,org.andengine.opengl.view.IRendererListener) -> setRenderer
org.andengine.ui.IGameInterface -> org.andengine.ui.IGameInterface:
    org.andengine.engine.options.EngineOptions onCreateEngineOptions() -> onCreateEngineOptions
    org.andengine.engine.Engine onCreateEngine(org.andengine.engine.options.EngineOptions) -> onCreateEngine
    void onCreateResources(org.andengine.ui.IGameInterface$OnCreateResourcesCallback) -> onCreateResources
    void onCreateScene(org.andengine.ui.IGameInterface$OnCreateSceneCallback) -> onCreateScene
    void onPopulateScene(org.andengine.entity.scene.Scene,org.andengine.ui.IGameInterface$OnPopulateSceneCallback) -> onPopulateScene
    void onReloadResources() -> onReloadResources
    void onDestroyResources() -> onDestroyResources
    void onGameCreated() -> onGameCreated
    void onResumeGame() -> onResumeGame
    void onPauseGame() -> onPauseGame
    void onGameDestroyed() -> onGameDestroyed
org.andengine.ui.IGameInterface$OnCreateResourcesCallback -> org.andengine.ui.IGameInterface$OnCreateResourcesCallback:
    void onCreateResourcesFinished() -> onCreateResourcesFinished
org.andengine.ui.IGameInterface$OnCreateSceneCallback -> org.andengine.ui.IGameInterface$OnCreateSceneCallback:
    void onCreateSceneFinished(org.andengine.entity.scene.Scene) -> onCreateSceneFinished
org.andengine.ui.IGameInterface$OnPopulateSceneCallback -> org.andengine.ui.IGameInterface$OnPopulateSceneCallback:
    void onPopulateSceneFinished() -> onPopulateSceneFinished
org.andengine.ui.activity.BaseActivity -> org.andengine.ui.activity.BaseActivity:
    void toastOnUIThread(java.lang.CharSequence) -> toastOnUIThread
    void toastOnUIThread(java.lang.CharSequence,int) -> toastOnUIThread
    void doAsync(int,int,org.andengine.util.call.Callable,org.andengine.util.call.Callback) -> doAsync
    void doAsync(int,int,org.andengine.util.call.Callable,org.andengine.util.call.Callback,org.andengine.util.call.Callback) -> doAsync
    void doProgressAsync(int,int,org.andengine.util.progress.ProgressCallable,org.andengine.util.call.Callback) -> doProgressAsync
    void doProgressAsync(int,int,org.andengine.util.progress.ProgressCallable,org.andengine.util.call.Callback,org.andengine.util.call.Callback) -> doProgressAsync
    void doAsync(int,int,org.andengine.util.call.AsyncCallable,org.andengine.util.call.Callback,org.andengine.util.call.Callback) -> doAsync
org.andengine.ui.activity.BaseActivity$1 -> org.andengine.ui.activity.BaseActivity$1:
    org.andengine.ui.activity.BaseActivity this$0 -> this$0
    java.lang.CharSequence val$pText -> val$pText
    int val$pDuration -> val$pDuration
    void run() -> run
org.andengine.ui.activity.BaseGameActivity -> org.andengine.ui.activity.BaseGameActivity:
    org.andengine.engine.Engine mEngine -> mEngine
    android.os.PowerManager$WakeLock mWakeLock -> mWakeLock
    org.andengine.opengl.view.RenderSurfaceView mRenderSurfaceView -> mRenderSurfaceView
    boolean mGamePaused -> mGamePaused
    boolean mGameCreated -> mGameCreated
    boolean mCreateGameCalled -> mCreateGameCalled
    boolean mOnReloadResourcesScheduled -> mOnReloadResourcesScheduled
    int[] $SWITCH_TABLE$org$andengine$engine$options$ScreenOrientation -> $SWITCH_TABLE$org$andengine$engine$options$ScreenOrientation
    void onCreate(android.os.Bundle) -> onCreate
    org.andengine.engine.Engine onCreateEngine(org.andengine.engine.options.EngineOptions) -> onCreateEngine
    void onSurfaceCreated(org.andengine.opengl.util.GLState) -> onSurfaceCreated
    void onSurfaceChanged(org.andengine.opengl.util.GLState,int,int) -> onSurfaceChanged
    void onCreateGame() -> onCreateGame
    void onGameCreated() -> onGameCreated
    void onResume() -> onResume
    void onResumeGame() -> onResumeGame
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onReloadResources() -> onReloadResources
    void onPause() -> onPause
    void onPauseGame() -> onPauseGame
    void onDestroy() -> onDestroy
    void onDestroyResources() -> onDestroyResources
    void onGameDestroyed() -> onGameDestroyed
    org.andengine.engine.Engine getEngine() -> getEngine
    boolean isGamePaused() -> isGamePaused
    boolean isGameRunning() -> isGameRunning
    boolean isGameLoaded() -> isGameLoaded
    org.andengine.opengl.vbo.VertexBufferObjectManager getVertexBufferObjectManager() -> getVertexBufferObjectManager
    org.andengine.opengl.texture.TextureManager getTextureManager() -> getTextureManager
    org.andengine.opengl.font.FontManager getFontManager() -> getFontManager
    org.andengine.opengl.shader.ShaderProgramManager getShaderProgramManager() -> getShaderProgramManager
    org.andengine.audio.sound.SoundManager getSoundManager() -> getSoundManager
    org.andengine.audio.music.MusicManager getMusicManager() -> getMusicManager
    void callGameResumedOnUIThread() -> callGameResumedOnUIThread
    void onSetContentView() -> onSetContentView
    void runOnUpdateThread(java.lang.Runnable) -> runOnUpdateThread
    void runOnUpdateThread(java.lang.Runnable,boolean) -> runOnUpdateThread
    void acquireWakeLock() -> acquireWakeLock
    void acquireWakeLock(org.andengine.engine.options.WakeLockOptions) -> acquireWakeLock
    void releaseWakeLock() -> releaseWakeLock
    void applyEngineOptions() -> applyEngineOptions
    android.widget.FrameLayout$LayoutParams createSurfaceViewLayoutParams() -> createSurfaceViewLayoutParams
    void enableVibrator() -> enableVibrator
    void enableLocationSensor(org.andengine.input.sensor.location.ILocationListener,org.andengine.input.sensor.location.LocationSensorOptions) -> enableLocationSensor
    void disableLocationSensor() -> disableLocationSensor
    boolean enableAccelerationSensor(org.andengine.input.sensor.acceleration.IAccelerationListener) -> enableAccelerationSensor
    boolean enableAccelerationSensor(org.andengine.input.sensor.acceleration.IAccelerationListener,org.andengine.input.sensor.acceleration.AccelerationSensorOptions) -> enableAccelerationSensor
    boolean disableAccelerationSensor() -> disableAccelerationSensor
    boolean enableOrientationSensor(org.andengine.input.sensor.orientation.IOrientationListener) -> enableOrientationSensor
    boolean enableOrientationSensor(org.andengine.input.sensor.orientation.IOrientationListener,org.andengine.input.sensor.orientation.OrientationSensorOptions) -> enableOrientationSensor
    boolean disableOrientationSensor() -> disableOrientationSensor
    void access$0(org.andengine.ui.activity.BaseGameActivity) -> access$0
    int[] $SWITCH_TABLE$org$andengine$engine$options$ScreenOrientation() -> $SWITCH_TABLE$org$andengine$engine$options$ScreenOrientation
org.andengine.ui.activity.BaseGameActivity$1 -> org.andengine.ui.activity.BaseGameActivity$1:
    org.andengine.ui.activity.BaseGameActivity this$0 -> this$0
    void onPopulateSceneFinished() -> onPopulateSceneFinished
org.andengine.ui.activity.BaseGameActivity$2 -> org.andengine.ui.activity.BaseGameActivity$2:
    org.andengine.ui.activity.BaseGameActivity this$0 -> this$0
    org.andengine.ui.IGameInterface$OnPopulateSceneCallback val$onPopulateSceneCallback -> val$onPopulateSceneCallback
    void onCreateSceneFinished(org.andengine.entity.scene.Scene) -> onCreateSceneFinished
org.andengine.ui.activity.BaseGameActivity$3 -> org.andengine.ui.activity.BaseGameActivity$3:
    org.andengine.ui.activity.BaseGameActivity this$0 -> this$0
    org.andengine.ui.IGameInterface$OnCreateSceneCallback val$onCreateSceneCallback -> val$onCreateSceneCallback
    void onCreateResourcesFinished() -> onCreateResourcesFinished
org.andengine.ui.activity.BaseGameActivity$4 -> org.andengine.ui.activity.BaseGameActivity$4:
    org.andengine.ui.activity.BaseGameActivity this$0 -> this$0
    void run() -> run
org.andengine.ui.activity.LayoutGameActivity -> org.andengine.ui.activity.LayoutGameActivity:
    int getLayoutID() -> getLayoutID
    int getRenderSurfaceViewID() -> getRenderSurfaceViewID
    void onSetContentView() -> onSetContentView
org.andengine.ui.activity.LegacyBaseGameActivity -> org.andengine.ui.activity.LegacyBaseGameActivity:
    org.andengine.engine.Engine onLoadEngine() -> onLoadEngine
    void onLoadResources() -> onLoadResources
    void onUnloadResources() -> onUnloadResources
    org.andengine.entity.scene.Scene onLoadScene() -> onLoadScene
    org.andengine.entity.scene.Scene onLoadComplete() -> onLoadComplete
    org.andengine.engine.options.EngineOptions onCreateEngineOptions() -> onCreateEngineOptions
    org.andengine.engine.Engine onCreateEngine(org.andengine.engine.options.EngineOptions) -> onCreateEngine
    void onCreateResources(org.andengine.ui.IGameInterface$OnCreateResourcesCallback) -> onCreateResources
    void onCreateScene(org.andengine.ui.IGameInterface$OnCreateSceneCallback) -> onCreateScene
    void onPopulateScene(org.andengine.entity.scene.Scene,org.andengine.ui.IGameInterface$OnPopulateSceneCallback) -> onPopulateScene
    void onDestroyResources() -> onDestroyResources
    void onGameCreated() -> onGameCreated
org.andengine.ui.activity.SimpleAsyncGameActivity -> org.andengine.ui.activity.SimpleAsyncGameActivity:
    void onCreateResourcesAsync(org.andengine.util.progress.IProgressListener) -> onCreateResourcesAsync
    org.andengine.entity.scene.Scene onCreateSceneAsync(org.andengine.util.progress.IProgressListener) -> onCreateSceneAsync
    void onPopulateSceneAsync(org.andengine.entity.scene.Scene,org.andengine.util.progress.IProgressListener) -> onPopulateSceneAsync
    void onCreateResources(org.andengine.ui.IGameInterface$OnCreateResourcesCallback) -> onCreateResources
    void onCreateScene(org.andengine.ui.IGameInterface$OnCreateSceneCallback) -> onCreateScene
    void onPopulateScene(org.andengine.entity.scene.Scene,org.andengine.ui.IGameInterface$OnPopulateSceneCallback) -> onPopulateScene
org.andengine.ui.activity.SimpleAsyncGameActivity$1 -> org.andengine.ui.activity.SimpleAsyncGameActivity$1:
    org.andengine.ui.activity.SimpleAsyncGameActivity this$0 -> this$0
    org.andengine.ui.IGameInterface$OnCreateResourcesCallback val$pOnCreateResourcesCallback -> val$pOnCreateResourcesCallback
    void run() -> run
    org.andengine.ui.activity.SimpleAsyncGameActivity access$0(org.andengine.ui.activity.SimpleAsyncGameActivity$1) -> access$0
org.andengine.ui.activity.SimpleAsyncGameActivity$1$1 -> org.andengine.ui.activity.SimpleAsyncGameActivity$1$1:
    org.andengine.ui.activity.SimpleAsyncGameActivity$1 this$1 -> this$1
    org.andengine.ui.IGameInterface$OnCreateResourcesCallback val$pOnCreateResourcesCallback -> val$pOnCreateResourcesCallback
    java.lang.Void call(org.andengine.util.progress.IProgressListener) -> call
    java.lang.Object call(org.andengine.util.progress.IProgressListener) -> call
org.andengine.ui.activity.SimpleAsyncGameActivity$1$2 -> org.andengine.ui.activity.SimpleAsyncGameActivity$1$2:
    org.andengine.ui.activity.SimpleAsyncGameActivity$1 this$1 -> this$1
    void onCallback(java.lang.Void) -> onCallback
    void onCallback(java.lang.Object) -> onCallback
org.andengine.ui.activity.SimpleAsyncGameActivity$2 -> org.andengine.ui.activity.SimpleAsyncGameActivity$2:
    org.andengine.ui.activity.SimpleAsyncGameActivity this$0 -> this$0
    org.andengine.ui.IGameInterface$OnCreateSceneCallback val$pOnCreateSceneCallback -> val$pOnCreateSceneCallback
    void run() -> run
    org.andengine.ui.activity.SimpleAsyncGameActivity access$0(org.andengine.ui.activity.SimpleAsyncGameActivity$2) -> access$0
org.andengine.ui.activity.SimpleAsyncGameActivity$2$1 -> org.andengine.ui.activity.SimpleAsyncGameActivity$2$1:
    org.andengine.ui.activity.SimpleAsyncGameActivity$2 this$1 -> this$1
    org.andengine.ui.IGameInterface$OnCreateSceneCallback val$pOnCreateSceneCallback -> val$pOnCreateSceneCallback
    java.lang.Void call(org.andengine.util.progress.IProgressListener) -> call
    java.lang.Object call(org.andengine.util.progress.IProgressListener) -> call
org.andengine.ui.activity.SimpleAsyncGameActivity$2$2 -> org.andengine.ui.activity.SimpleAsyncGameActivity$2$2:
    org.andengine.ui.activity.SimpleAsyncGameActivity$2 this$1 -> this$1
    void onCallback(java.lang.Void) -> onCallback
    void onCallback(java.lang.Object) -> onCallback
org.andengine.ui.activity.SimpleAsyncGameActivity$3 -> org.andengine.ui.activity.SimpleAsyncGameActivity$3:
    org.andengine.ui.activity.SimpleAsyncGameActivity this$0 -> this$0
    org.andengine.entity.scene.Scene val$pScene -> val$pScene
    org.andengine.ui.IGameInterface$OnPopulateSceneCallback val$pOnPopulateSceneCallback -> val$pOnPopulateSceneCallback
    void run() -> run
    org.andengine.ui.activity.SimpleAsyncGameActivity access$0(org.andengine.ui.activity.SimpleAsyncGameActivity$3) -> access$0
org.andengine.ui.activity.SimpleAsyncGameActivity$3$1 -> org.andengine.ui.activity.SimpleAsyncGameActivity$3$1:
    org.andengine.ui.activity.SimpleAsyncGameActivity$3 this$1 -> this$1
    org.andengine.entity.scene.Scene val$pScene -> val$pScene
    org.andengine.ui.IGameInterface$OnPopulateSceneCallback val$pOnPopulateSceneCallback -> val$pOnPopulateSceneCallback
    java.lang.Void call(org.andengine.util.progress.IProgressListener) -> call
    java.lang.Object call(org.andengine.util.progress.IProgressListener) -> call
org.andengine.ui.activity.SimpleAsyncGameActivity$3$2 -> org.andengine.ui.activity.SimpleAsyncGameActivity$3$2:
    org.andengine.ui.activity.SimpleAsyncGameActivity$3 this$1 -> this$1
    void onCallback(java.lang.Void) -> onCallback
    void onCallback(java.lang.Object) -> onCallback
org.andengine.ui.activity.SimpleBaseGameActivity -> org.andengine.ui.activity.SimpleBaseGameActivity:
    void onCreateResources() -> onCreateResources
    org.andengine.entity.scene.Scene onCreateScene() -> onCreateScene
    void onCreateResources(org.andengine.ui.IGameInterface$OnCreateResourcesCallback) -> onCreateResources
    void onCreateScene(org.andengine.ui.IGameInterface$OnCreateSceneCallback) -> onCreateScene
    void onPopulateScene(org.andengine.entity.scene.Scene,org.andengine.ui.IGameInterface$OnPopulateSceneCallback) -> onPopulateScene
org.andengine.ui.activity.SimpleLayoutGameActivity -> org.andengine.ui.activity.SimpleLayoutGameActivity:
    void onCreateResources() -> onCreateResources
    org.andengine.entity.scene.Scene onCreateScene() -> onCreateScene
    void onCreateResources(org.andengine.ui.IGameInterface$OnCreateResourcesCallback) -> onCreateResources
    void onCreateScene(org.andengine.ui.IGameInterface$OnCreateSceneCallback) -> onCreateScene
    void onPopulateScene(org.andengine.entity.scene.Scene,org.andengine.ui.IGameInterface$OnPopulateSceneCallback) -> onPopulateScene
org.andengine.ui.dialog.GenericInputDialogBuilder -> org.andengine.ui.dialog.GenericInputDialogBuilder:
    org.andengine.util.call.Callback mSuccessCallback -> mSuccessCallback
    android.content.DialogInterface$OnCancelListener mOnCancelListener -> mOnCancelListener
    int mTitleResID -> mTitleResID
    int mMessageResID -> mMessageResID
    int mIconResID -> mIconResID
    android.content.Context mContext -> mContext
    int mErrorResID -> mErrorResID
    java.lang.String mDefaultText -> mDefaultText
    java.lang.Object generateResult(java.lang.String) -> generateResult
    android.app.Dialog create() -> create
    void setView(android.app.AlertDialog$Builder,android.widget.EditText) -> setView
    int access$0(org.andengine.ui.dialog.GenericInputDialogBuilder) -> access$0
org.andengine.ui.dialog.GenericInputDialogBuilder$1 -> org.andengine.ui.dialog.GenericInputDialogBuilder$1:
    org.andengine.ui.dialog.GenericInputDialogBuilder this$0 -> this$0
    android.widget.EditText val$etInput -> val$etInput
    void onClick(android.content.DialogInterface,int) -> onClick
org.andengine.ui.dialog.GenericInputDialogBuilder$2 -> org.andengine.ui.dialog.GenericInputDialogBuilder$2:
    org.andengine.ui.dialog.GenericInputDialogBuilder this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
org.andengine.ui.dialog.StringInputDialogBuilder -> org.andengine.ui.dialog.StringInputDialogBuilder:
    java.lang.String generateResult(java.lang.String) -> generateResult
    java.lang.Object generateResult(java.lang.String) -> generateResult
org.andengine.util.ActivityUtils -> org.andengine.util.ActivityUtils:
    void requestFullscreen(android.app.Activity) -> requestFullscreen
    void setScreenBrightness(android.app.Activity,float) -> setScreenBrightness
    void keepScreenOn(android.app.Activity) -> keepScreenOn
    void doAsync(android.content.Context,int,int,org.andengine.util.call.Callable,org.andengine.util.call.Callback) -> doAsync
    void doAsync(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,org.andengine.util.call.Callable,org.andengine.util.call.Callback) -> doAsync
    void doAsync(android.content.Context,int,int,org.andengine.util.call.Callable,org.andengine.util.call.Callback,boolean) -> doAsync
    void doAsync(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,org.andengine.util.call.Callable,org.andengine.util.call.Callback,boolean) -> doAsync
    void doAsync(android.content.Context,int,int,org.andengine.util.call.Callable,org.andengine.util.call.Callback,org.andengine.util.call.Callback) -> doAsync
    void doAsync(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,org.andengine.util.call.Callable,org.andengine.util.call.Callback,org.andengine.util.call.Callback) -> doAsync
    void doAsync(android.content.Context,int,int,org.andengine.util.call.Callable,org.andengine.util.call.Callback,org.andengine.util.call.Callback,boolean) -> doAsync
    void doAsync(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,org.andengine.util.call.Callable,org.andengine.util.call.Callback,org.andengine.util.call.Callback,boolean) -> doAsync
    void doProgressAsync(android.content.Context,int,int,org.andengine.util.progress.ProgressCallable,org.andengine.util.call.Callback) -> doProgressAsync
    void doProgressAsync(android.content.Context,java.lang.CharSequence,int,org.andengine.util.progress.ProgressCallable,org.andengine.util.call.Callback) -> doProgressAsync
    void doProgressAsync(android.content.Context,int,int,org.andengine.util.progress.ProgressCallable,org.andengine.util.call.Callback,org.andengine.util.call.Callback) -> doProgressAsync
    void doProgressAsync(android.content.Context,java.lang.CharSequence,int,org.andengine.util.progress.ProgressCallable,org.andengine.util.call.Callback,org.andengine.util.call.Callback) -> doProgressAsync
    void doAsync(android.content.Context,int,int,org.andengine.util.call.AsyncCallable,org.andengine.util.call.Callback,org.andengine.util.call.Callback) -> doAsync
    void doAsync(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,org.andengine.util.call.AsyncCallable,org.andengine.util.call.Callback,org.andengine.util.call.Callback) -> doAsync
org.andengine.util.ActivityUtils$1 -> org.andengine.util.ActivityUtils$1:
    android.app.ProgressDialog mPD -> mPD
    java.lang.Exception mException -> mException
    android.content.Context val$pContext -> val$pContext
    java.lang.CharSequence val$pTitle -> val$pTitle
    java.lang.CharSequence val$pMessage -> val$pMessage
    boolean val$pCancelable -> val$pCancelable
    org.andengine.util.call.Callable val$pCallable -> val$pCallable
    org.andengine.util.call.Callback val$pCallback -> val$pCallback
    org.andengine.util.call.Callback val$pExceptionCallback -> val$pExceptionCallback
    void onPreExecute() -> onPreExecute
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.andengine.util.ActivityUtils$1$1 -> org.andengine.util.ActivityUtils$1$1:
    org.andengine.util.ActivityUtils$1 this$1 -> this$1
    org.andengine.util.call.Callback val$pExceptionCallback -> val$pExceptionCallback
    void onCancel(android.content.DialogInterface) -> onCancel
org.andengine.util.ActivityUtils$2 -> org.andengine.util.ActivityUtils$2:
    android.app.ProgressDialog mPD -> mPD
    java.lang.Exception mException -> mException
    android.content.Context val$pContext -> val$pContext
    java.lang.CharSequence val$pTitle -> val$pTitle
    int val$pIconResourceID -> val$pIconResourceID
    org.andengine.util.progress.ProgressCallable val$pCallable -> val$pCallable
    org.andengine.util.call.Callback val$pCallback -> val$pCallback
    org.andengine.util.call.Callback val$pExceptionCallback -> val$pExceptionCallback
    void onPreExecute() -> onPreExecute
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onProgressUpdate(java.lang.Integer[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
org.andengine.util.ActivityUtils$2$1 -> org.andengine.util.ActivityUtils$2$1:
    org.andengine.util.ActivityUtils$2 this$1 -> this$1
    void onProgressChanged(int) -> onProgressChanged
org.andengine.util.ActivityUtils$3 -> org.andengine.util.ActivityUtils$3:
    android.app.ProgressDialog val$pd -> val$pd
    org.andengine.util.call.Callback val$pCallback -> val$pCallback
    void onCallback(java.lang.Object) -> onCallback
org.andengine.util.BetaUtils -> org.andengine.util.BetaUtils:
    java.lang.String PREFERENCES_BETAUTILS_ID -> PREFERENCES_BETAUTILS_ID
    boolean finishWhenExpired(android.app.Activity,java.util.GregorianCalendar,int,int) -> finishWhenExpired
    boolean finishWhenExpired(android.app.Activity,java.util.GregorianCalendar,int,int,android.content.Intent,android.content.Intent) -> finishWhenExpired
org.andengine.util.BetaUtils$1 -> org.andengine.util.BetaUtils$1:
    android.content.Intent val$pOkIntent -> val$pOkIntent
    android.app.Activity val$pActivity -> val$pActivity
    void onClick(android.content.DialogInterface,int) -> onClick
org.andengine.util.BetaUtils$2 -> org.andengine.util.BetaUtils$2:
    android.content.Intent val$pCancelIntent -> val$pCancelIntent
    android.app.Activity val$pActivity -> val$pActivity
    void onClick(android.content.DialogInterface,int) -> onClick
org.andengine.util.Constants -> org.andengine.util.Constants:
    java.lang.String DEBUGTAG -> DEBUGTAG
    int VERTEX_INDEX_X -> VERTEX_INDEX_X
    int VERTEX_INDEX_Y -> VERTEX_INDEX_Y
org.andengine.util.DialogUtils -> org.andengine.util.DialogUtils:
    void keepScreenOn(android.app.Dialog) -> keepScreenOn
org.andengine.util.FileUtils -> org.andengine.util.FileUtils:
    void copyToExternalStorage(android.content.Context,int,java.lang.String) -> copyToExternalStorage
    void copyToInternalStorage(android.content.Context,int,java.lang.String) -> copyToInternalStorage
    void copyToExternalStorage(android.content.Context,java.lang.String,java.lang.String) -> copyToExternalStorage
    void copyToInternalStorage(android.content.Context,java.lang.String,java.lang.String) -> copyToInternalStorage
    void copyToInternalStorage(android.content.Context,java.io.InputStream,java.lang.String) -> copyToInternalStorage
    void copyToExternalStorage(java.io.InputStream,java.lang.String) -> copyToExternalStorage
    void copyToExternalStorage(android.content.Context,java.io.InputStream,java.lang.String) -> copyToExternalStorage
    boolean isFileExistingOnExternalStorage(java.lang.String) -> isFileExistingOnExternalStorage
    boolean isFileExistingOnExternalStorage(android.content.Context,java.lang.String) -> isFileExistingOnExternalStorage
    boolean isDirectoryExistingOnExternalStorage(android.content.Context,java.lang.String) -> isDirectoryExistingOnExternalStorage
    boolean ensureDirectoriesExistOnExternalStorage(android.content.Context,java.lang.String) -> ensureDirectoriesExistOnExternalStorage
    java.io.InputStream openOnExternalStorage(java.lang.String) -> openOnExternalStorage
    java.io.InputStream openOnExternalStorage(android.content.Context,java.lang.String) -> openOnExternalStorage
    java.lang.String[] getDirectoryListOnExternalStorage(android.content.Context,java.lang.String) -> getDirectoryListOnExternalStorage
    java.lang.String[] getDirectoryListOnExternalStorage(android.content.Context,java.lang.String,java.io.FilenameFilter) -> getDirectoryListOnExternalStorage
    java.lang.String getAbsolutePathOnInternalStorage(android.content.Context,java.lang.String) -> getAbsolutePathOnInternalStorage
    java.lang.String getAbsolutePathOnExternalStorage(java.lang.String) -> getAbsolutePathOnExternalStorage
    java.lang.String getAbsolutePathOnExternalStorage(android.content.Context,java.lang.String) -> getAbsolutePathOnExternalStorage
    boolean isExternalStorageWriteable() -> isExternalStorageWriteable
    boolean isExternalStorageReadable() -> isExternalStorageReadable
    void copyFile(java.io.File,java.io.File) -> copyFile
    boolean deleteDirectory(java.io.File) -> deleteDirectory
org.andengine.util.HorizontalAlign -> org.andengine.util.HorizontalAlign:
    org.andengine.util.HorizontalAlign LEFT -> LEFT
    org.andengine.util.HorizontalAlign CENTER -> CENTER
    org.andengine.util.HorizontalAlign RIGHT -> RIGHT
    org.andengine.util.HorizontalAlign[] ENUM$VALUES -> ENUM$VALUES
    org.andengine.util.HorizontalAlign[] values() -> values
    org.andengine.util.HorizontalAlign valueOf(java.lang.String) -> valueOf
org.andengine.util.IDisposable -> org.andengine.util.IDisposable:
    boolean isDisposed() -> isDisposed
    void dispose() -> dispose
org.andengine.util.IDisposable$AlreadyDisposedException -> org.andengine.util.IDisposable$AlreadyDisposedException:
    long serialVersionUID -> serialVersionUID
org.andengine.util.IMatcher -> org.andengine.util.IMatcher:
    boolean matches(java.lang.Object) -> matches
org.andengine.util.ProbabilityGenerator -> org.andengine.util.ProbabilityGenerator:
    float mProbabilitySum -> mProbabilitySum
    java.util.ArrayList mEntries -> mEntries
    void add(float,java.lang.Object[]) -> add
    java.lang.Object next() -> next
    void clear() -> clear
org.andengine.util.ProbabilityGenerator$Entry -> org.andengine.util.ProbabilityGenerator$Entry:
    float mFactor -> mFactor
    java.lang.Object[] mData -> mData
    java.lang.Object getReturnValue() -> getReturnValue
org.andengine.util.SAXUtils -> org.andengine.util.SAXUtils:
    java.lang.String getAttribute(org.xml.sax.Attributes,java.lang.String,java.lang.String) -> getAttribute
    java.lang.String getAttributeOrThrow(org.xml.sax.Attributes,java.lang.String) -> getAttributeOrThrow
    boolean getBooleanAttribute(org.xml.sax.Attributes,java.lang.String,boolean) -> getBooleanAttribute
    boolean getBooleanAttributeOrThrow(org.xml.sax.Attributes,java.lang.String) -> getBooleanAttributeOrThrow
    byte getByteAttribute(org.xml.sax.Attributes,java.lang.String,byte) -> getByteAttribute
    byte getByteAttributeOrThrow(org.xml.sax.Attributes,java.lang.String) -> getByteAttributeOrThrow
    short getShortAttribute(org.xml.sax.Attributes,java.lang.String,short) -> getShortAttribute
    short getShortAttributeOrThrow(org.xml.sax.Attributes,java.lang.String) -> getShortAttributeOrThrow
    int getIntAttribute(org.xml.sax.Attributes,java.lang.String,int) -> getIntAttribute
    int getIntAttributeOrThrow(org.xml.sax.Attributes,java.lang.String) -> getIntAttributeOrThrow
    long getLongAttribute(org.xml.sax.Attributes,java.lang.String,long) -> getLongAttribute
    long getLongAttributeOrThrow(org.xml.sax.Attributes,java.lang.String) -> getLongAttributeOrThrow
    float getFloatAttribute(org.xml.sax.Attributes,java.lang.String,float) -> getFloatAttribute
    float getFloatAttributeOrThrow(org.xml.sax.Attributes,java.lang.String) -> getFloatAttributeOrThrow
    double getDoubleAttribute(org.xml.sax.Attributes,java.lang.String,double) -> getDoubleAttribute
    double getDoubleAttributeOrThrow(org.xml.sax.Attributes,java.lang.String) -> getDoubleAttributeOrThrow
    void appendAttribute(java.lang.StringBuilder,java.lang.String,boolean) -> appendAttribute
    void appendAttribute(java.lang.StringBuilder,java.lang.String,byte) -> appendAttribute
    void appendAttribute(java.lang.StringBuilder,java.lang.String,short) -> appendAttribute
    void appendAttribute(java.lang.StringBuilder,java.lang.String,int) -> appendAttribute
    void appendAttribute(java.lang.StringBuilder,java.lang.String,long) -> appendAttribute
    void appendAttribute(java.lang.StringBuilder,java.lang.String,float) -> appendAttribute
    void appendAttribute(java.lang.StringBuilder,java.lang.String,double) -> appendAttribute
    void appendAttribute(java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendAttribute
org.andengine.util.SocketUtils -> org.andengine.util.SocketUtils:
    void closeSocket(java.net.DatagramSocket) -> closeSocket
    void closeSocket(java.net.Socket) -> closeSocket
    void closeSocket(java.net.ServerSocket) -> closeSocket
org.andengine.util.StreamUtils -> org.andengine.util.StreamUtils:
    int IO_BUFFER_SIZE -> IO_BUFFER_SIZE
    int END_OF_STREAM -> END_OF_STREAM
    java.lang.String readFully(java.io.InputStream) -> readFully
    byte[] streamToBytes(java.io.InputStream) -> streamToBytes
    byte[] streamToBytes(java.io.InputStream,int) -> streamToBytes
    void streamToBytes(java.io.InputStream,int,byte[]) -> streamToBytes
    void streamToBytes(java.io.InputStream,int,byte[],int) -> streamToBytes
    void copy(java.io.InputStream,java.io.OutputStream) -> copy
    void copy(java.io.InputStream,byte[]) -> copy
    void copy(java.io.InputStream,java.nio.ByteBuffer) -> copy
    void copy(java.io.InputStream,java.io.OutputStream,int) -> copy
    boolean copyAndClose(java.io.InputStream,java.io.OutputStream) -> copyAndClose
    void close(java.io.Closeable) -> close
    void flushCloseStream(java.io.OutputStream) -> flushCloseStream
    void flushCloseWriter(java.io.Writer) -> flushCloseWriter
org.andengine.util.TextUtils -> org.andengine.util.TextUtils:
    java.util.regex.Pattern SPLITPATTERN_SPACE -> SPLITPATTERN_SPACE
    java.util.regex.Pattern SPLITPATTERN_SPACES -> SPLITPATTERN_SPACES
    java.util.regex.Pattern SPLITPATTERN_COMMA -> SPLITPATTERN_COMMA
    java.lang.CharSequence padFront(java.lang.CharSequence,char,int) -> padFront
    int countOccurrences(java.lang.CharSequence,char) -> countOccurrences
    java.util.ArrayList split(java.lang.CharSequence,char) -> split
    java.util.List split(java.lang.CharSequence,char,java.util.List) -> split
    java.lang.String formatStackTrace(java.lang.StackTraceElement) -> formatStackTrace
    java.lang.String formatStackTrace(java.lang.StackTraceElement[]) -> formatStackTrace
    int countCharacters(java.util.List) -> countCharacters
    int countCharacters(java.util.List,boolean) -> countCharacters
org.andengine.util.ThreadUtils -> org.andengine.util.ThreadUtils:
    int STACKTRACE_CALLER_DEPTH -> STACKTRACE_CALLER_DEPTH
    void dumpCurrentThreadInfo() -> dumpCurrentThreadInfo
    void dumpCurrentThreadInfo(org.andengine.util.debug.Debug$DebugLevel) -> dumpCurrentThreadInfo
    void dumpCurrentThreadInfo(org.andengine.util.debug.Debug$DebugLevel,java.lang.StackTraceElement) -> dumpCurrentThreadInfo
org.andengine.util.TimeUtils -> org.andengine.util.TimeUtils:
    java.lang.String formatSeconds(int) -> formatSeconds
    java.lang.String formatSeconds(int,java.lang.StringBuilder) -> formatSeconds
org.andengine.util.VerticalAlign -> org.andengine.util.VerticalAlign:
    org.andengine.util.VerticalAlign TOP -> TOP
    org.andengine.util.VerticalAlign CENTER -> CENTER
    org.andengine.util.VerticalAlign BOTTOM -> BOTTOM
    org.andengine.util.VerticalAlign[] ENUM$VALUES -> ENUM$VALUES
    org.andengine.util.VerticalAlign[] values() -> values
    org.andengine.util.VerticalAlign valueOf(java.lang.String) -> valueOf
org.andengine.util.ViewUtils -> org.andengine.util.ViewUtils:
    android.view.View inflate(android.content.Context,int) -> inflate
    android.view.View inflate(android.content.Context,int,android.view.ViewGroup) -> inflate
org.andengine.util.adt.DataConstants -> org.andengine.util.adt.DataConstants:
    int BYTES_PER_BYTE -> BYTES_PER_BYTE
    int BYTES_PER_SHORT -> BYTES_PER_SHORT
    int BYTES_PER_INT -> BYTES_PER_INT
    int BYTES_PER_LONG -> BYTES_PER_LONG
    int BYTES_PER_FLOAT -> BYTES_PER_FLOAT
    int BYTES_PER_DOUBLE -> BYTES_PER_DOUBLE
    int BYTES_PER_KILOBYTE -> BYTES_PER_KILOBYTE
    int BYTES_PER_MEGABYTE -> BYTES_PER_MEGABYTE
    int BYTES_PER_GIGABYTE -> BYTES_PER_GIGABYTE
    int BYTE_TO_KILOBYTE_SHIFT -> BYTE_TO_KILOBYTE_SHIFT
    int BYTE_TO_MEGABYTE_SHIFT -> BYTE_TO_MEGABYTE_SHIFT
    int BYTE_TO_GIGABYTE_SHIFT -> BYTE_TO_GIGABYTE_SHIFT
    short UNSIGNED_BYTE_MAX_VALUE -> UNSIGNED_BYTE_MAX_VALUE
    int UNSIGNED_SHORT_MAX_VALUE -> UNSIGNED_SHORT_MAX_VALUE
    long UNSIGNED_INT_MAX_VALUE -> UNSIGNED_INT_MAX_VALUE
    int BITS_PER_BYTE -> BITS_PER_BYTE
    int BITS_PER_SHORT -> BITS_PER_SHORT
    int BITS_PER_INT -> BITS_PER_INT
    int BITS_PER_LONG -> BITS_PER_LONG
    int BITS_PER_FLOAT -> BITS_PER_FLOAT
    int BITS_PER_DOUBLE -> BITS_PER_DOUBLE
org.andengine.util.adt.array.ArrayUtils -> org.andengine.util.adt.array.ArrayUtils:
    byte random(byte[]) -> random
    short random(short[]) -> random
    int random(int[]) -> random
    long random(long[]) -> random
    float random(float[]) -> random
    double random(double[]) -> random
    java.lang.Object random(java.lang.Object[]) -> random
    void reverse(byte[]) -> reverse
    void reverse(short[]) -> reverse
    void reverse(int[]) -> reverse
    void reverse(long[]) -> reverse
    void reverse(float[]) -> reverse
    void reverse(double[]) -> reverse
    void reverse(java.lang.Object[]) -> reverse
    boolean equals(byte[],int,byte[],int,int) -> equals
    byte[] toByteArray(java.util.List) -> toByteArray
    char[] toCharArray(java.util.List) -> toCharArray
    short[] toShortArray(java.util.List) -> toShortArray
    int[] toIntArray(java.util.List) -> toIntArray
    long[] toLongArray(java.util.List) -> toLongArray
    float[] toFloatArray(java.util.List) -> toFloatArray
    double[] toDoubleArray(java.util.List) -> toDoubleArray
    boolean contains(byte[],byte) -> contains
    boolean contains(char[],char) -> contains
    boolean contains(short[],short) -> contains
    boolean contains(int[],int) -> contains
    boolean contains(long[],long) -> contains
    boolean contains(float[],float) -> contains
    boolean contains(double[],double) -> contains
    java.lang.Object[] join(java.lang.Class,java.lang.Object[][]) -> join
    int idealByteArraySize(int) -> idealByteArraySize
    int idealBooleanArraySize(int) -> idealBooleanArraySize
    int idealShortArraySize(int) -> idealShortArraySize
    int idealCharArraySize(int) -> idealCharArraySize
    int idealIntArraySize(int) -> idealIntArraySize
    int idealFloatArraySize(int) -> idealFloatArraySize
    int idealDoubleArraySize(int) -> idealDoubleArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealObjectArraySize(int) -> idealObjectArraySize
org.andengine.util.adt.bit.BitVector -> org.andengine.util.adt.bit.BitVector:
    int mCapacity -> mCapacity
    long[] mData -> mData
    int getCapacity() -> getCapacity
    boolean getBit(int) -> getBit
    byte getByte(int) -> getByte
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    long getBits(int,int) -> getBits
    java.lang.String toString() -> toString
    byte[] toByteArray() -> toByteArray
org.andengine.util.adt.bounds.BoundsSplit -> org.andengine.util.adt.bounds.BoundsSplit:
    org.andengine.util.adt.bounds.BoundsSplit TOP_LEFT -> TOP_LEFT
    org.andengine.util.adt.bounds.BoundsSplit TOP_RIGHT -> TOP_RIGHT
    org.andengine.util.adt.bounds.BoundsSplit BOTTOM_LEFT -> BOTTOM_LEFT
    org.andengine.util.adt.bounds.BoundsSplit BOTTOM_RIGHT -> BOTTOM_RIGHT
    org.andengine.util.adt.bounds.BoundsSplit[] ENUM$VALUES -> ENUM$VALUES
    org.andengine.util.adt.bounds.BoundsSplit[] values() -> values
    org.andengine.util.adt.bounds.BoundsSplit valueOf(java.lang.String) -> valueOf
org.andengine.util.adt.bounds.BoundsSplit$BoundsSplitException -> org.andengine.util.adt.bounds.BoundsSplit$BoundsSplitException:
    long serialVersionUID -> serialVersionUID
org.andengine.util.adt.bounds.FloatBounds -> org.andengine.util.adt.bounds.FloatBounds:
    float mXMin -> mXMin
    float mYMin -> mYMin
    float mXMax -> mXMax
    float mYMax -> mYMax
    float getXMin() -> getXMin
    float getYMin() -> getYMin
    float getXMax() -> getXMax
    float getYMax() -> getYMax
    void set(float,float) -> set
    void set(float,float,float,float) -> set
    boolean contains(float,float) -> contains
org.andengine.util.adt.bounds.IBounds -> org.andengine.util.adt.bounds.IBounds:
org.andengine.util.adt.bounds.IFloatBounds -> org.andengine.util.adt.bounds.IFloatBounds:
    float getXMin() -> getXMin
    float getYMin() -> getYMin
    float getXMax() -> getXMax
    float getYMax() -> getYMax
org.andengine.util.adt.bounds.IIntBounds -> org.andengine.util.adt.bounds.IIntBounds:
    int getXMin() -> getXMin
    int getYMin() -> getYMin
    int getXMax() -> getXMax
    int getYMax() -> getYMax
org.andengine.util.adt.bounds.IntBounds -> org.andengine.util.adt.bounds.IntBounds:
    int mXMin -> mXMin
    int mYMin -> mYMin
    int mXMax -> mXMax
    int mYMax -> mYMax
    int getXMin() -> getXMin
    int getYMin() -> getYMin
    int getXMax() -> getXMax
    int getYMax() -> getYMax
    void set(int,int) -> set
    void set(int,int,int,int) -> set
    boolean contains(int,int) -> contains
org.andengine.util.adt.cache.IntLRUCache -> org.andengine.util.adt.cache.IntLRUCache:
    int mCapacity -> mCapacity
    int mSize -> mSize
    android.util.SparseArray mSparseArray -> mSparseArray
    org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueue mIntLRUCacheQueue -> mIntLRUCacheQueue
    org.andengine.util.adt.pool.GenericPool mIntLRUCacheValueHolderPool -> mIntLRUCacheValueHolderPool
    int getCapacity() -> getCapacity
    int getSize() -> getSize
    boolean isEmpty() -> isEmpty
    java.lang.Object put(int,java.lang.Object) -> put
    java.lang.Object get(int) -> get
    void clear() -> clear
org.andengine.util.adt.cache.IntLRUCache$1 -> org.andengine.util.adt.cache.IntLRUCache$1:
    org.andengine.util.adt.cache.IntLRUCache this$0 -> this$0
    org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheValueHolder onAllocatePoolItem() -> onAllocatePoolItem
    void onHandleRecycleItem(org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheValueHolder) -> onHandleRecycleItem
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
    void onHandleRecycleItem(java.lang.Object) -> onHandleRecycleItem
org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueue -> org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueue:
    org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueueNode mHead -> mHead
    org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueueNode mTail -> mTail
    org.andengine.util.adt.pool.GenericPool mIntLRUCacheQueueNodePool -> mIntLRUCacheQueueNodePool
    boolean isEmpty() -> isEmpty
    org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueueNode add(int) -> add
    org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueueNode add(org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueueNode) -> add
    int poll() -> poll
    void moveToTail(org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueueNode) -> moveToTail
org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueue$1 -> org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueue$1:
    org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueue this$1 -> this$1
    org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueueNode onAllocatePoolItem() -> onAllocatePoolItem
    void onHandleRecycleItem(org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueueNode) -> onHandleRecycleItem
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
    void onHandleRecycleItem(java.lang.Object) -> onHandleRecycleItem
org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueueNode -> org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueueNode:
    int mKey -> mKey
    org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueueNode mPrevious -> mPrevious
    org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueueNode mNext -> mNext
org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheValueHolder -> org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheValueHolder:
    java.lang.Object mValue -> mValue
    org.andengine.util.adt.cache.IntLRUCache$IntLRUCacheQueueNode mIntLRUCacheQueueNode -> mIntLRUCacheQueueNode
org.andengine.util.adt.cache.LRUCache -> org.andengine.util.adt.cache.LRUCache:
    int mCapacity -> mCapacity
    int mSize -> mSize
    java.util.HashMap mMap -> mMap
    org.andengine.util.adt.cache.LRUCache$LRUCacheQueue mLRUCacheQueue -> mLRUCacheQueue
    org.andengine.util.adt.pool.GenericPool mLRUCacheValueHolderPool -> mLRUCacheValueHolderPool
    int getCapacity() -> getCapacity
    int getSize() -> getSize
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void clear() -> clear
org.andengine.util.adt.cache.LRUCache$1 -> org.andengine.util.adt.cache.LRUCache$1:
    org.andengine.util.adt.cache.LRUCache this$0 -> this$0
    org.andengine.util.adt.cache.LRUCache$LRUCacheValueHolder onAllocatePoolItem() -> onAllocatePoolItem
    void onHandleRecycleItem(org.andengine.util.adt.cache.LRUCache$LRUCacheValueHolder) -> onHandleRecycleItem
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
    void onHandleRecycleItem(java.lang.Object) -> onHandleRecycleItem
org.andengine.util.adt.cache.LRUCache$LRUCacheQueue -> org.andengine.util.adt.cache.LRUCache$LRUCacheQueue:
    org.andengine.util.adt.cache.LRUCache$LRUCacheQueueNode mHead -> mHead
    org.andengine.util.adt.cache.LRUCache$LRUCacheQueueNode mTail -> mTail
    org.andengine.util.adt.pool.GenericPool mLRUCacheQueueNodePool -> mLRUCacheQueueNodePool
    boolean isEmpty() -> isEmpty
    org.andengine.util.adt.cache.LRUCache$LRUCacheQueueNode add(java.lang.Object) -> add
    org.andengine.util.adt.cache.LRUCache$LRUCacheQueueNode add(org.andengine.util.adt.cache.LRUCache$LRUCacheQueueNode) -> add
    java.lang.Object poll() -> poll
    void moveToTail(org.andengine.util.adt.cache.LRUCache$LRUCacheQueueNode) -> moveToTail
org.andengine.util.adt.cache.LRUCache$LRUCacheQueue$1 -> org.andengine.util.adt.cache.LRUCache$LRUCacheQueue$1:
    org.andengine.util.adt.cache.LRUCache$LRUCacheQueue this$1 -> this$1
    org.andengine.util.adt.cache.LRUCache$LRUCacheQueueNode onAllocatePoolItem() -> onAllocatePoolItem
    void onHandleRecycleItem(org.andengine.util.adt.cache.LRUCache$LRUCacheQueueNode) -> onHandleRecycleItem
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
    void onHandleRecycleItem(java.lang.Object) -> onHandleRecycleItem
org.andengine.util.adt.cache.LRUCache$LRUCacheQueueNode -> org.andengine.util.adt.cache.LRUCache$LRUCacheQueueNode:
    java.lang.Object mKey -> mKey
    org.andengine.util.adt.cache.LRUCache$LRUCacheQueueNode mPrevious -> mPrevious
    org.andengine.util.adt.cache.LRUCache$LRUCacheQueueNode mNext -> mNext
org.andengine.util.adt.cache.LRUCache$LRUCacheValueHolder -> org.andengine.util.adt.cache.LRUCache$LRUCacheValueHolder:
    java.lang.Object mValue -> mValue
    org.andengine.util.adt.cache.LRUCache$LRUCacheQueueNode mLRUCacheQueueNode -> mLRUCacheQueueNode
org.andengine.util.adt.cache.concurrent.SynchronizedIntLRUCache -> org.andengine.util.adt.cache.concurrent.SynchronizedIntLRUCache:
    int getSize() -> getSize
    boolean isEmpty() -> isEmpty
    java.lang.Object put(int,java.lang.Object) -> put
    java.lang.Object get(int) -> get
    void clear() -> clear
org.andengine.util.adt.cache.concurrent.SynchronizedLRUCache -> org.andengine.util.adt.cache.concurrent.SynchronizedLRUCache:
    int getSize() -> getSize
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    void clear() -> clear
org.andengine.util.adt.data.DataUtils -> org.andengine.util.adt.data.DataUtils:
    int unsignedByteToInt(byte) -> unsignedByteToInt
org.andengine.util.adt.data.operator.ByteOperator -> org.andengine.util.adt.data.operator.ByteOperator:
    org.andengine.util.adt.data.operator.ByteOperator EQUALS -> EQUALS
    org.andengine.util.adt.data.operator.ByteOperator NOT_EQUALS -> NOT_EQUALS
    org.andengine.util.adt.data.operator.ByteOperator LESS_THAN -> LESS_THAN
    org.andengine.util.adt.data.operator.ByteOperator LESS_OR_EQUAL_THAN -> LESS_OR_EQUAL_THAN
    org.andengine.util.adt.data.operator.ByteOperator MORE_THAN -> MORE_THAN
    org.andengine.util.adt.data.operator.ByteOperator MORE_OR_EQUAL_THAN -> MORE_OR_EQUAL_THAN
    org.andengine.util.adt.data.operator.ByteOperator[] ENUM$VALUES -> ENUM$VALUES
    boolean check(byte,byte) -> check
    org.andengine.util.adt.data.operator.ByteOperator[] values() -> values
    org.andengine.util.adt.data.operator.ByteOperator valueOf(java.lang.String) -> valueOf
org.andengine.util.adt.data.operator.ByteOperator$1 -> org.andengine.util.adt.data.operator.ByteOperator$1:
    boolean check(byte,byte) -> check
org.andengine.util.adt.data.operator.ByteOperator$2 -> org.andengine.util.adt.data.operator.ByteOperator$2:
    boolean check(byte,byte) -> check
org.andengine.util.adt.data.operator.ByteOperator$3 -> org.andengine.util.adt.data.operator.ByteOperator$3:
    boolean check(byte,byte) -> check
org.andengine.util.adt.data.operator.ByteOperator$4 -> org.andengine.util.adt.data.operator.ByteOperator$4:
    boolean check(byte,byte) -> check
org.andengine.util.adt.data.operator.ByteOperator$5 -> org.andengine.util.adt.data.operator.ByteOperator$5:
    boolean check(byte,byte) -> check
org.andengine.util.adt.data.operator.ByteOperator$6 -> org.andengine.util.adt.data.operator.ByteOperator$6:
    boolean check(byte,byte) -> check
org.andengine.util.adt.data.operator.CharOperator -> org.andengine.util.adt.data.operator.CharOperator:
    org.andengine.util.adt.data.operator.CharOperator EQUALS -> EQUALS
    org.andengine.util.adt.data.operator.CharOperator NOT_EQUALS -> NOT_EQUALS
    org.andengine.util.adt.data.operator.CharOperator LESS_THAN -> LESS_THAN
    org.andengine.util.adt.data.operator.CharOperator LESS_OR_EQUAL_THAN -> LESS_OR_EQUAL_THAN
    org.andengine.util.adt.data.operator.CharOperator MORE_THAN -> MORE_THAN
    org.andengine.util.adt.data.operator.CharOperator MORE_OR_EQUAL_THAN -> MORE_OR_EQUAL_THAN
    org.andengine.util.adt.data.operator.CharOperator[] ENUM$VALUES -> ENUM$VALUES
    boolean check(char,char) -> check
    org.andengine.util.adt.data.operator.CharOperator[] values() -> values
    org.andengine.util.adt.data.operator.CharOperator valueOf(java.lang.String) -> valueOf
org.andengine.util.adt.data.operator.CharOperator$1 -> org.andengine.util.adt.data.operator.CharOperator$1:
    boolean check(char,char) -> check
org.andengine.util.adt.data.operator.CharOperator$2 -> org.andengine.util.adt.data.operator.CharOperator$2:
    boolean check(char,char) -> check
org.andengine.util.adt.data.operator.CharOperator$3 -> org.andengine.util.adt.data.operator.CharOperator$3:
    boolean check(char,char) -> check
org.andengine.util.adt.data.operator.CharOperator$4 -> org.andengine.util.adt.data.operator.CharOperator$4:
    boolean check(char,char) -> check
org.andengine.util.adt.data.operator.CharOperator$5 -> org.andengine.util.adt.data.operator.CharOperator$5:
    boolean check(char,char) -> check
org.andengine.util.adt.data.operator.CharOperator$6 -> org.andengine.util.adt.data.operator.CharOperator$6:
    boolean check(char,char) -> check
org.andengine.util.adt.data.operator.DoubleOperator -> org.andengine.util.adt.data.operator.DoubleOperator:
    org.andengine.util.adt.data.operator.DoubleOperator EQUALS -> EQUALS
    org.andengine.util.adt.data.operator.DoubleOperator NOT_EQUALS -> NOT_EQUALS
    org.andengine.util.adt.data.operator.DoubleOperator LESS_THAN -> LESS_THAN
    org.andengine.util.adt.data.operator.DoubleOperator LESS_OR_EQUAL_THAN -> LESS_OR_EQUAL_THAN
    org.andengine.util.adt.data.operator.DoubleOperator MORE_THAN -> MORE_THAN
    org.andengine.util.adt.data.operator.DoubleOperator MORE_OR_EQUAL_THAN -> MORE_OR_EQUAL_THAN
    org.andengine.util.adt.data.operator.DoubleOperator[] ENUM$VALUES -> ENUM$VALUES
    boolean check(double,double) -> check
    org.andengine.util.adt.data.operator.DoubleOperator[] values() -> values
    org.andengine.util.adt.data.operator.DoubleOperator valueOf(java.lang.String) -> valueOf
org.andengine.util.adt.data.operator.DoubleOperator$1 -> org.andengine.util.adt.data.operator.DoubleOperator$1:
    boolean check(double,double) -> check
org.andengine.util.adt.data.operator.DoubleOperator$2 -> org.andengine.util.adt.data.operator.DoubleOperator$2:
    boolean check(double,double) -> check
org.andengine.util.adt.data.operator.DoubleOperator$3 -> org.andengine.util.adt.data.operator.DoubleOperator$3:
    boolean check(double,double) -> check
org.andengine.util.adt.data.operator.DoubleOperator$4 -> org.andengine.util.adt.data.operator.DoubleOperator$4:
    boolean check(double,double) -> check
org.andengine.util.adt.data.operator.DoubleOperator$5 -> org.andengine.util.adt.data.operator.DoubleOperator$5:
    boolean check(double,double) -> check
org.andengine.util.adt.data.operator.DoubleOperator$6 -> org.andengine.util.adt.data.operator.DoubleOperator$6:
    boolean check(double,double) -> check
org.andengine.util.adt.data.operator.FloatOperator -> org.andengine.util.adt.data.operator.FloatOperator:
    org.andengine.util.adt.data.operator.FloatOperator EQUALS -> EQUALS
    org.andengine.util.adt.data.operator.FloatOperator NOT_EQUALS -> NOT_EQUALS
    org.andengine.util.adt.data.operator.FloatOperator LESS_THAN -> LESS_THAN
    org.andengine.util.adt.data.operator.FloatOperator LESS_OR_EQUAL_THAN -> LESS_OR_EQUAL_THAN
    org.andengine.util.adt.data.operator.FloatOperator MORE_THAN -> MORE_THAN
    org.andengine.util.adt.data.operator.FloatOperator MORE_OR_EQUAL_THAN -> MORE_OR_EQUAL_THAN
    org.andengine.util.adt.data.operator.FloatOperator[] ENUM$VALUES -> ENUM$VALUES
    boolean check(float,float) -> check
    org.andengine.util.adt.data.operator.FloatOperator[] values() -> values
    org.andengine.util.adt.data.operator.FloatOperator valueOf(java.lang.String) -> valueOf
org.andengine.util.adt.data.operator.FloatOperator$1 -> org.andengine.util.adt.data.operator.FloatOperator$1:
    boolean check(float,float) -> check
org.andengine.util.adt.data.operator.FloatOperator$2 -> org.andengine.util.adt.data.operator.FloatOperator$2:
    boolean check(float,float) -> check
org.andengine.util.adt.data.operator.FloatOperator$3 -> org.andengine.util.adt.data.operator.FloatOperator$3:
    boolean check(float,float) -> check
org.andengine.util.adt.data.operator.FloatOperator$4 -> org.andengine.util.adt.data.operator.FloatOperator$4:
    boolean check(float,float) -> check
org.andengine.util.adt.data.operator.FloatOperator$5 -> org.andengine.util.adt.data.operator.FloatOperator$5:
    boolean check(float,float) -> check
org.andengine.util.adt.data.operator.FloatOperator$6 -> org.andengine.util.adt.data.operator.FloatOperator$6:
    boolean check(float,float) -> check
org.andengine.util.adt.data.operator.IntOperator -> org.andengine.util.adt.data.operator.IntOperator:
    org.andengine.util.adt.data.operator.IntOperator EQUALS -> EQUALS
    org.andengine.util.adt.data.operator.IntOperator NOT_EQUALS -> NOT_EQUALS
    org.andengine.util.adt.data.operator.IntOperator LESS_THAN -> LESS_THAN
    org.andengine.util.adt.data.operator.IntOperator LESS_OR_EQUAL_THAN -> LESS_OR_EQUAL_THAN
    org.andengine.util.adt.data.operator.IntOperator MORE_THAN -> MORE_THAN
    org.andengine.util.adt.data.operator.IntOperator MORE_OR_EQUAL_THAN -> MORE_OR_EQUAL_THAN
    org.andengine.util.adt.data.operator.IntOperator[] ENUM$VALUES -> ENUM$VALUES
    boolean check(int,int) -> check
    org.andengine.util.adt.data.operator.IntOperator[] values() -> values
    org.andengine.util.adt.data.operator.IntOperator valueOf(java.lang.String) -> valueOf
org.andengine.util.adt.data.operator.IntOperator$1 -> org.andengine.util.adt.data.operator.IntOperator$1:
    boolean check(int,int) -> check
org.andengine.util.adt.data.operator.IntOperator$2 -> org.andengine.util.adt.data.operator.IntOperator$2:
    boolean check(int,int) -> check
org.andengine.util.adt.data.operator.IntOperator$3 -> org.andengine.util.adt.data.operator.IntOperator$3:
    boolean check(int,int) -> check
org.andengine.util.adt.data.operator.IntOperator$4 -> org.andengine.util.adt.data.operator.IntOperator$4:
    boolean check(int,int) -> check
org.andengine.util.adt.data.operator.IntOperator$5 -> org.andengine.util.adt.data.operator.IntOperator$5:
    boolean check(int,int) -> check
org.andengine.util.adt.data.operator.IntOperator$6 -> org.andengine.util.adt.data.operator.IntOperator$6:
    boolean check(int,int) -> check
org.andengine.util.adt.data.operator.LongOperator -> org.andengine.util.adt.data.operator.LongOperator:
    org.andengine.util.adt.data.operator.LongOperator EQUALS -> EQUALS
    org.andengine.util.adt.data.operator.LongOperator NOT_EQUALS -> NOT_EQUALS
    org.andengine.util.adt.data.operator.LongOperator LESS_THAN -> LESS_THAN
    org.andengine.util.adt.data.operator.LongOperator LESS_OR_EQUAL_THAN -> LESS_OR_EQUAL_THAN
    org.andengine.util.adt.data.operator.LongOperator MORE_THAN -> MORE_THAN
    org.andengine.util.adt.data.operator.LongOperator MORE_OR_EQUAL_THAN -> MORE_OR_EQUAL_THAN
    org.andengine.util.adt.data.operator.LongOperator[] ENUM$VALUES -> ENUM$VALUES
    boolean check(long,long) -> check
    org.andengine.util.adt.data.operator.LongOperator[] values() -> values
    org.andengine.util.adt.data.operator.LongOperator valueOf(java.lang.String) -> valueOf
org.andengine.util.adt.data.operator.LongOperator$1 -> org.andengine.util.adt.data.operator.LongOperator$1:
    boolean check(long,long) -> check
org.andengine.util.adt.data.operator.LongOperator$2 -> org.andengine.util.adt.data.operator.LongOperator$2:
    boolean check(long,long) -> check
org.andengine.util.adt.data.operator.LongOperator$3 -> org.andengine.util.adt.data.operator.LongOperator$3:
    boolean check(long,long) -> check
org.andengine.util.adt.data.operator.LongOperator$4 -> org.andengine.util.adt.data.operator.LongOperator$4:
    boolean check(long,long) -> check
org.andengine.util.adt.data.operator.LongOperator$5 -> org.andengine.util.adt.data.operator.LongOperator$5:
    boolean check(long,long) -> check
org.andengine.util.adt.data.operator.LongOperator$6 -> org.andengine.util.adt.data.operator.LongOperator$6:
    boolean check(long,long) -> check
org.andengine.util.adt.data.operator.ShortOperator -> org.andengine.util.adt.data.operator.ShortOperator:
    org.andengine.util.adt.data.operator.ShortOperator EQUALS -> EQUALS
    org.andengine.util.adt.data.operator.ShortOperator NOT_EQUALS -> NOT_EQUALS
    org.andengine.util.adt.data.operator.ShortOperator LESS_THAN -> LESS_THAN
    org.andengine.util.adt.data.operator.ShortOperator LESS_OR_EQUAL_THAN -> LESS_OR_EQUAL_THAN
    org.andengine.util.adt.data.operator.ShortOperator MORE_THAN -> MORE_THAN
    org.andengine.util.adt.data.operator.ShortOperator MORE_OR_EQUAL_THAN -> MORE_OR_EQUAL_THAN
    org.andengine.util.adt.data.operator.ShortOperator[] ENUM$VALUES -> ENUM$VALUES
    boolean check(short,short) -> check
    org.andengine.util.adt.data.operator.ShortOperator[] values() -> values
    org.andengine.util.adt.data.operator.ShortOperator valueOf(java.lang.String) -> valueOf
org.andengine.util.adt.data.operator.ShortOperator$1 -> org.andengine.util.adt.data.operator.ShortOperator$1:
    boolean check(short,short) -> check
org.andengine.util.adt.data.operator.ShortOperator$2 -> org.andengine.util.adt.data.operator.ShortOperator$2:
    boolean check(short,short) -> check
org.andengine.util.adt.data.operator.ShortOperator$3 -> org.andengine.util.adt.data.operator.ShortOperator$3:
    boolean check(short,short) -> check
org.andengine.util.adt.data.operator.ShortOperator$4 -> org.andengine.util.adt.data.operator.ShortOperator$4:
    boolean check(short,short) -> check
org.andengine.util.adt.data.operator.ShortOperator$5 -> org.andengine.util.adt.data.operator.ShortOperator$5:
    boolean check(short,short) -> check
org.andengine.util.adt.data.operator.ShortOperator$6 -> org.andengine.util.adt.data.operator.ShortOperator$6:
    boolean check(short,short) -> check
org.andengine.util.adt.data.operator.StringOperator -> org.andengine.util.adt.data.operator.StringOperator:
    org.andengine.util.adt.data.operator.StringOperator EQUALS -> EQUALS
    org.andengine.util.adt.data.operator.StringOperator EQUALS_IGNORE_CASE -> EQUALS_IGNORE_CASE
    org.andengine.util.adt.data.operator.StringOperator NOT_EQUALS -> NOT_EQUALS
    org.andengine.util.adt.data.operator.StringOperator NOT_EQUALS_IGNORE_CASE -> NOT_EQUALS_IGNORE_CASE
    org.andengine.util.adt.data.operator.StringOperator CONTAINS -> CONTAINS
    org.andengine.util.adt.data.operator.StringOperator NOT_CONTAINS -> NOT_CONTAINS
    org.andengine.util.adt.data.operator.StringOperator STARTS_WITH -> STARTS_WITH
    org.andengine.util.adt.data.operator.StringOperator NOT_STARTS_WITH -> NOT_STARTS_WITH
    org.andengine.util.adt.data.operator.StringOperator ENDS_WITH -> ENDS_WITH
    org.andengine.util.adt.data.operator.StringOperator NOT_ENDS_WITH -> NOT_ENDS_WITH
    org.andengine.util.adt.data.operator.StringOperator[] ENUM$VALUES -> ENUM$VALUES
    boolean check(java.lang.String,java.lang.String) -> check
    org.andengine.util.adt.data.operator.StringOperator[] values() -> values
    org.andengine.util.adt.data.operator.StringOperator valueOf(java.lang.String) -> valueOf
org.andengine.util.adt.data.operator.StringOperator$1 -> org.andengine.util.adt.data.operator.StringOperator$1:
    boolean check(java.lang.String,java.lang.String) -> check
org.andengine.util.adt.data.operator.StringOperator$10 -> org.andengine.util.adt.data.operator.StringOperator$10:
    boolean check(java.lang.String,java.lang.String) -> check
org.andengine.util.adt.data.operator.StringOperator$2 -> org.andengine.util.adt.data.operator.StringOperator$2:
    boolean check(java.lang.String,java.lang.String) -> check
org.andengine.util.adt.data.operator.StringOperator$3 -> org.andengine.util.adt.data.operator.StringOperator$3:
    boolean check(java.lang.String,java.lang.String) -> check
org.andengine.util.adt.data.operator.StringOperator$4 -> org.andengine.util.adt.data.operator.StringOperator$4:
    boolean check(java.lang.String,java.lang.String) -> check
org.andengine.util.adt.data.operator.StringOperator$5 -> org.andengine.util.adt.data.operator.StringOperator$5:
    boolean check(java.lang.String,java.lang.String) -> check
org.andengine.util.adt.data.operator.StringOperator$6 -> org.andengine.util.adt.data.operator.StringOperator$6:
    boolean check(java.lang.String,java.lang.String) -> check
org.andengine.util.adt.data.operator.StringOperator$7 -> org.andengine.util.adt.data.operator.StringOperator$7:
    boolean check(java.lang.String,java.lang.String) -> check
org.andengine.util.adt.data.operator.StringOperator$8 -> org.andengine.util.adt.data.operator.StringOperator$8:
    boolean check(java.lang.String,java.lang.String) -> check
org.andengine.util.adt.data.operator.StringOperator$9 -> org.andengine.util.adt.data.operator.StringOperator$9:
    boolean check(java.lang.String,java.lang.String) -> check
org.andengine.util.adt.io.in.AssetInputStreamOpener -> org.andengine.util.adt.io.in.AssetInputStreamOpener:
    android.content.res.AssetManager mAssetManager -> mAssetManager
    java.lang.String mAssetPath -> mAssetPath
    java.io.InputStream open() -> open
org.andengine.util.adt.io.in.ByteArrayInputStreamOpener -> org.andengine.util.adt.io.in.ByteArrayInputStreamOpener:
    byte[] mBytes -> mBytes
    int mOffset -> mOffset
    int mLength -> mLength
    java.io.InputStream open() -> open
org.andengine.util.adt.io.in.IInputStreamOpener -> org.andengine.util.adt.io.in.IInputStreamOpener:
    java.io.InputStream open() -> open
org.andengine.util.adt.io.in.ResourceInputStreamOpener -> org.andengine.util.adt.io.in.ResourceInputStreamOpener:
    android.content.res.Resources mResources -> mResources
    int mResourceID -> mResourceID
    java.io.InputStream open() -> open
org.andengine.util.adt.io.out.ByteBufferOutputStream -> org.andengine.util.adt.io.out.ByteBufferOutputStream:
    int mMaximumGrow -> mMaximumGrow
    byte[] mData -> mData
    int mCount -> mCount
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void ensureCapacity(int) -> ensureCapacity
    void grow(int) -> grow
    java.nio.ByteBuffer toByteBuffer() -> toByteBuffer
org.andengine.util.adt.list.CircularList -> org.andengine.util.adt.list.CircularList:
    int CAPACITY_INITIAL_DEFAULT -> CAPACITY_INITIAL_DEFAULT
    int INDEX_INVALID -> INDEX_INVALID
    java.lang.Object[] mItems -> mItems
    int mHead -> mHead
    int mSize -> mSize
    boolean isEmpty() -> isEmpty
    void add(java.lang.Object) -> add
    java.lang.Object get(int) -> get
    void set(int,java.lang.Object) -> set
    int indexOf(java.lang.Object) -> indexOf
    void add(int,java.lang.Object) -> add
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    boolean remove(java.lang.Object) -> remove
    java.lang.Object remove(int) -> remove
    int size() -> size
    void clear() -> clear
    void ensureCapacity() -> ensureCapacity
    int encodeToInternalIndex(int) -> encodeToInternalIndex
org.andengine.util.adt.list.FloatArrayList -> org.andengine.util.adt.list.FloatArrayList:
    int CAPACITY_INITIAL_DEFAULT -> CAPACITY_INITIAL_DEFAULT
    float[] mItems -> mItems
    int mSize -> mSize
    boolean isEmpty() -> isEmpty
    float get(int) -> get
    void add(float) -> add
    void add(int,float) -> add
    float remove(int) -> remove
    int size() -> size
    void clear() -> clear
    float[] toArray() -> toArray
    void ensureCapacity(int) -> ensureCapacity
org.andengine.util.adt.list.IFloatList -> org.andengine.util.adt.list.IFloatList:
    boolean isEmpty() -> isEmpty
    float get(int) -> get
    void add(float) -> add
    void add(int,float) -> add
    float remove(int) -> remove
    int size() -> size
    void clear() -> clear
    float[] toArray() -> toArray
org.andengine.util.adt.list.IIntList -> org.andengine.util.adt.list.IIntList:
    boolean isEmpty() -> isEmpty
    float get(int) -> get
    void add(int) -> add
    void add(int,int) -> add
    float remove(int) -> remove
    int size() -> size
    void clear() -> clear
    int[] toArray() -> toArray
org.andengine.util.adt.list.IList -> org.andengine.util.adt.list.IList:
    boolean isEmpty() -> isEmpty
    java.lang.Object get(int) -> get
    void set(int,java.lang.Object) -> set
    int indexOf(java.lang.Object) -> indexOf
    void add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object remove(int) -> remove
    int size() -> size
    void clear() -> clear
org.andengine.util.adt.list.ILongList -> org.andengine.util.adt.list.ILongList:
    boolean isEmpty() -> isEmpty
    float get(int) -> get
    void add(long) -> add
    void add(int,long) -> add
    float remove(int) -> remove
    int size() -> size
    void clear() -> clear
    long[] toArray() -> toArray
org.andengine.util.adt.list.ISortedList -> org.andengine.util.adt.list.ISortedList:
org.andengine.util.adt.list.IUniqueList -> org.andengine.util.adt.list.IUniqueList:
org.andengine.util.adt.list.IntArrayList -> org.andengine.util.adt.list.IntArrayList:
    int CAPACITY_INITIAL_DEFAULT -> CAPACITY_INITIAL_DEFAULT
    int[] mItems -> mItems
    int mSize -> mSize
    boolean isEmpty() -> isEmpty
    float get(int) -> get
    void add(int) -> add
    void add(int,int) -> add
    float remove(int) -> remove
    int size() -> size
    void clear() -> clear
    int[] toArray() -> toArray
    void ensureCapacity(int) -> ensureCapacity
org.andengine.util.adt.list.ListUtils -> org.andengine.util.adt.list.ListUtils:
    org.andengine.util.adt.queue.IQueue synchronizedQueue(org.andengine.util.adt.queue.IQueue) -> synchronizedQueue
    java.lang.Object random(java.util.List) -> random
    java.util.ArrayList toList(java.lang.Object) -> toList
    java.util.ArrayList toList(java.lang.Object[]) -> toList
    void swap(java.util.List,int,int) -> swap
    void swap(org.andengine.util.adt.list.IList,int,int) -> swap
    int encodeInsertionIndex(int) -> encodeInsertionIndex
org.andengine.util.adt.list.LongArrayList -> org.andengine.util.adt.list.LongArrayList:
    int CAPACITY_INITIAL_DEFAULT -> CAPACITY_INITIAL_DEFAULT
    long[] mItems -> mItems
    int mSize -> mSize
    boolean isEmpty() -> isEmpty
    float get(int) -> get
    void add(long) -> add
    void add(int,long) -> add
    float remove(int) -> remove
    int size() -> size
    void clear() -> clear
    long[] toArray() -> toArray
    void ensureCapacity(int) -> ensureCapacity
org.andengine.util.adt.list.ShiftList -> org.andengine.util.adt.list.ShiftList:
    int CAPACITY_INITIAL_DEFAULT -> CAPACITY_INITIAL_DEFAULT
    int INDEX_INVALID -> INDEX_INVALID
    java.lang.Object[] mItems -> mItems
    int mHead -> mHead
    int mTail -> mTail
    boolean isEmpty() -> isEmpty
    java.lang.Object get(int) -> get
    void set(int,java.lang.Object) -> set
    int indexOf(java.lang.Object) -> indexOf
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    void enter(java.lang.Object) -> enter
    void enter(int,java.lang.Object) -> enter
    void enterShiftingRight(int,java.lang.Object,int) -> enterShiftingRight
    void enterShiftingLeft(int,java.lang.Object) -> enterShiftingLeft
    void add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    boolean remove(java.lang.Object) -> remove
    java.lang.Object remove(int) -> remove
    int size() -> size
    void clear() -> clear
    void shift() -> shift
    void ensureShiftableRight() -> ensureShiftableRight
    void ensureShiftableLeft() -> ensureShiftableLeft
org.andengine.util.adt.list.SmartList -> org.andengine.util.adt.list.SmartList:
    long serialVersionUID -> serialVersionUID
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object get(org.andengine.util.IMatcher) -> get
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    boolean remove(java.lang.Object,org.andengine.util.call.ParameterCallable) -> remove
    java.lang.Object remove(org.andengine.util.IMatcher) -> remove
    java.lang.Object remove(org.andengine.util.IMatcher,org.andengine.util.call.ParameterCallable) -> remove
    boolean removeAll(org.andengine.util.IMatcher) -> removeAll
    boolean removeAll(org.andengine.util.IMatcher,org.andengine.util.call.ParameterCallable) -> removeAll
    void clear(org.andengine.util.call.ParameterCallable) -> clear
    int indexOf(org.andengine.util.IMatcher) -> indexOf
    int lastIndexOf(org.andengine.util.IMatcher) -> lastIndexOf
    java.util.ArrayList query(org.andengine.util.IMatcher) -> query
    java.util.List query(org.andengine.util.IMatcher,java.util.List) -> query
    java.util.ArrayList queryForSubclass(org.andengine.util.IMatcher) -> queryForSubclass
    java.util.List queryForSubclass(org.andengine.util.IMatcher,java.util.List) -> queryForSubclass
    void call(org.andengine.util.call.ParameterCallable) -> call
    void call(org.andengine.util.IMatcher,org.andengine.util.call.ParameterCallable) -> call
org.andengine.util.adt.list.SortedList -> org.andengine.util.adt.list.SortedList:
    int INDEX_INVALID -> INDEX_INVALID
    org.andengine.util.adt.list.IList mList -> mList
    boolean isEmpty() -> isEmpty
    java.lang.Comparable get(int) -> get
    void set(int,java.lang.Comparable) -> set
    int indexOf(java.lang.Comparable) -> indexOf
    void add(int,java.lang.Comparable) -> add
    void add(java.lang.Comparable) -> add
    java.lang.Comparable removeFirst() -> removeFirst
    java.lang.Comparable removeLast() -> removeLast
    boolean remove(java.lang.Comparable) -> remove
    java.lang.Comparable remove(int) -> remove
    int size() -> size
    void clear() -> clear
    int binarySearch(java.lang.Comparable,boolean) -> binarySearch
    int binarySearch(int,int,java.lang.Comparable) -> binarySearch
    int scanForEqualItem(int,int,int,java.lang.Comparable,boolean) -> scanForEqualItem
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    void add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    java.lang.Object removeFirst() -> removeFirst
    void set(int,java.lang.Object) -> set
    java.lang.Object remove(int) -> remove
    boolean remove(java.lang.Object) -> remove
    java.lang.Object removeLast() -> removeLast
org.andengine.util.adt.list.UniqueList -> org.andengine.util.adt.list.UniqueList:
    org.andengine.util.adt.list.IList mList -> mList
    boolean isEmpty() -> isEmpty
    java.lang.Comparable get(int) -> get
    void set(int,java.lang.Comparable) -> set
    int indexOf(java.lang.Comparable) -> indexOf
    void add(int,java.lang.Comparable) -> add
    void add(java.lang.Comparable) -> add
    java.lang.Comparable removeFirst() -> removeFirst
    java.lang.Comparable removeLast() -> removeLast
    boolean remove(java.lang.Comparable) -> remove
    java.lang.Comparable remove(int) -> remove
    int size() -> size
    void clear() -> clear
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    void add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    java.lang.Object removeFirst() -> removeFirst
    void set(int,java.lang.Object) -> set
    java.lang.Object remove(int) -> remove
    boolean remove(java.lang.Object) -> remove
    java.lang.Object removeLast() -> removeLast
org.andengine.util.adt.list.concurrent.SynchronizedList -> org.andengine.util.adt.list.concurrent.SynchronizedList:
    org.andengine.util.adt.list.IList mList -> mList
    boolean isEmpty() -> isEmpty
    java.lang.Object get(int) -> get
    void set(int,java.lang.Object) -> set
    int indexOf(java.lang.Object) -> indexOf
    void add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    boolean remove(java.lang.Object) -> remove
    java.lang.Object remove(int) -> remove
    int size() -> size
    void clear() -> clear
org.andengine.util.adt.map.Library -> org.andengine.util.adt.map.Library:
    android.util.SparseArray mItems -> mItems
    java.lang.Object get(int) -> get
    void put(int,java.lang.Object) -> put
    void remove(int) -> remove
    void clear() -> clear
org.andengine.util.adt.map.LongSparseArray -> org.andengine.util.adt.map.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    long[] getKeys() -> getKeys
    void setValues(long[],java.lang.Object) -> setValues
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    int binarySearch(long[],int,int,long) -> binarySearch
    void checkIntegrity() -> checkIntegrity
org.andengine.util.adt.map.MultiKey -> org.andengine.util.adt.map.MultiKey:
    java.lang.Object[] mKeys -> mKeys
    int mCachedHashCode -> mCachedHashCode
    java.lang.Object[] getKeys() -> getKeys
    boolean equals(java.lang.Object) -> equals
    int hash(java.lang.Object[]) -> hash
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object getKey(int) -> getKey
    int size() -> size
org.andengine.util.adt.map.MultiKeyHashMap -> org.andengine.util.adt.map.MultiKeyHashMap:
    long serialVersionUID -> serialVersionUID
    java.lang.Object get(java.lang.Object[]) -> get
    boolean isEqualKey(java.lang.Object[],java.lang.Object[]) -> isEqualKey
org.andengine.util.adt.map.SparseArrayUtils -> org.andengine.util.adt.map.SparseArrayUtils:
    java.lang.String toString(android.util.SparseArray) -> toString
    java.lang.String toString(android.util.SparseIntArray) -> toString
    java.lang.String toString(android.util.SparseBooleanArray) -> toString
    java.lang.String toString(org.andengine.util.adt.map.LongSparseArray) -> toString
org.andengine.util.adt.pool.EntityDetachRunnablePoolItem -> org.andengine.util.adt.pool.EntityDetachRunnablePoolItem:
    org.andengine.entity.IEntity mEntity -> mEntity
    org.andengine.util.call.Callback mCallback -> mCallback
    void setEntity(org.andengine.entity.IEntity) -> setEntity
    void setCallback(org.andengine.util.call.Callback) -> setCallback
    void run() -> run
org.andengine.util.adt.pool.EntityDetachRunnablePoolUpdateHandler -> org.andengine.util.adt.pool.EntityDetachRunnablePoolUpdateHandler:
    org.andengine.util.adt.pool.EntityDetachRunnablePoolItem onAllocatePoolItem() -> onAllocatePoolItem
    void scheduleDetach(org.andengine.entity.IEntity) -> scheduleDetach
    void scheduleDetach(org.andengine.entity.IEntity,org.andengine.util.call.Callback) -> scheduleDetach
    org.andengine.util.adt.pool.RunnablePoolItem onAllocatePoolItem() -> onAllocatePoolItem
org.andengine.util.adt.pool.GenericPool -> org.andengine.util.adt.pool.GenericPool:
    java.util.ArrayList mAvailableItems -> mAvailableItems
    int mGrowth -> mGrowth
    int mAvailableItemCountMaximum -> mAvailableItemCountMaximum
    int mUnrecycledItemCount -> mUnrecycledItemCount
    int getUnrecycledItemCount() -> getUnrecycledItemCount
    int getAvailableItemCount() -> getAvailableItemCount
    int getAvailableItemCountMaximum() -> getAvailableItemCountMaximum
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
    void onHandleRecycleItem(java.lang.Object) -> onHandleRecycleItem
    java.lang.Object onHandleAllocatePoolItem() -> onHandleAllocatePoolItem
    void onHandleObtainItem(java.lang.Object) -> onHandleObtainItem
    void batchAllocatePoolItems(int) -> batchAllocatePoolItems
    java.lang.Object obtainPoolItem() -> obtainPoolItem
    void recyclePoolItem(java.lang.Object) -> recyclePoolItem
    void shufflePoolItems() -> shufflePoolItems
org.andengine.util.adt.pool.MultiPool -> org.andengine.util.adt.pool.MultiPool:
    android.util.SparseArray mPools -> mPools
    void registerPool(int,org.andengine.util.adt.pool.GenericPool) -> registerPool
    java.lang.Object obtainPoolItem(int) -> obtainPoolItem
    void recyclePoolItem(int,java.lang.Object) -> recyclePoolItem
org.andengine.util.adt.pool.Pool -> org.andengine.util.adt.pool.Pool:
    org.andengine.util.adt.pool.PoolItem onHandleAllocatePoolItem() -> onHandleAllocatePoolItem
    void onHandleObtainItem(org.andengine.util.adt.pool.PoolItem) -> onHandleObtainItem
    void onHandleRecycleItem(org.andengine.util.adt.pool.PoolItem) -> onHandleRecycleItem
    void recyclePoolItem(org.andengine.util.adt.pool.PoolItem) -> recyclePoolItem
    boolean ownsPoolItem(org.andengine.util.adt.pool.PoolItem) -> ownsPoolItem
    void recycle(org.andengine.util.adt.pool.PoolItem) -> recycle
    java.lang.Object onHandleAllocatePoolItem() -> onHandleAllocatePoolItem
    void onHandleRecycleItem(java.lang.Object) -> onHandleRecycleItem
    void onHandleObtainItem(java.lang.Object) -> onHandleObtainItem
    void recyclePoolItem(java.lang.Object) -> recyclePoolItem
org.andengine.util.adt.pool.PoolItem -> org.andengine.util.adt.pool.PoolItem:
    org.andengine.util.adt.pool.Pool mParent -> mParent
    boolean mRecycled -> mRecycled
    org.andengine.util.adt.pool.Pool getParent() -> getParent
    boolean isRecycled() -> isRecycled
    boolean isFromPool(org.andengine.util.adt.pool.Pool) -> isFromPool
    void onRecycle() -> onRecycle
    void onObtain() -> onObtain
    void recycle() -> recycle
org.andengine.util.adt.pool.PoolUpdateHandler -> org.andengine.util.adt.pool.PoolUpdateHandler:
    org.andengine.util.adt.pool.Pool mPool -> mPool
    org.andengine.util.adt.queue.IQueue mScheduledPoolItemQueue -> mScheduledPoolItemQueue
    org.andengine.util.adt.pool.PoolItem onAllocatePoolItem() -> onAllocatePoolItem
    void onHandlePoolItem(org.andengine.util.adt.pool.PoolItem) -> onHandlePoolItem
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    org.andengine.util.adt.pool.PoolItem obtainPoolItem() -> obtainPoolItem
    void postPoolItem(org.andengine.util.adt.pool.PoolItem) -> postPoolItem
org.andengine.util.adt.pool.PoolUpdateHandler$1 -> org.andengine.util.adt.pool.PoolUpdateHandler$1:
    org.andengine.util.adt.pool.PoolUpdateHandler this$0 -> this$0
    org.andengine.util.adt.pool.PoolItem onAllocatePoolItem() -> onAllocatePoolItem
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
org.andengine.util.adt.pool.PoolUpdateHandler$2 -> org.andengine.util.adt.pool.PoolUpdateHandler$2:
    org.andengine.util.adt.pool.PoolUpdateHandler this$0 -> this$0
    org.andengine.util.adt.pool.PoolItem onAllocatePoolItem() -> onAllocatePoolItem
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
org.andengine.util.adt.pool.PoolUpdateHandler$3 -> org.andengine.util.adt.pool.PoolUpdateHandler$3:
    org.andengine.util.adt.pool.PoolUpdateHandler this$0 -> this$0
    org.andengine.util.adt.pool.PoolItem onAllocatePoolItem() -> onAllocatePoolItem
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
org.andengine.util.adt.pool.PoolUpdateHandler$4 -> org.andengine.util.adt.pool.PoolUpdateHandler$4:
    org.andengine.util.adt.pool.PoolUpdateHandler this$0 -> this$0
    org.andengine.util.adt.pool.PoolItem onAllocatePoolItem() -> onAllocatePoolItem
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
org.andengine.util.adt.pool.RunnablePoolItem -> org.andengine.util.adt.pool.RunnablePoolItem:
org.andengine.util.adt.pool.RunnablePoolUpdateHandler -> org.andengine.util.adt.pool.RunnablePoolUpdateHandler:
    org.andengine.util.adt.pool.RunnablePoolItem onAllocatePoolItem() -> onAllocatePoolItem
    void onHandlePoolItem(org.andengine.util.adt.pool.RunnablePoolItem) -> onHandlePoolItem
    void onHandlePoolItem(org.andengine.util.adt.pool.PoolItem) -> onHandlePoolItem
    org.andengine.util.adt.pool.PoolItem onAllocatePoolItem() -> onAllocatePoolItem
org.andengine.util.adt.queue.CircularQueue -> org.andengine.util.adt.queue.CircularQueue:
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    void enter(java.lang.Object) -> enter
    void enter(int,java.lang.Object) -> enter
org.andengine.util.adt.queue.IQueue -> org.andengine.util.adt.queue.IQueue:
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    void enter(java.lang.Object) -> enter
    void enter(int,java.lang.Object) -> enter
org.andengine.util.adt.queue.ISortedQueue -> org.andengine.util.adt.queue.ISortedQueue:
org.andengine.util.adt.queue.IUniqueQueue -> org.andengine.util.adt.queue.IUniqueQueue:
org.andengine.util.adt.queue.ShiftQueue -> org.andengine.util.adt.queue.ShiftQueue:
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    void enter(java.lang.Object) -> enter
    void enter(int,java.lang.Object) -> enter
org.andengine.util.adt.queue.SortedQueue -> org.andengine.util.adt.queue.SortedQueue:
    java.lang.Comparable peek() -> peek
    java.lang.Comparable poll() -> poll
    void enter(java.lang.Comparable) -> enter
    void enter(int,java.lang.Comparable) -> enter
    java.lang.Object poll() -> poll
    java.lang.Object peek() -> peek
    void enter(int,java.lang.Object) -> enter
    void enter(java.lang.Object) -> enter
org.andengine.util.adt.queue.UniqueQueue -> org.andengine.util.adt.queue.UniqueQueue:
    java.lang.Comparable peek() -> peek
    java.lang.Comparable poll() -> poll
    void enter(java.lang.Comparable) -> enter
    void enter(int,java.lang.Comparable) -> enter
    java.lang.Object poll() -> poll
    java.lang.Object peek() -> peek
    void enter(int,java.lang.Object) -> enter
    void enter(java.lang.Object) -> enter
org.andengine.util.adt.queue.concurrent.SynchronizedQueue -> org.andengine.util.adt.queue.concurrent.SynchronizedQueue:
    org.andengine.util.adt.queue.IQueue mQueue -> mQueue
    boolean isEmpty() -> isEmpty
    java.lang.Object get(int) -> get
    void set(int,java.lang.Object) -> set
    int indexOf(java.lang.Object) -> indexOf
    void add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    void enter(java.lang.Object) -> enter
    void enter(int,java.lang.Object) -> enter
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    boolean remove(java.lang.Object) -> remove
    java.lang.Object remove(int) -> remove
    int size() -> size
    void clear() -> clear
org.andengine.util.adt.spatial.ISpatialItem -> org.andengine.util.adt.spatial.ISpatialItem:
    org.andengine.util.adt.bounds.IBounds getBounds() -> getBounds
org.andengine.util.adt.spatial.bounds.util.FloatBoundsUtils -> org.andengine.util.adt.spatial.bounds.util.FloatBoundsUtils:
    boolean intersects(org.andengine.util.adt.bounds.IFloatBounds,org.andengine.util.adt.bounds.IFloatBounds) -> intersects
    boolean intersects(float,float,float,float,float,float,float,float) -> intersects
    boolean contains(org.andengine.util.adt.bounds.IFloatBounds,float,float) -> contains
    boolean contains(org.andengine.util.adt.bounds.IFloatBounds,org.andengine.util.adt.bounds.IFloatBounds) -> contains
    boolean contains(org.andengine.util.adt.bounds.IFloatBounds,float,float,float,float) -> contains
    boolean contains(float,float,float,float,float,float) -> contains
    boolean contains(float,float,float,float,float,float,float,float) -> contains
org.andengine.util.adt.spatial.bounds.util.IntBoundsUtils -> org.andengine.util.adt.spatial.bounds.util.IntBoundsUtils:
    boolean intersects(org.andengine.util.adt.bounds.IIntBounds,org.andengine.util.adt.bounds.IIntBounds) -> intersects
    boolean intersects(int,int,int,int,int,int,int,int) -> intersects
    boolean contains(org.andengine.util.adt.bounds.IIntBounds,org.andengine.util.adt.bounds.IIntBounds) -> contains
    boolean contains(org.andengine.util.adt.bounds.IIntBounds,int,int) -> contains
    boolean contains(org.andengine.util.adt.bounds.IIntBounds,int,int,int,int) -> contains
    boolean contains(int,int,int,int,int,int) -> contains
    boolean contains(int,int,int,int,int,int,int,int) -> contains
    boolean adjacent(org.andengine.util.adt.bounds.IIntBounds,org.andengine.util.adt.bounds.IIntBounds) -> adjacent
    boolean adjacent(int,int,int,int,int,int,int,int) -> adjacent
org.andengine.util.adt.spatial.quadtree.FloatQuadTree -> org.andengine.util.adt.spatial.quadtree.FloatQuadTree:
    org.andengine.util.adt.bounds.FloatBounds mQueryFloatBounds -> mQueryFloatBounds
    org.andengine.util.adt.spatial.quadtree.FloatQuadTree$FloatQuadTreeNode initRoot(org.andengine.util.adt.bounds.IFloatBounds) -> initRoot
    float getXMin() -> getXMin
    float getYMin() -> getYMin
    float getXMax() -> getXMax
    float getYMax() -> getYMax
    org.andengine.util.adt.spatial.quadtree.FloatQuadTree$FloatQuadTreeNode getRoot() -> getRoot
    java.util.ArrayList query(float,float) -> query
    java.util.List query(float,float,java.util.List) -> query
    java.util.ArrayList query(float,float,org.andengine.util.IMatcher) -> query
    java.util.List query(float,float,org.andengine.util.IMatcher,java.util.List) -> query
    java.util.ArrayList query(float,float,float,float) -> query
    java.util.List query(float,float,float,float,java.util.List) -> query
    java.util.ArrayList query(float,float,float,float,org.andengine.util.IMatcher) -> query
    java.util.List query(float,float,float,float,org.andengine.util.IMatcher,java.util.List) -> query
    java.util.List queryForSubclass(float,float,org.andengine.util.IMatcher,java.util.List) -> queryForSubclass
    java.util.List queryForSubclass(float,float,float,float,org.andengine.util.IMatcher,java.util.List) -> queryForSubclass
    boolean containsAny(float,float) -> containsAny
    boolean containsAny(float,float,float,float) -> containsAny
    boolean containsAny(float,float,org.andengine.util.IMatcher) -> containsAny
    boolean containsAny(float,float,float,float,org.andengine.util.IMatcher) -> containsAny
    org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode getRoot() -> getRoot
    org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode initRoot(org.andengine.util.adt.bounds.IBounds) -> initRoot
org.andengine.util.adt.spatial.quadtree.FloatQuadTree$FloatQuadTreeNode -> org.andengine.util.adt.spatial.quadtree.FloatQuadTree$FloatQuadTreeNode:
    float mXMin -> mXMin
    float mYMin -> mYMin
    float mXMax -> mXMax
    float mYMax -> mYMax
    org.andengine.util.adt.spatial.quadtree.FloatQuadTree this$0 -> this$0
    int[] $SWITCH_TABLE$org$andengine$util$adt$bounds$BoundsSplit -> $SWITCH_TABLE$org$andengine$util$adt$bounds$BoundsSplit
    float getXMin() -> getXMin
    float getYMin() -> getYMin
    float getXMax() -> getXMax
    float getYMax() -> getYMax
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    org.andengine.util.adt.spatial.quadtree.FloatQuadTree$FloatQuadTreeNode split(org.andengine.util.adt.bounds.BoundsSplit) -> split
    boolean contains(org.andengine.util.adt.bounds.IFloatBounds) -> contains
    boolean contains(org.andengine.util.adt.bounds.BoundsSplit,org.andengine.util.adt.bounds.IFloatBounds) -> contains
    boolean intersects(org.andengine.util.adt.bounds.IFloatBounds) -> intersects
    boolean intersects(org.andengine.util.adt.bounds.IFloatBounds,org.andengine.util.adt.bounds.IFloatBounds) -> intersects
    boolean containedBy(org.andengine.util.adt.bounds.IFloatBounds) -> containedBy
    void appendBoundsToString(java.lang.StringBuilder) -> appendBoundsToString
    float getXMin(org.andengine.util.adt.bounds.BoundsSplit) -> getXMin
    float getYMin(org.andengine.util.adt.bounds.BoundsSplit) -> getYMin
    float getXMax(org.andengine.util.adt.bounds.BoundsSplit) -> getXMax
    float getYMax(org.andengine.util.adt.bounds.BoundsSplit) -> getYMax
    boolean intersects(float,float,float,float) -> intersects
    boolean contains(float,float,float,float) -> contains
    boolean contains(org.andengine.util.adt.bounds.BoundsSplit,org.andengine.util.adt.bounds.IBounds) -> contains
    boolean contains(org.andengine.util.adt.bounds.IBounds) -> contains
    boolean containedBy(org.andengine.util.adt.bounds.IBounds) -> containedBy
    boolean intersects(org.andengine.util.adt.bounds.IBounds,org.andengine.util.adt.bounds.IBounds) -> intersects
    boolean intersects(org.andengine.util.adt.bounds.IBounds) -> intersects
    org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode split(org.andengine.util.adt.bounds.BoundsSplit) -> split
    int[] $SWITCH_TABLE$org$andengine$util$adt$bounds$BoundsSplit() -> $SWITCH_TABLE$org$andengine$util$adt$bounds$BoundsSplit
org.andengine.util.adt.spatial.quadtree.IntQuadTree -> org.andengine.util.adt.spatial.quadtree.IntQuadTree:
    org.andengine.util.adt.bounds.IntBounds mQueryIntBounds -> mQueryIntBounds
    org.andengine.util.adt.spatial.quadtree.IntQuadTree$IntQuadTreeNode initRoot(org.andengine.util.adt.bounds.IIntBounds) -> initRoot
    int getXMin() -> getXMin
    int getYMin() -> getYMin
    int getXMax() -> getXMax
    int getYMax() -> getYMax
    org.andengine.util.adt.spatial.quadtree.IntQuadTree$IntQuadTreeNode getRoot() -> getRoot
    java.util.ArrayList query(int,int) -> query
    java.util.List query(int,int,java.util.List) -> query
    java.util.ArrayList query(int,int,org.andengine.util.IMatcher) -> query
    java.util.List query(int,int,org.andengine.util.IMatcher,java.util.List) -> query
    java.util.ArrayList query(int,int,int,int) -> query
    java.util.List query(int,int,int,int,java.util.List) -> query
    java.util.ArrayList query(int,int,int,int,org.andengine.util.IMatcher) -> query
    java.util.List query(int,int,int,int,org.andengine.util.IMatcher,java.util.List) -> query
    java.util.List queryForSubclass(int,int,org.andengine.util.IMatcher,java.util.List) -> queryForSubclass
    java.util.List queryForSubclass(int,int,int,int,org.andengine.util.IMatcher,java.util.List) -> queryForSubclass
    boolean containsAny(int,int) -> containsAny
    boolean containsAny(int,int,int,int) -> containsAny
    boolean containsAny(int,int,org.andengine.util.IMatcher) -> containsAny
    boolean containsAny(int,int,int,int,org.andengine.util.IMatcher) -> containsAny
    org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode getRoot() -> getRoot
    org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode initRoot(org.andengine.util.adt.bounds.IBounds) -> initRoot
org.andengine.util.adt.spatial.quadtree.IntQuadTree$IntQuadTreeNode -> org.andengine.util.adt.spatial.quadtree.IntQuadTree$IntQuadTreeNode:
    int mXMin -> mXMin
    int mYMin -> mYMin
    int mXMax -> mXMax
    int mYMax -> mYMax
    org.andengine.util.adt.spatial.quadtree.IntQuadTree this$0 -> this$0
    int[] $SWITCH_TABLE$org$andengine$util$adt$bounds$BoundsSplit -> $SWITCH_TABLE$org$andengine$util$adt$bounds$BoundsSplit
    int getXMin() -> getXMin
    int getYMin() -> getYMin
    int getXMax() -> getXMax
    int getYMax() -> getYMax
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    org.andengine.util.adt.spatial.quadtree.IntQuadTree$IntQuadTreeNode split(org.andengine.util.adt.bounds.BoundsSplit) -> split
    boolean contains(org.andengine.util.adt.bounds.IIntBounds) -> contains
    boolean contains(org.andengine.util.adt.bounds.BoundsSplit,org.andengine.util.adt.bounds.IIntBounds) -> contains
    boolean intersects(org.andengine.util.adt.bounds.IIntBounds) -> intersects
    boolean intersects(org.andengine.util.adt.bounds.IIntBounds,org.andengine.util.adt.bounds.IIntBounds) -> intersects
    boolean containedBy(org.andengine.util.adt.bounds.IIntBounds) -> containedBy
    void appendBoundsToString(java.lang.StringBuilder) -> appendBoundsToString
    int getXMin(org.andengine.util.adt.bounds.BoundsSplit) -> getXMin
    int getYMin(org.andengine.util.adt.bounds.BoundsSplit) -> getYMin
    int getXMax(org.andengine.util.adt.bounds.BoundsSplit) -> getXMax
    int getYMax(org.andengine.util.adt.bounds.BoundsSplit) -> getYMax
    boolean intersects(int,int,int,int) -> intersects
    boolean contains(int,int,int,int) -> contains
    boolean contains(org.andengine.util.adt.bounds.BoundsSplit,org.andengine.util.adt.bounds.IBounds) -> contains
    boolean contains(org.andengine.util.adt.bounds.IBounds) -> contains
    boolean containedBy(org.andengine.util.adt.bounds.IBounds) -> containedBy
    boolean intersects(org.andengine.util.adt.bounds.IBounds,org.andengine.util.adt.bounds.IBounds) -> intersects
    boolean intersects(org.andengine.util.adt.bounds.IBounds) -> intersects
    org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode split(org.andengine.util.adt.bounds.BoundsSplit) -> split
    int[] $SWITCH_TABLE$org$andengine$util$adt$bounds$BoundsSplit() -> $SWITCH_TABLE$org$andengine$util$adt$bounds$BoundsSplit
org.andengine.util.adt.spatial.quadtree.QuadTree -> org.andengine.util.adt.spatial.quadtree.QuadTree:
    int LEVEL_ROOT -> LEVEL_ROOT
    int LEVEL_MAX_DEFAULT -> LEVEL_MAX_DEFAULT
    org.andengine.util.adt.bounds.IBounds mBounds -> mBounds
    org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode mRoot -> mRoot
    int mMaxLevel -> mMaxLevel
    org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode initRoot(org.andengine.util.adt.bounds.IBounds) -> initRoot
    int getMaxLevel() -> getMaxLevel
    org.andengine.util.adt.bounds.IBounds getBounds() -> getBounds
    org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode getRoot() -> getRoot
    java.lang.String toString() -> toString
    int getItemCount() -> getItemCount
    boolean isEmpty() -> isEmpty
    void add(org.andengine.util.adt.spatial.ISpatialItem) -> add
    void addAll(org.andengine.util.adt.spatial.ISpatialItem[]) -> addAll
    void addAll(java.util.ArrayList) -> addAll
    void addAll(java.util.Collection) -> addAll
    void add(org.andengine.util.adt.spatial.ISpatialItem,org.andengine.util.adt.bounds.IBounds) -> add
    void move(org.andengine.util.adt.spatial.ISpatialItem,org.andengine.util.adt.bounds.IBounds) -> move
    void move(org.andengine.util.adt.spatial.ISpatialItem,org.andengine.util.adt.bounds.IBounds,org.andengine.util.adt.bounds.IBounds) -> move
    boolean remove(org.andengine.util.adt.spatial.ISpatialItem) -> remove
    boolean remove(org.andengine.util.adt.spatial.ISpatialItem,org.andengine.util.adt.bounds.IBounds) -> remove
    java.util.ArrayList query(org.andengine.util.adt.bounds.IBounds) -> query
    java.util.List query(org.andengine.util.adt.bounds.IBounds,java.util.List) -> query
    java.util.ArrayList query(org.andengine.util.adt.bounds.IBounds,org.andengine.util.IMatcher) -> query
    java.util.List query(org.andengine.util.adt.bounds.IBounds,org.andengine.util.IMatcher,java.util.List) -> query
    java.util.List queryForSubclass(org.andengine.util.adt.bounds.IBounds,org.andengine.util.IMatcher,java.util.List) -> queryForSubclass
    boolean containsAny(org.andengine.util.adt.bounds.IBounds) -> containsAny
    boolean containsAny(org.andengine.util.adt.bounds.IBounds,org.andengine.util.IMatcher) -> containsAny
    void callItems(org.andengine.util.call.ParameterCallable) -> callItems
    void callNodes(org.andengine.util.call.ParameterCallable) -> callNodes
    void clear() -> clear
org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode -> org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode:
    int mLevel -> mLevel
    java.util.List mItems -> mItems
    org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode mTopLeftChild -> mTopLeftChild
    org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode mTopRightChild -> mTopRightChild
    org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode mBottomLeftChild -> mBottomLeftChild
    org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode mBottomRightChild -> mBottomRightChild
    org.andengine.util.adt.spatial.quadtree.QuadTree this$0 -> this$0
    boolean hasChildren() -> hasChildren
    java.util.List getItems() -> getItems
    boolean contains(org.andengine.util.adt.bounds.IBounds) -> contains
    boolean contains(org.andengine.util.adt.bounds.BoundsSplit,org.andengine.util.adt.bounds.IBounds) -> contains
    boolean containedBy(org.andengine.util.adt.bounds.IBounds) -> containedBy
    boolean intersects(org.andengine.util.adt.bounds.IBounds) -> intersects
    boolean intersects(org.andengine.util.adt.bounds.IBounds,org.andengine.util.adt.bounds.IBounds) -> intersects
    org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode split(org.andengine.util.adt.bounds.BoundsSplit) -> split
    void appendBoundsToString(java.lang.StringBuilder) -> appendBoundsToString
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    int getItemCount() -> getItemCount
    void callItems(org.andengine.util.call.ParameterCallable) -> callItems
    void callNodes(org.andengine.util.call.ParameterCallable) -> callNodes
    java.util.ArrayList getItemsAndItemsBelow() -> getItemsAndItemsBelow
    java.util.List getItemsAndItemsBelow(java.util.List) -> getItemsAndItemsBelow
    java.util.ArrayList getItemsAndItemsBelow(org.andengine.util.IMatcher) -> getItemsAndItemsBelow
    java.util.List getItemsAndItemsBelow(org.andengine.util.IMatcher,java.util.List) -> getItemsAndItemsBelow
    java.util.List getItemsAndItemsBelowForSubclass(org.andengine.util.IMatcher,java.util.List) -> getItemsAndItemsBelowForSubclass
    java.util.ArrayList query(org.andengine.util.adt.bounds.IBounds) -> query
    java.util.List query(org.andengine.util.adt.bounds.IBounds,java.util.List) -> query
    java.util.List query(org.andengine.util.adt.bounds.IBounds,org.andengine.util.IMatcher,java.util.List) -> query
    java.util.List queryForSubclass(org.andengine.util.adt.bounds.IBounds,org.andengine.util.IMatcher,java.util.List) -> queryForSubclass
    boolean queryChild(org.andengine.util.adt.bounds.IBounds,java.util.List,org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode) -> queryChild
    boolean queryChild(org.andengine.util.adt.bounds.IBounds,org.andengine.util.IMatcher,java.util.List,org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode) -> queryChild
    boolean queryChildForSubclass(org.andengine.util.adt.bounds.IBounds,org.andengine.util.IMatcher,java.util.List,org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode) -> queryChildForSubclass
    boolean containsAny(org.andengine.util.adt.bounds.IBounds,org.andengine.util.IMatcher) -> containsAny
    boolean containsAny(org.andengine.util.adt.bounds.IBounds) -> containsAny
    boolean containsAnyChild(org.andengine.util.adt.bounds.IBounds,org.andengine.util.IMatcher,org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode) -> containsAnyChild
    boolean containsAnyChild(org.andengine.util.adt.bounds.IBounds,org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode) -> containsAnyChild
    void add(org.andengine.util.adt.spatial.ISpatialItem,org.andengine.util.adt.bounds.IBounds) -> add
    boolean remove(org.andengine.util.adt.spatial.ISpatialItem) -> remove
    boolean remove(org.andengine.util.adt.spatial.ISpatialItem,org.andengine.util.adt.bounds.IBounds) -> remove
    void addItemSafe(org.andengine.util.adt.spatial.ISpatialItem) -> addItemSafe
    void clear() -> clear
    void access$0(org.andengine.util.adt.spatial.quadtree.QuadTree$QuadTreeNode,org.andengine.util.adt.spatial.ISpatialItem) -> access$0
org.andengine.util.adt.transformation.Transformation -> org.andengine.util.adt.transformation.Transformation:
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    float tx -> tx
    float ty -> ty
    java.lang.String toString() -> toString
    void reset() -> reset
    void setToIdentity() -> setToIdentity
    void setTo(org.andengine.util.adt.transformation.Transformation) -> setTo
    void preTranslate(float,float) -> preTranslate
    void postTranslate(float,float) -> postTranslate
    org.andengine.util.adt.transformation.Transformation setToTranslate(float,float) -> setToTranslate
    void preRotate(float) -> preRotate
    void postRotate(float) -> postRotate
    org.andengine.util.adt.transformation.Transformation setToRotate(float) -> setToRotate
    void preScale(float,float) -> preScale
    void postScale(float,float) -> postScale
    org.andengine.util.adt.transformation.Transformation setToScale(float,float) -> setToScale
    void preSkew(float,float) -> preSkew
    void postSkew(float,float) -> postSkew
    org.andengine.util.adt.transformation.Transformation setToSkew(float,float) -> setToSkew
    void postConcat(org.andengine.util.adt.transformation.Transformation) -> postConcat
    void postConcat(float,float,float,float,float,float) -> postConcat
    void preConcat(org.andengine.util.adt.transformation.Transformation) -> preConcat
    void preConcat(float,float,float,float,float,float) -> preConcat
    void transform(float[]) -> transform
org.andengine.util.adt.transformation.TransformationPool -> org.andengine.util.adt.transformation.TransformationPool:
    org.andengine.util.adt.pool.GenericPool POOL -> POOL
    org.andengine.util.adt.transformation.Transformation obtain() -> obtain
    void recycle(org.andengine.util.adt.transformation.Transformation) -> recycle
org.andengine.util.adt.transformation.TransformationPool$1 -> org.andengine.util.adt.transformation.TransformationPool$1:
    org.andengine.util.adt.transformation.Transformation onAllocatePoolItem() -> onAllocatePoolItem
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
org.andengine.util.adt.trie.ITrie -> org.andengine.util.adt.trie.ITrie:
    void add(java.lang.CharSequence) -> add
    void add(java.lang.CharSequence,int,int) -> add
    boolean contains(java.lang.CharSequence) -> contains
    boolean contains(java.lang.CharSequence,int,int) -> contains
org.andengine.util.adt.trie.Trie -> org.andengine.util.adt.trie.Trie:
    int CHILDREN_SIZE_DEFAULT -> CHILDREN_SIZE_DEFAULT
    org.andengine.util.adt.trie.Trie$TrieNode mRoot -> mRoot
    void add(java.lang.CharSequence) -> add
    void add(java.lang.CharSequence,int,int) -> add
    boolean contains(java.lang.CharSequence) -> contains
    boolean contains(java.lang.CharSequence,int,int) -> contains
org.andengine.util.adt.trie.Trie$TrieNode -> org.andengine.util.adt.trie.Trie$TrieNode:
    android.util.SparseArray mChildren -> mChildren
    boolean mWordEndFlag -> mWordEndFlag
    void add(java.lang.CharSequence) -> add
    void add(java.lang.CharSequence,int,int) -> add
    boolean contains(java.lang.CharSequence) -> contains
    boolean contains(java.lang.CharSequence,int,int) -> contains
org.andengine.util.algorithm.Spiral -> org.andengine.util.algorithm.Spiral:
    int mCenterX -> mCenterX
    int mCenterY -> mCenterY
    int mStepSize -> mStepSize
    int mX -> mX
    int mY -> mY
    org.andengine.util.algorithm.path.Direction mDirection -> mDirection
    int mDirectionSegmentLength -> mDirectionSegmentLength
    int mDirectionSegmentIndex -> mDirectionSegmentIndex
    int getCenterX() -> getCenterX
    int getCenterY() -> getCenterY
    int getX() -> getX
    int getY() -> getY
    void step() -> step
org.andengine.util.algorithm.collision.BaseCollisionChecker -> org.andengine.util.algorithm.collision.BaseCollisionChecker:
    boolean checkAxisAlignedRectangleCollision(float,float,float,float,float,float,float,float) -> checkAxisAlignedRectangleCollision
    boolean checkAxisAlignedRectangleContains(float,float,float,float,float,float) -> checkAxisAlignedRectangleContains
    int relativeCCW(float,float,float,float,float,float) -> relativeCCW
org.andengine.util.algorithm.collision.LineCollisionChecker -> org.andengine.util.algorithm.collision.LineCollisionChecker:
    int LINE_VERTEX_COUNT -> LINE_VERTEX_COUNT
    boolean checkLineCollision(float,float,float,float,float,float,float,float) -> checkLineCollision
    void fillVertices(org.andengine.entity.primitive.Line,float[]) -> fillVertices
org.andengine.util.algorithm.collision.RectangularShapeCollisionChecker -> org.andengine.util.algorithm.collision.RectangularShapeCollisionChecker:
    int RECTANGULARSHAPE_VERTEX_COUNT -> RECTANGULARSHAPE_VERTEX_COUNT
    float[] VERTICES_CONTAINS_TMP -> VERTICES_CONTAINS_TMP
    float[] VERTICES_COLLISION_TMP_A -> VERTICES_COLLISION_TMP_A
    float[] VERTICES_COLLISION_TMP_B -> VERTICES_COLLISION_TMP_B
    boolean checkContains(float,float,float,float,org.andengine.util.adt.transformation.Transformation,float,float) -> checkContains
    boolean checkContains(org.andengine.entity.Entity,float,float,float,float) -> checkContains
    boolean checkContains(org.andengine.entity.shape.RectangularShape,float,float) -> checkContains
    boolean isVisible(org.andengine.engine.camera.Camera,org.andengine.entity.shape.RectangularShape) -> isVisible
    boolean isVisible(org.andengine.engine.camera.Camera,float,float,float,float,org.andengine.util.adt.transformation.Transformation) -> isVisible
    boolean isVisible(org.andengine.engine.camera.Camera,org.andengine.entity.primitive.Line) -> isVisible
    boolean checkCollision(org.andengine.entity.shape.RectangularShape,org.andengine.entity.shape.RectangularShape) -> checkCollision
    boolean checkCollision(org.andengine.entity.shape.RectangularShape,org.andengine.entity.primitive.Line) -> checkCollision
    void fillVertices(org.andengine.entity.shape.RectangularShape,float[]) -> fillVertices
    void fillVertices(float,float,float,float,org.andengine.util.adt.transformation.Transformation,float[]) -> fillVertices
    void fillVertices(org.andengine.engine.camera.Camera,float[]) -> fillVertices
org.andengine.util.algorithm.collision.ShapeCollisionChecker -> org.andengine.util.algorithm.collision.ShapeCollisionChecker:
    boolean checkCollision(float[],int,float[],int) -> checkCollision
    boolean checkCollision(float[],int,int,int,int,float[],int,int,int,int) -> checkCollision
    boolean checkCollisionSub(float[],int,int,int,int,int,float[],int,int,int,int) -> checkCollisionSub
    boolean checkContains(float[],int,float,float) -> checkContains
    boolean checkContains(float[],int,int,int,int,float,float) -> checkContains
org.andengine.util.algorithm.collision.TriangleCollisionChecker -> org.andengine.util.algorithm.collision.TriangleCollisionChecker:
    int TRIANGLE_VERTEX_COUNT -> TRIANGLE_VERTEX_COUNT
    float[] VERTICES_CONTAINS_TMP -> VERTICES_CONTAINS_TMP
    boolean checkContains(float,float,float,float,float,float,float,float) -> checkContains
    boolean checkContains(float,float,float,float,float,float,org.andengine.util.adt.transformation.Transformation,float,float) -> checkContains
org.andengine.util.algorithm.hull.HullUtils -> org.andengine.util.algorithm.hull.HullUtils:
    int indexOfLowestVertex(float[],int,int,int) -> indexOfLowestVertex
    void swap(float[],int,int,int) -> swap
org.andengine.util.algorithm.hull.IHullAlgorithm -> org.andengine.util.algorithm.hull.IHullAlgorithm:
    int computeHull(float[],int,int,int,int) -> computeHull
org.andengine.util.algorithm.hull.JarvisMarch -> org.andengine.util.algorithm.hull.JarvisMarch:
    int computeHull(float[],int,int,int,int) -> computeHull
    int jarvisMarch(float[],int,int,int,int) -> jarvisMarch
org.andengine.util.algorithm.path.Direction -> org.andengine.util.algorithm.path.Direction:
    org.andengine.util.algorithm.path.Direction UP -> UP
    org.andengine.util.algorithm.path.Direction DOWN -> DOWN
    org.andengine.util.algorithm.path.Direction LEFT -> LEFT
    org.andengine.util.algorithm.path.Direction RIGHT -> RIGHT
    org.andengine.util.algorithm.path.Direction UP_LEFT -> UP_LEFT
    org.andengine.util.algorithm.path.Direction UP_RIGHT -> UP_RIGHT
    org.andengine.util.algorithm.path.Direction DOWN_LEFT -> DOWN_LEFT
    org.andengine.util.algorithm.path.Direction DOWN_RIGHT -> DOWN_RIGHT
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    int[] $SWITCH_TABLE$org$andengine$util$algorithm$path$Direction -> $SWITCH_TABLE$org$andengine$util$algorithm$path$Direction
    org.andengine.util.algorithm.path.Direction[] ENUM$VALUES -> ENUM$VALUES
    org.andengine.util.algorithm.path.Direction fromDelta(int,int) -> fromDelta
    boolean isHorizontal() -> isHorizontal
    boolean isVertical() -> isVertical
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
    org.andengine.util.algorithm.path.Direction rotateLeft() -> rotateLeft
    org.andengine.util.algorithm.path.Direction rotateRight() -> rotateRight
    org.andengine.util.algorithm.path.Direction opposite() -> opposite
    org.andengine.util.algorithm.path.Direction[] values() -> values
    org.andengine.util.algorithm.path.Direction valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$org$andengine$util$algorithm$path$Direction() -> $SWITCH_TABLE$org$andengine$util$algorithm$path$Direction
org.andengine.util.algorithm.path.ICostFunction -> org.andengine.util.algorithm.path.ICostFunction:
    float getCost(org.andengine.util.algorithm.path.IPathFinderMap,int,int,int,int,java.lang.Object) -> getCost
org.andengine.util.algorithm.path.IPathFinder -> org.andengine.util.algorithm.path.IPathFinder:
    org.andengine.util.algorithm.path.Path findPath(org.andengine.util.algorithm.path.IPathFinderMap,int,int,int,int,java.lang.Object,int,int,int,int,boolean,org.andengine.util.algorithm.path.astar.IAStarHeuristic,org.andengine.util.algorithm.path.ICostFunction) -> findPath
    org.andengine.util.algorithm.path.Path findPath(org.andengine.util.algorithm.path.IPathFinderMap,int,int,int,int,java.lang.Object,int,int,int,int,boolean,org.andengine.util.algorithm.path.astar.IAStarHeuristic,org.andengine.util.algorithm.path.ICostFunction,float) -> findPath
    org.andengine.util.algorithm.path.Path findPath(org.andengine.util.algorithm.path.IPathFinderMap,int,int,int,int,java.lang.Object,int,int,int,int,boolean,org.andengine.util.algorithm.path.astar.IAStarHeuristic,org.andengine.util.algorithm.path.ICostFunction,float,org.andengine.util.algorithm.path.IPathFinder$IPathFinderListener) -> findPath
org.andengine.util.algorithm.path.IPathFinder$IPathFinderListener -> org.andengine.util.algorithm.path.IPathFinder$IPathFinderListener:
    void onVisited(java.lang.Object,int,int) -> onVisited
org.andengine.util.algorithm.path.IPathFinderMap -> org.andengine.util.algorithm.path.IPathFinderMap:
    boolean isBlocked(int,int,java.lang.Object) -> isBlocked
org.andengine.util.algorithm.path.Path -> org.andengine.util.algorithm.path.Path:
    int[] mXs -> mXs
    int[] mYs -> mYs
    int getLength() -> getLength
    int getFromX() -> getFromX
    int getFromY() -> getFromY
    int getToX() -> getToX
    int getToY() -> getToY
    int getX(int) -> getX
    int getY(int) -> getY
    void set(int,int,int) -> set
    boolean contains(int,int) -> contains
    org.andengine.util.algorithm.path.Direction getDirectionToPreviousStep(int) -> getDirectionToPreviousStep
    org.andengine.util.algorithm.path.Direction getDirectionToNextStep(int) -> getDirectionToNextStep
org.andengine.util.algorithm.path.astar.AStarPathFinder -> org.andengine.util.algorithm.path.astar.AStarPathFinder:
    org.andengine.util.algorithm.path.Path findPath(org.andengine.util.algorithm.path.IPathFinderMap,int,int,int,int,java.lang.Object,int,int,int,int,boolean,org.andengine.util.algorithm.path.astar.IAStarHeuristic,org.andengine.util.algorithm.path.ICostFunction) -> findPath
    org.andengine.util.algorithm.path.Path findPath(org.andengine.util.algorithm.path.IPathFinderMap,int,int,int,int,java.lang.Object,int,int,int,int,boolean,org.andengine.util.algorithm.path.astar.IAStarHeuristic,org.andengine.util.algorithm.path.ICostFunction,float) -> findPath
    org.andengine.util.algorithm.path.Path findPath(org.andengine.util.algorithm.path.IPathFinderMap,int,int,int,int,java.lang.Object,int,int,int,int,boolean,org.andengine.util.algorithm.path.astar.IAStarHeuristic,org.andengine.util.algorithm.path.ICostFunction,float,org.andengine.util.algorithm.path.IPathFinder$IPathFinderListener) -> findPath
org.andengine.util.algorithm.path.astar.AStarPathFinder$Node -> org.andengine.util.algorithm.path.astar.AStarPathFinder$Node:
    org.andengine.util.algorithm.path.astar.AStarPathFinder$Node mParent -> mParent
    int mX -> mX
    int mY -> mY
    long mID -> mID
    float mExpectedRestCost -> mExpectedRestCost
    float mCost -> mCost
    float mTotalCost -> mTotalCost
    void setParent(org.andengine.util.algorithm.path.astar.AStarPathFinder$Node,float) -> setParent
    int compareTo(org.andengine.util.algorithm.path.astar.AStarPathFinder$Node) -> compareTo
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    long calculateID(int,int) -> calculateID
    boolean equals(org.andengine.util.algorithm.path.astar.AStarPathFinder$Node) -> equals
    int compareTo(java.lang.Object) -> compareTo
org.andengine.util.algorithm.path.astar.EuclideanHeuristic -> org.andengine.util.algorithm.path.astar.EuclideanHeuristic:
    float getExpectedRestCost(org.andengine.util.algorithm.path.IPathFinderMap,java.lang.Object,int,int,int,int) -> getExpectedRestCost
org.andengine.util.algorithm.path.astar.IAStarHeuristic -> org.andengine.util.algorithm.path.astar.IAStarHeuristic:
    float getExpectedRestCost(org.andengine.util.algorithm.path.IPathFinderMap,java.lang.Object,int,int,int,int) -> getExpectedRestCost
org.andengine.util.algorithm.path.astar.ManhattanHeuristic -> org.andengine.util.algorithm.path.astar.ManhattanHeuristic:
    float getExpectedRestCost(org.andengine.util.algorithm.path.IPathFinderMap,java.lang.Object,int,int,int,int) -> getExpectedRestCost
org.andengine.util.algorithm.path.astar.NullHeuristic -> org.andengine.util.algorithm.path.astar.NullHeuristic:
    float getExpectedRestCost(org.andengine.util.algorithm.path.IPathFinderMap,java.lang.Object,int,int,int,int) -> getExpectedRestCost
org.andengine.util.algorithm.sort.InsertionSorter -> org.andengine.util.algorithm.sort.InsertionSorter:
    void sort(java.lang.Object[],int,int,java.util.Comparator) -> sort
    void sort(java.util.List,int,int,java.util.Comparator) -> sort
    void sort(org.andengine.util.adt.list.IList,int,int,java.util.Comparator) -> sort
org.andengine.util.algorithm.sort.Sorter -> org.andengine.util.algorithm.sort.Sorter:
    void sort(java.lang.Object[],int,int,java.util.Comparator) -> sort
    void sort(java.util.List,int,int,java.util.Comparator) -> sort
    void sort(org.andengine.util.adt.list.IList,int,int,java.util.Comparator) -> sort
    void sort(java.lang.Object[],java.util.Comparator) -> sort
    void sort(java.util.List,java.util.Comparator) -> sort
    void sort(org.andengine.util.adt.list.IList,java.util.Comparator) -> sort
org.andengine.util.animationpack.AnimationPack -> org.andengine.util.animationpack.AnimationPack:
    org.andengine.util.texturepack.TexturePackLibrary mTexturePackLibrary -> mTexturePackLibrary
    org.andengine.util.animationpack.AnimationPackTiledTextureRegionLibrary mAnimationPackTiledTextureRegionLibrary -> mAnimationPackTiledTextureRegionLibrary
    org.andengine.util.texturepack.TexturePackLibrary getTexturePackLibrary() -> getTexturePackLibrary
    org.andengine.util.animationpack.AnimationPackTiledTextureRegionLibrary getAnimationPackAnimationDataLibrary() -> getAnimationPackAnimationDataLibrary
org.andengine.util.animationpack.AnimationPackLoader -> org.andengine.util.animationpack.AnimationPackLoader:
    android.content.res.AssetManager mAssetManager -> mAssetManager
    org.andengine.opengl.texture.TextureManager mTextureManager -> mTextureManager
    org.andengine.util.animationpack.AnimationPack loadFromAsset(java.lang.String,java.lang.String) -> loadFromAsset
    org.andengine.util.animationpack.AnimationPack load(java.io.InputStream,java.lang.String) -> load
org.andengine.util.animationpack.AnimationPackParser -> org.andengine.util.animationpack.AnimationPackParser:
    java.lang.String TAG_ANIMATIONPACK -> TAG_ANIMATIONPACK
    java.lang.String TAG_ANIMATIONPACK_ATTRIBUTE_VERSION -> TAG_ANIMATIONPACK_ATTRIBUTE_VERSION
    java.lang.String TAG_TEXTUREPACKS -> TAG_TEXTUREPACKS
    java.lang.String TAG_TEXTUREPACK -> TAG_TEXTUREPACK
    java.lang.String TAG_TEXTUREPACK_ATTRIBUTE_FILENAME -> TAG_TEXTUREPACK_ATTRIBUTE_FILENAME
    java.lang.String TAG_ANIMATIONS -> TAG_ANIMATIONS
    java.lang.String TAG_ANIMATION -> TAG_ANIMATION
    java.lang.String TAG_ANIMATION_ATTRIBUTE_NAME -> TAG_ANIMATION_ATTRIBUTE_NAME
    java.lang.String TAG_ANIMATION_ATTRIBUTE_LOOPCOUNT -> TAG_ANIMATION_ATTRIBUTE_LOOPCOUNT
    java.lang.String TAG_ANIMATIONFRAME -> TAG_ANIMATIONFRAME
    java.lang.String TAG_ANIMATIONFRAME_ATTRIBUTE_DURATION -> TAG_ANIMATIONFRAME_ATTRIBUTE_DURATION
    java.lang.String TAG_ANIMATIONFRAME_ATTRIBUTE_TEXTUREREGION -> TAG_ANIMATIONFRAME_ATTRIBUTE_TEXTUREREGION
    android.content.res.AssetManager mAssetManager -> mAssetManager
    java.lang.String mAssetBasePath -> mAssetBasePath
    org.andengine.opengl.texture.TextureManager mTextureManager -> mTextureManager
    org.andengine.util.animationpack.AnimationPack mAnimationPack -> mAnimationPack
    org.andengine.util.animationpack.AnimationPackTiledTextureRegionLibrary mAnimationPackTiledTextureRegionLibrary -> mAnimationPackTiledTextureRegionLibrary
    org.andengine.util.texturepack.TexturePackLibrary mTexturePackLibrary -> mTexturePackLibrary
    org.andengine.util.texturepack.TexturePackLoader mTexturePackLoader -> mTexturePackLoader
    java.lang.String mCurrentAnimationName -> mCurrentAnimationName
    int mCurrentAnimationLoopCount -> mCurrentAnimationLoopCount
    org.andengine.util.adt.list.LongArrayList mCurrentAnimationFrameDurations -> mCurrentAnimationFrameDurations
    java.util.ArrayList mCurrentAnimationFrameTexturePackTextureRegions -> mCurrentAnimationFrameTexturePackTextureRegions
    org.andengine.util.animationpack.AnimationPack getAnimationPack() -> getAnimationPack
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
org.andengine.util.animationpack.AnimationPackTiledTextureRegion -> org.andengine.util.animationpack.AnimationPackTiledTextureRegion:
    java.lang.String mAnimationName -> mAnimationName
    org.andengine.entity.sprite.AnimationData mAnimationData -> mAnimationData
    java.lang.String getAnimationName() -> getAnimationName
    org.andengine.entity.sprite.AnimationData getAnimationData() -> getAnimationData
org.andengine.util.animationpack.AnimationPackTiledTextureRegionLibrary -> org.andengine.util.animationpack.AnimationPackTiledTextureRegionLibrary:
    java.util.HashMap mAnimationPackTiledTextureRegionMapping -> mAnimationPackTiledTextureRegionMapping
    void put(org.andengine.util.animationpack.AnimationPackTiledTextureRegion) -> put
    org.andengine.util.animationpack.AnimationPackTiledTextureRegion get(java.lang.String) -> get
org.andengine.util.animationpack.exception.AnimationPackParseException -> org.andengine.util.animationpack.exception.AnimationPackParseException:
    long serialVersionUID -> serialVersionUID
org.andengine.util.base64.Base64 -> org.andengine.util.base64.Base64:
    int DEFAULT -> DEFAULT
    int NO_PADDING -> NO_PADDING
    int NO_WRAP -> NO_WRAP
    int CRLF -> CRLF
    int URL_SAFE -> URL_SAFE
    int NO_CLOSE -> NO_CLOSE
    boolean $assertionsDisabled -> $assertionsDisabled
    byte[] decode(java.lang.String,int) -> decode
    byte[] decode(byte[],int) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    java.lang.String encodeToString(byte[],int) -> encodeToString
    java.lang.String encodeToString(byte[],int,int,int) -> encodeToString
    byte[] encode(byte[],int) -> encode
    byte[] encode(byte[],int,int,int) -> encode
org.andengine.util.base64.Base64$Coder -> org.andengine.util.base64.Base64$Coder:
    byte[] output -> output
    int op -> op
    boolean process(byte[],int,int,boolean) -> process
    int maxOutputSize(int) -> maxOutputSize
org.andengine.util.base64.Base64$Decoder -> org.andengine.util.base64.Base64$Decoder:
    int[] DECODE -> DECODE
    int[] DECODE_WEBSAFE -> DECODE_WEBSAFE
    int SKIP -> SKIP
    int EQUALS -> EQUALS
    int state -> state
    int value -> value
    int[] alphabet -> alphabet
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
org.andengine.util.base64.Base64$Encoder -> org.andengine.util.base64.Base64$Encoder:
    int LINE_GROUPS -> LINE_GROUPS
    byte[] ENCODE -> ENCODE
    byte[] ENCODE_WEBSAFE -> ENCODE_WEBSAFE
    byte[] tail -> tail
    int tailLen -> tailLen
    int count -> count
    boolean do_padding -> do_padding
    boolean do_newline -> do_newline
    boolean do_cr -> do_cr
    byte[] alphabet -> alphabet
    boolean $assertionsDisabled -> $assertionsDisabled
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
org.andengine.util.base64.Base64InputStream -> org.andengine.util.base64.Base64InputStream:
    org.andengine.util.base64.Base64$Coder coder -> coder
    byte[] EMPTY -> EMPTY
    int BUFFER_SIZE -> BUFFER_SIZE
    boolean eof -> eof
    byte[] inputBuffer -> inputBuffer
    int outputStart -> outputStart
    int outputEnd -> outputEnd
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
    void close() -> close
    int available() -> available
    long skip(long) -> skip
    int read() -> read
    int read(byte[],int,int) -> read
    void refill() -> refill
org.andengine.util.call.AsyncCallable -> org.andengine.util.call.AsyncCallable:
    void call(org.andengine.util.call.Callback,org.andengine.util.call.Callback) -> call
org.andengine.util.call.Callable -> org.andengine.util.call.Callable:
    java.lang.Object call() -> call
org.andengine.util.call.Callback -> org.andengine.util.call.Callback:
    void onCallback(java.lang.Object) -> onCallback
org.andengine.util.call.ParameterCallable -> org.andengine.util.call.ParameterCallable:
    void call(java.lang.Object) -> call
org.andengine.util.color.Color -> org.andengine.util.color.Color:
    int ABGR_PACKED_RED_SHIFT -> ABGR_PACKED_RED_SHIFT
    int ABGR_PACKED_GREEN_SHIFT -> ABGR_PACKED_GREEN_SHIFT
    int ABGR_PACKED_BLUE_SHIFT -> ABGR_PACKED_BLUE_SHIFT
    int ABGR_PACKED_ALPHA_SHIFT -> ABGR_PACKED_ALPHA_SHIFT
    int ABGR_PACKED_RED_CLEAR -> ABGR_PACKED_RED_CLEAR
    int ABGR_PACKED_GREEN_CLEAR -> ABGR_PACKED_GREEN_CLEAR
    int ABGR_PACKED_BLUE_CLEAR -> ABGR_PACKED_BLUE_CLEAR
    int ABGR_PACKED_ALPHA_CLEAR -> ABGR_PACKED_ALPHA_CLEAR
    int ARGB_PACKED_BLUE_SHIFT -> ARGB_PACKED_BLUE_SHIFT
    int ARGB_PACKED_GREEN_SHIFT -> ARGB_PACKED_GREEN_SHIFT
    int ARGB_PACKED_RED_SHIFT -> ARGB_PACKED_RED_SHIFT
    int ARGB_PACKED_ALPHA_SHIFT -> ARGB_PACKED_ALPHA_SHIFT
    int ARGB_PACKED_BLUE_CLEAR -> ARGB_PACKED_BLUE_CLEAR
    int ARGB_PACKED_GREEN_CLEAR -> ARGB_PACKED_GREEN_CLEAR
    int ARGB_PACKED_RED_CLEAR -> ARGB_PACKED_RED_CLEAR
    int ARGB_PACKED_ALPHA_CLEAR -> ARGB_PACKED_ALPHA_CLEAR
    org.andengine.util.color.Color WHITE -> WHITE
    org.andengine.util.color.Color BLACK -> BLACK
    org.andengine.util.color.Color RED -> RED
    org.andengine.util.color.Color YELLOW -> YELLOW
    org.andengine.util.color.Color GREEN -> GREEN
    org.andengine.util.color.Color CYAN -> CYAN
    org.andengine.util.color.Color BLUE -> BLUE
    org.andengine.util.color.Color PINK -> PINK
    org.andengine.util.color.Color TRANSPARENT -> TRANSPARENT
    int WHITE_ABGR_PACKED_INT -> WHITE_ABGR_PACKED_INT
    int BLACK_ABGR_PACKED_INT -> BLACK_ABGR_PACKED_INT
    int RED_ABGR_PACKED_INT -> RED_ABGR_PACKED_INT
    int YELLOW_ABGR_PACKED_INT -> YELLOW_ABGR_PACKED_INT
    int GREEN_ABGR_PACKED_INT -> GREEN_ABGR_PACKED_INT
    int CYAN_ABGR_PACKED_INT -> CYAN_ABGR_PACKED_INT
    int BLUE_ABGR_PACKED_INT -> BLUE_ABGR_PACKED_INT
    int PINK_ABGR_PACKED_INT -> PINK_ABGR_PACKED_INT
    int TRANSPARENT_ABGR_PACKED_INT -> TRANSPARENT_ABGR_PACKED_INT
    float WHITE_ABGR_PACKED_FLOAT -> WHITE_ABGR_PACKED_FLOAT
    float BLACK_ABGR_PACKED_FLOAT -> BLACK_ABGR_PACKED_FLOAT
    float RED_ABGR_PACKED_FLOAT -> RED_ABGR_PACKED_FLOAT
    float YELLOW_ABGR_PACKED_FLOAT -> YELLOW_ABGR_PACKED_FLOAT
    float GREEN_ABGR_PACKED_FLOAT -> GREEN_ABGR_PACKED_FLOAT
    float CYAN_ABGR_PACKED_FLOAT -> CYAN_ABGR_PACKED_FLOAT
    float BLUE_ABGR_PACKED_FLOAT -> BLUE_ABGR_PACKED_FLOAT
    float PINK_ABGR_PACKED_FLOAT -> PINK_ABGR_PACKED_FLOAT
    float TRANSPARENT_ABGR_PACKED_FLOAT -> TRANSPARENT_ABGR_PACKED_FLOAT
    int WHITE_ARGB_PACKED_INT -> WHITE_ARGB_PACKED_INT
    int BLACK_ARGB_PACKED_INT -> BLACK_ARGB_PACKED_INT
    int RED_ARGB_PACKED_INT -> RED_ARGB_PACKED_INT
    int YELLOW_ARGB_PACKED_INT -> YELLOW_ARGB_PACKED_INT
    int GREEN_ARGB_PACKED_INT -> GREEN_ARGB_PACKED_INT
    int CYAN_ARGB_PACKED_INT -> CYAN_ARGB_PACKED_INT
    int BLUE_ARGB_PACKED_INT -> BLUE_ARGB_PACKED_INT
    int PINK_ARGB_PACKED_INT -> PINK_ARGB_PACKED_INT
    int TRANSPARENT_ARGB_PACKED_INT -> TRANSPARENT_ARGB_PACKED_INT
    float mRed -> mRed
    float mGreen -> mGreen
    float mBlue -> mBlue
    float mAlpha -> mAlpha
    int mABGRPackedInt -> mABGRPackedInt
    float mABGRPackedFloat -> mABGRPackedFloat
    float getRed() -> getRed
    float getGreen() -> getGreen
    float getBlue() -> getBlue
    float getAlpha() -> getAlpha
    void setRed(float) -> setRed
    boolean setRedChecking(float) -> setRedChecking
    void setGreen(float) -> setGreen
    boolean setGreenChecking(float) -> setGreenChecking
    void setBlue(float) -> setBlue
    boolean setBlueChecking(float) -> setBlueChecking
    void setAlpha(float) -> setAlpha
    boolean setAlphaChecking(float) -> setAlphaChecking
    void set(float,float,float) -> set
    boolean setChecking(float,float,float) -> setChecking
    void set(float,float,float,float) -> set
    boolean setChecking(float,float,float,float) -> setChecking
    void set(org.andengine.util.color.Color) -> set
    boolean setChecking(org.andengine.util.color.Color) -> setChecking
    int getABGRPackedInt() -> getABGRPackedInt
    float getABGRPackedFloat() -> getABGRPackedFloat
    int getARGBPackedInt() -> getARGBPackedInt
    void reset() -> reset
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    boolean equals(org.andengine.util.color.Color) -> equals
    void packABGRRed() -> packABGRRed
    void packABGRGreen() -> packABGRGreen
    void packABGRBlue() -> packABGRBlue
    void packABGRAlpha() -> packABGRAlpha
    void packABGR() -> packABGR
    void mix(org.andengine.util.color.Color,float,org.andengine.util.color.Color,float) -> mix
org.andengine.util.color.ColorPool -> org.andengine.util.color.ColorPool:
    org.andengine.util.color.Color onAllocatePoolItem() -> onAllocatePoolItem
    void onHandleRecycleItem(org.andengine.util.color.Color) -> onHandleRecycleItem
    java.lang.Object onAllocatePoolItem() -> onAllocatePoolItem
    void onHandleRecycleItem(java.lang.Object) -> onHandleRecycleItem
org.andengine.util.color.ColorUtils -> org.andengine.util.color.ColorUtils:
    float[] HSV_TO_COLOR -> HSV_TO_COLOR
    int HSV_TO_COLOR_HUE_INDEX -> HSV_TO_COLOR_HUE_INDEX
    int HSV_TO_COLOR_SATURATION_INDEX -> HSV_TO_COLOR_SATURATION_INDEX
    int HSV_TO_COLOR_VALUE_INDEX -> HSV_TO_COLOR_VALUE_INDEX
    int INT_BITS_TO_FLOAT_MASK -> INT_BITS_TO_FLOAT_MASK
    int convertHSVToARGBPackedInt(float,float,float) -> convertHSVToARGBPackedInt
    org.andengine.util.color.Color convertHSVToColor(float,float,float) -> convertHSVToColor
    org.andengine.util.color.Color convertARGBPackedIntToColor(int) -> convertARGBPackedIntToColor
    org.andengine.util.color.Color convertABGRPackedIntToColor(int) -> convertABGRPackedIntToColor
    int convertRGBAToARGBPackedInt(float,float,float,float) -> convertRGBAToARGBPackedInt
    float convertRGBAToARGBPackedFloat(float,float,float,float) -> convertRGBAToARGBPackedFloat
    int convertRGBAToABGRPackedInt(float,float,float,float) -> convertRGBAToABGRPackedInt
    float convertRGBAToABGRPackedFloat(float,float,float,float) -> convertRGBAToABGRPackedFloat
    float convertPackedIntToPackedFloat(int) -> convertPackedIntToPackedFloat
    float extractRedFromABGRPackedInt(int) -> extractRedFromABGRPackedInt
    float extractGreenFromABGRPackedInt(int) -> extractGreenFromABGRPackedInt
    float extractBlueFromABGRPackedInt(int) -> extractBlueFromABGRPackedInt
    float extractAlphaFromABGRPackedInt(int) -> extractAlphaFromABGRPackedInt
    float extractBlueFromARGBPackedInt(int) -> extractBlueFromARGBPackedInt
    float extractGreenFromARGBPackedInt(int) -> extractGreenFromARGBPackedInt
    float extractRedFromARGBPackedInt(int) -> extractRedFromARGBPackedInt
    float extractAlphaFromARGBPackedInt(int) -> extractAlphaFromARGBPackedInt
org.andengine.util.color.constants.ColorConstants -> org.andengine.util.color.constants.ColorConstants:
    float COLOR_FACTOR_INT_TO_FLOAT -> COLOR_FACTOR_INT_TO_FLOAT
org.andengine.util.debug.Debug -> org.andengine.util.debug.Debug:
    java.lang.String sTag -> sTag
    java.lang.String sDebugUser -> sDebugUser
    org.andengine.util.debug.Debug$DebugLevel sDebugLevel -> sDebugLevel
    int[] $SWITCH_TABLE$org$andengine$util$debug$Debug$DebugLevel -> $SWITCH_TABLE$org$andengine$util$debug$Debug$DebugLevel
    java.lang.String getTag() -> getTag
    void setTag(java.lang.String) -> setTag
    org.andengine.util.debug.Debug$DebugLevel getDebugLevel() -> getDebugLevel
    void setDebugLevel(org.andengine.util.debug.Debug$DebugLevel) -> setDebugLevel
    void setDebugUser(java.lang.String) -> setDebugUser
    void log(org.andengine.util.debug.Debug$DebugLevel,java.lang.String) -> log
    void log(org.andengine.util.debug.Debug$DebugLevel,java.lang.String,java.lang.Throwable) -> log
    void log(org.andengine.util.debug.Debug$DebugLevel,java.lang.String,java.lang.String) -> log
    void log(org.andengine.util.debug.Debug$DebugLevel,java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void v(java.lang.String) -> v
    void v(java.lang.String,java.lang.Throwable) -> v
    void v(java.lang.String,java.lang.String) -> v
    void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    void vUser(java.lang.String,java.lang.String) -> vUser
    void vUser(java.lang.String,java.lang.Throwable,java.lang.String) -> vUser
    void vUser(java.lang.String,java.lang.String,java.lang.String) -> vUser
    void vUser(java.lang.String,java.lang.String,java.lang.Throwable,java.lang.String) -> vUser
    void d(java.lang.String) -> d
    void d(java.lang.String,java.lang.Throwable) -> d
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void dUser(java.lang.String,java.lang.String) -> dUser
    void dUser(java.lang.String,java.lang.Throwable,java.lang.String) -> dUser
    void dUser(java.lang.String,java.lang.String,java.lang.String) -> dUser
    void dUser(java.lang.String,java.lang.String,java.lang.Throwable,java.lang.String) -> dUser
    void i(java.lang.String) -> i
    void i(java.lang.String,java.lang.Throwable) -> i
    void i(java.lang.String,java.lang.String) -> i
    void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    void iUser(java.lang.String,java.lang.String) -> iUser
    void iUser(java.lang.String,java.lang.Throwable,java.lang.String) -> iUser
    void iUser(java.lang.String,java.lang.String,java.lang.String) -> iUser
    void iUser(java.lang.String,java.lang.String,java.lang.Throwable,java.lang.String) -> iUser
    void w(java.lang.String) -> w
    void w(java.lang.Throwable) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void w(java.lang.String,java.lang.String) -> w
    void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    void wUser(java.lang.String,java.lang.String) -> wUser
    void wUser(java.lang.Throwable,java.lang.String) -> wUser
    void wUser(java.lang.String,java.lang.Throwable,java.lang.String) -> wUser
    void wUser(java.lang.String,java.lang.String,java.lang.String) -> wUser
    void wUser(java.lang.String,java.lang.String,java.lang.Throwable,java.lang.String) -> wUser
    void e(java.lang.String) -> e
    void e(java.lang.Throwable) -> e
    void e(java.lang.String,java.lang.Throwable) -> e
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    void eUser(java.lang.String,java.lang.String) -> eUser
    void eUser(java.lang.Throwable,java.lang.String) -> eUser
    void eUser(java.lang.String,java.lang.Throwable,java.lang.String) -> eUser
    void eUser(java.lang.String,java.lang.String,java.lang.String) -> eUser
    void eUser(java.lang.String,java.lang.String,java.lang.Throwable,java.lang.String) -> eUser
    int[] $SWITCH_TABLE$org$andengine$util$debug$Debug$DebugLevel() -> $SWITCH_TABLE$org$andengine$util$debug$Debug$DebugLevel
org.andengine.util.debug.Debug$DebugLevel -> org.andengine.util.debug.Debug$DebugLevel:
    org.andengine.util.debug.Debug$DebugLevel NONE -> NONE
    org.andengine.util.debug.Debug$DebugLevel ERROR -> ERROR
    org.andengine.util.debug.Debug$DebugLevel WARNING -> WARNING
    org.andengine.util.debug.Debug$DebugLevel INFO -> INFO
    org.andengine.util.debug.Debug$DebugLevel DEBUG -> DEBUG
    org.andengine.util.debug.Debug$DebugLevel VERBOSE -> VERBOSE
    org.andengine.util.debug.Debug$DebugLevel ALL -> ALL
    org.andengine.util.debug.Debug$DebugLevel[] ENUM$VALUES -> ENUM$VALUES
    boolean isSameOrLessThan(org.andengine.util.debug.Debug$DebugLevel) -> isSameOrLessThan
    org.andengine.util.debug.Debug$DebugLevel[] values() -> values
    org.andengine.util.debug.Debug$DebugLevel valueOf(java.lang.String) -> valueOf
org.andengine.util.debug.DebugTimer -> org.andengine.util.debug.DebugTimer:
    java.lang.String SPLIT_STRING -> SPLIT_STRING
    int INDENT_SPACES -> INDENT_SPACES
    java.util.Stack mDebugTimes -> mDebugTimes
    org.andengine.util.debug.Debug$DebugLevel mDebugLevel -> mDebugLevel
    void init(java.lang.String) -> init
    void begin(java.lang.String) -> begin
    void split(java.lang.String) -> split
    void end() -> end
    void dump() -> dump
    void dump(boolean) -> dump
    void clear() -> clear
    int access$0() -> access$0
    org.andengine.util.debug.Debug$DebugLevel access$1(org.andengine.util.debug.DebugTimer) -> access$1
org.andengine.util.debug.DebugTimer$DebugTime -> org.andengine.util.debug.DebugTimer$DebugTime:
    long mStartTime -> mStartTime
    java.lang.String mLabel -> mLabel
    boolean mSplit -> mSplit
    long mEndTime -> mEndTime
    java.util.ArrayList mChildren -> mChildren
    org.andengine.util.debug.DebugTimer$DebugTime mLastSplit -> mLastSplit
    org.andengine.util.debug.DebugTimer this$0 -> this$0
    void begin(org.andengine.util.debug.DebugTimer$DebugTime) -> begin
    void split(java.lang.String) -> split
    void end(long) -> end
    void dump(int) -> dump
    void dump(int,java.lang.String) -> dump
    void ensureChildrenAllocated() -> ensureChildrenAllocated
    java.lang.String access$0(org.andengine.util.debug.DebugTimer$DebugTime) -> access$0
org.andengine.util.exception.AndEngineException -> org.andengine.util.exception.AndEngineException:
    long serialVersionUID -> serialVersionUID
org.andengine.util.exception.AndEngineRuntimeException -> org.andengine.util.exception.AndEngineRuntimeException:
    long serialVersionUID -> serialVersionUID
org.andengine.util.exception.CancelledException -> org.andengine.util.exception.CancelledException:
    long serialVersionUID -> serialVersionUID
org.andengine.util.exception.DeviceNotSupportedException -> org.andengine.util.exception.DeviceNotSupportedException:
    long serialVersionUID -> serialVersionUID
    org.andengine.util.exception.DeviceNotSupportedException$DeviceNotSupportedCause mDeviceNotSupportedCause -> mDeviceNotSupportedCause
    org.andengine.util.exception.DeviceNotSupportedException$DeviceNotSupportedCause getDeviceNotSupportedCause() -> getDeviceNotSupportedCause
org.andengine.util.exception.DeviceNotSupportedException$DeviceNotSupportedCause -> org.andengine.util.exception.DeviceNotSupportedException$DeviceNotSupportedCause:
    org.andengine.util.exception.DeviceNotSupportedException$DeviceNotSupportedCause CODEPATH_INCOMPLETE -> CODEPATH_INCOMPLETE
    org.andengine.util.exception.DeviceNotSupportedException$DeviceNotSupportedCause EGLCONFIG_NOT_FOUND -> EGLCONFIG_NOT_FOUND
    org.andengine.util.exception.DeviceNotSupportedException$DeviceNotSupportedCause[] ENUM$VALUES -> ENUM$VALUES
    org.andengine.util.exception.DeviceNotSupportedException$DeviceNotSupportedCause[] values() -> values
    org.andengine.util.exception.DeviceNotSupportedException$DeviceNotSupportedCause valueOf(java.lang.String) -> valueOf
org.andengine.util.exception.MethodNotSupportedException -> org.andengine.util.exception.MethodNotSupportedException:
    long serialVersionUID -> serialVersionUID
org.andengine.util.exception.MethodNotYetImplementedException -> org.andengine.util.exception.MethodNotYetImplementedException:
    long serialVersionUID -> serialVersionUID
org.andengine.util.exception.NullBitmapException -> org.andengine.util.exception.NullBitmapException:
    long serialVersionUID -> serialVersionUID
org.andengine.util.level.IEntityLoader -> org.andengine.util.level.IEntityLoader:
    org.andengine.entity.IEntity onLoadEntity(java.lang.String,org.xml.sax.Attributes) -> onLoadEntity
org.andengine.util.level.LevelLoader -> org.andengine.util.level.LevelLoader:
    java.lang.String mAssetBasePath -> mAssetBasePath
    org.andengine.util.level.IEntityLoader mDefaultEntityLoader -> mDefaultEntityLoader
    java.util.HashMap mEntityLoaders -> mEntityLoaders
    org.andengine.util.level.IEntityLoader getDefaultEntityLoader() -> getDefaultEntityLoader
    void setDefaultEntityLoader(org.andengine.util.level.IEntityLoader) -> setDefaultEntityLoader
    void setAssetBasePath(java.lang.String) -> setAssetBasePath
    java.lang.String getAssetBasePath() -> getAssetBasePath
    void onAfterLoadLevel() -> onAfterLoadLevel
    void onBeforeLoadLevel() -> onBeforeLoadLevel
    void registerEntityLoader(java.lang.String,org.andengine.util.level.IEntityLoader) -> registerEntityLoader
    void registerEntityLoader(java.lang.String[],org.andengine.util.level.IEntityLoader) -> registerEntityLoader
    void loadLevelFromAsset(android.content.res.AssetManager,java.lang.String) -> loadLevelFromAsset
    void loadLevelFromResource(android.content.res.Resources,int) -> loadLevelFromResource
    void loadLevelFromStream(java.io.InputStream) -> loadLevelFromStream
org.andengine.util.level.LevelParser -> org.andengine.util.level.LevelParser:
    org.andengine.util.level.IEntityLoader mDefaultEntityLoader -> mDefaultEntityLoader
    java.util.HashMap mEntityLoaders -> mEntityLoaders
    org.andengine.util.adt.list.SmartList mParentEntityStack -> mParentEntityStack
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
org.andengine.util.level.constants.LevelConstants -> org.andengine.util.level.constants.LevelConstants:
    java.lang.String TAG_LEVEL -> TAG_LEVEL
    java.lang.String TAG_LEVEL_ATTRIBUTE_NAME -> TAG_LEVEL_ATTRIBUTE_NAME
    java.lang.String TAG_LEVEL_ATTRIBUTE_UID -> TAG_LEVEL_ATTRIBUTE_UID
    java.lang.String TAG_LEVEL_ATTRIBUTE_WIDTH -> TAG_LEVEL_ATTRIBUTE_WIDTH
    java.lang.String TAG_LEVEL_ATTRIBUTE_HEIGHT -> TAG_LEVEL_ATTRIBUTE_HEIGHT
org.andengine.util.levelstats.LevelStatsDBConnector -> org.andengine.util.levelstats.LevelStatsDBConnector:
    java.lang.String PREFERENCES_LEVELSTATSDBCONNECTOR_PLAYERID_ID -> PREFERENCES_LEVELSTATSDBCONNECTOR_PLAYERID_ID
    java.lang.String mSecret -> mSecret
    java.lang.String mSubmitURL -> mSubmitURL
    int mPlayerID -> mPlayerID
    void submitAsync(int,boolean,int) -> submitAsync
    void submitAsync(int,boolean,int,org.andengine.util.call.Callback) -> submitAsync
    java.lang.String access$0(org.andengine.util.levelstats.LevelStatsDBConnector) -> access$0
    int access$1(org.andengine.util.levelstats.LevelStatsDBConnector) -> access$1
    java.lang.String access$2(org.andengine.util.levelstats.LevelStatsDBConnector) -> access$2
org.andengine.util.levelstats.LevelStatsDBConnector$1 -> org.andengine.util.levelstats.LevelStatsDBConnector$1:
    org.andengine.util.levelstats.LevelStatsDBConnector this$0 -> this$0
    int val$pLevelID -> val$pLevelID
    boolean val$pSolved -> val$pSolved
    int val$pSecondsElapsed -> val$pSecondsElapsed
    org.andengine.util.call.Callback val$pCallback -> val$pCallback
    void run() -> run
org.andengine.util.math.MathConstants -> org.andengine.util.math.MathConstants:
    float PI -> PI
    float PI_TWICE -> PI_TWICE
    float PI_HALF -> PI_HALF
    float DEG_TO_RAD -> DEG_TO_RAD
    float RAD_TO_DEG -> RAD_TO_DEG
org.andengine.util.math.MathUtils -> org.andengine.util.math.MathUtils:
    java.util.Random RANDOM -> RANDOM
    float atan2(float,float) -> atan2
    float radToDeg(float) -> radToDeg
    float degToRad(float) -> degToRad
    int signum(int) -> signum
    int randomSign() -> randomSign
    float random(float,float) -> random
    int random(int,int) -> random
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    int nextPowerOfTwo(float) -> nextPowerOfTwo
    int nextPowerOfTwo(int) -> nextPowerOfTwo
    int sum(int[]) -> sum
    void arraySumInternal(int[]) -> arraySumInternal
    void arraySumInternal(long[]) -> arraySumInternal
    void arraySumInternal(long[],long) -> arraySumInternal
    void arraySumInto(long[],long[],long) -> arraySumInto
    float arraySum(float[]) -> arraySum
    float arrayAverage(float[]) -> arrayAverage
    float[] rotateAroundCenter(float[],float,float,float) -> rotateAroundCenter
    float[] scaleAroundCenter(float[],float,float,float,float) -> scaleAroundCenter
    float[] rotateAndScaleAroundCenter(float[],float,float,float,float,float,float,float) -> rotateAndScaleAroundCenter
    float[] revertScaleAroundCenter(float[],float,float,float,float) -> revertScaleAroundCenter
    float[] revertRotateAroundCenter(float[],float,float,float) -> revertRotateAroundCenter
    float[] revertRotateAndScaleAroundCenter(float[],float,float,float,float,float,float,float) -> revertRotateAndScaleAroundCenter
    boolean isInBounds(int,int,int) -> isInBounds
    boolean isInBounds(float,float,float) -> isInBounds
    int bringToBounds(int,int,int) -> bringToBounds
    float bringToBounds(float,float,float) -> bringToBounds
    float distance(float,float,float,float) -> distance
    float length(float,float) -> length
    float mix(float,float,float) -> mix
    int mix(int,int,float) -> mix
    boolean isEven(int) -> isEven
    boolean isOdd(int) -> isOdd
    float dot(float,float,float,float) -> dot
    float cross(float,float,float,float) -> cross
org.andengine.util.mime.MIMEType -> org.andengine.util.mime.MIMEType:
    org.andengine.util.mime.MIMEType JPEG -> JPEG
    org.andengine.util.mime.MIMEType GIF -> GIF
    org.andengine.util.mime.MIMEType PNG -> PNG
    java.lang.String mTypeString -> mTypeString
    org.andengine.util.mime.MIMEType[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String getTypeString() -> getTypeString
    org.andengine.util.mime.MIMEType[] values() -> values
    org.andengine.util.mime.MIMEType valueOf(java.lang.String) -> valueOf
org.andengine.util.modifier.BaseDoubleValueChangeModifier -> org.andengine.util.modifier.BaseDoubleValueChangeModifier:
    float mValueChangeBPerSecond -> mValueChangeBPerSecond
    void onChangeValue(float,java.lang.Object,float) -> onChangeValue
    void onChangeValues(float,java.lang.Object,float,float) -> onChangeValues
org.andengine.util.modifier.BaseDoubleValueSpanModifier -> org.andengine.util.modifier.BaseDoubleValueSpanModifier:
    float mFromValueB -> mFromValueB
    float mValueSpanB -> mValueSpanB
    float getFromValue() -> getFromValue
    float getToValue() -> getToValue
    float getFromValueA() -> getFromValueA
    float getToValueA() -> getToValueA
    float getFromValueB() -> getFromValueB
    float getToValueB() -> getToValueB
    void onSetInitialValues(java.lang.Object,float,float) -> onSetInitialValues
    void onSetValues(java.lang.Object,float,float,float) -> onSetValues
    void onSetInitialValue(java.lang.Object,float) -> onSetInitialValue
    void onSetValue(java.lang.Object,float,float) -> onSetValue
    void reset(float,float,float) -> reset
    void reset(float,float,float,float,float) -> reset
org.andengine.util.modifier.BaseDurationModifier -> org.andengine.util.modifier.BaseDurationModifier:
    float mSecondsElapsed -> mSecondsElapsed
    float mDuration -> mDuration
    float getSecondsElapsed() -> getSecondsElapsed
    float getDuration() -> getDuration
    void onManagedUpdate(float,java.lang.Object) -> onManagedUpdate
    void onManagedInitialize(java.lang.Object) -> onManagedInitialize
    float onUpdate(float,java.lang.Object) -> onUpdate
    void reset() -> reset
org.andengine.util.modifier.BaseModifier -> org.andengine.util.modifier.BaseModifier:
    boolean mFinished -> mFinished
    boolean mAutoUnregisterWhenFinished -> mAutoUnregisterWhenFinished
    org.andengine.util.adt.list.SmartList mModifierListeners -> mModifierListeners
    boolean isFinished() -> isFinished
    boolean isAutoUnregisterWhenFinished() -> isAutoUnregisterWhenFinished
    void setAutoUnregisterWhenFinished(boolean) -> setAutoUnregisterWhenFinished
    void addModifierListener(org.andengine.util.modifier.IModifier$IModifierListener) -> addModifierListener
    boolean removeModifierListener(org.andengine.util.modifier.IModifier$IModifierListener) -> removeModifierListener
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
    void onModifierStarted(java.lang.Object) -> onModifierStarted
    void onModifierFinished(java.lang.Object) -> onModifierFinished
    void assertNoNullModifier(org.andengine.util.modifier.IModifier) -> assertNoNullModifier
    void assertNoNullModifier(org.andengine.util.modifier.IModifier[]) -> assertNoNullModifier
org.andengine.util.modifier.BaseQuadrupelValueSpanModifier -> org.andengine.util.modifier.BaseQuadrupelValueSpanModifier:
    float mFromValueD -> mFromValueD
    float mValueSpanD -> mValueSpanD
    void onSetInitialValues(java.lang.Object,float,float,float,float) -> onSetInitialValues
    void onSetValues(java.lang.Object,float,float,float,float,float) -> onSetValues
    void onSetInitialValues(java.lang.Object,float,float,float) -> onSetInitialValues
    void onSetValues(java.lang.Object,float,float,float,float) -> onSetValues
    void reset(float,float,float,float,float,float,float) -> reset
    void reset(float,float,float,float,float,float,float,float,float) -> reset
org.andengine.util.modifier.BaseSingleValueChangeModifier -> org.andengine.util.modifier.BaseSingleValueChangeModifier:
    float mValueChangePerSecond -> mValueChangePerSecond
    void onChangeValue(float,java.lang.Object,float) -> onChangeValue
    void onManagedInitialize(java.lang.Object) -> onManagedInitialize
    void onManagedUpdate(float,java.lang.Object) -> onManagedUpdate
org.andengine.util.modifier.BaseSingleValueSpanModifier -> org.andengine.util.modifier.BaseSingleValueSpanModifier:
    float mFromValue -> mFromValue
    float mValueSpan -> mValueSpan
    org.andengine.util.modifier.ease.IEaseFunction mEaseFunction -> mEaseFunction
    float getFromValue() -> getFromValue
    float getToValue() -> getToValue
    void onSetInitialValue(java.lang.Object,float) -> onSetInitialValue
    void onSetValue(java.lang.Object,float,float) -> onSetValue
    void onManagedInitialize(java.lang.Object) -> onManagedInitialize
    void onManagedUpdate(float,java.lang.Object) -> onManagedUpdate
    void reset(float,float,float) -> reset
org.andengine.util.modifier.BaseTripleValueSpanModifier -> org.andengine.util.modifier.BaseTripleValueSpanModifier:
    float mFromValueC -> mFromValueC
    float mValueSpanC -> mValueSpanC
    float getFromValueC() -> getFromValueC
    float getToValueC() -> getToValueC
    void onSetInitialValues(java.lang.Object,float,float,float) -> onSetInitialValues
    void onSetValues(java.lang.Object,float,float,float,float) -> onSetValues
    void onSetInitialValues(java.lang.Object,float,float) -> onSetInitialValues
    void onSetValues(java.lang.Object,float,float,float) -> onSetValues
    void reset(float,float,float,float,float) -> reset
    void reset(float,float,float,float,float,float,float) -> reset
org.andengine.util.modifier.IModifier -> org.andengine.util.modifier.IModifier:
    java.util.Comparator MODIFIER_COMPARATOR_DURATION_DESCENDING -> MODIFIER_COMPARATOR_DURATION_DESCENDING
    void reset() -> reset
    boolean isFinished() -> isFinished
    boolean isAutoUnregisterWhenFinished() -> isAutoUnregisterWhenFinished
    void setAutoUnregisterWhenFinished(boolean) -> setAutoUnregisterWhenFinished
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
    float getSecondsElapsed() -> getSecondsElapsed
    float getDuration() -> getDuration
    float onUpdate(float,java.lang.Object) -> onUpdate
    void addModifierListener(org.andengine.util.modifier.IModifier$IModifierListener) -> addModifierListener
    boolean removeModifierListener(org.andengine.util.modifier.IModifier$IModifierListener) -> removeModifierListener
org.andengine.util.modifier.IModifier$1 -> org.andengine.util.modifier.IModifier$1:
    int compare(org.andengine.util.modifier.IModifier,org.andengine.util.modifier.IModifier) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.andengine.util.modifier.IModifier$DeepCopyNotSupportedException -> org.andengine.util.modifier.IModifier$DeepCopyNotSupportedException:
    long serialVersionUID -> serialVersionUID
org.andengine.util.modifier.IModifier$IModifierListener -> org.andengine.util.modifier.IModifier$IModifierListener:
    void onModifierStarted(org.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierStarted
    void onModifierFinished(org.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierFinished
org.andengine.util.modifier.LoopModifier -> org.andengine.util.modifier.LoopModifier:
    int LOOP_CONTINUOUS -> LOOP_CONTINUOUS
    float mSecondsElapsed -> mSecondsElapsed
    float mDuration -> mDuration
    org.andengine.util.modifier.IModifier mModifier -> mModifier
    org.andengine.util.modifier.LoopModifier$ILoopModifierListener mLoopModifierListener -> mLoopModifierListener
    int mLoopCount -> mLoopCount
    int mLoop -> mLoop
    boolean mModifierStartedCalled -> mModifierStartedCalled
    boolean mFinishedCached -> mFinishedCached
    org.andengine.util.modifier.LoopModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.LoopModifier$ILoopModifierListener getLoopModifierListener() -> getLoopModifierListener
    void setLoopModifierListener(org.andengine.util.modifier.LoopModifier$ILoopModifierListener) -> setLoopModifierListener
    float getSecondsElapsed() -> getSecondsElapsed
    float getDuration() -> getDuration
    float onUpdate(float,java.lang.Object) -> onUpdate
    void reset() -> reset
    void onModifierStarted(org.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierStarted
    void onModifierFinished(org.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierFinished
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.util.modifier.LoopModifier$ILoopModifierListener -> org.andengine.util.modifier.LoopModifier$ILoopModifierListener:
    void onLoopStarted(org.andengine.util.modifier.LoopModifier,int,int) -> onLoopStarted
    void onLoopFinished(org.andengine.util.modifier.LoopModifier,int,int) -> onLoopFinished
org.andengine.util.modifier.ModifierList -> org.andengine.util.modifier.ModifierList:
    long serialVersionUID -> serialVersionUID
    java.lang.Object mTarget -> mTarget
    java.lang.Object getTarget() -> getTarget
    boolean add(org.andengine.util.modifier.IModifier) -> add
    void onUpdate(float) -> onUpdate
    void reset() -> reset
    boolean add(java.lang.Object) -> add
org.andengine.util.modifier.ParallelModifier -> org.andengine.util.modifier.ParallelModifier:
    float mSecondsElapsed -> mSecondsElapsed
    float mDuration -> mDuration
    org.andengine.util.modifier.IModifier[] mModifiers -> mModifiers
    boolean mFinishedCached -> mFinishedCached
    org.andengine.util.modifier.ParallelModifier deepCopy() -> deepCopy
    float getSecondsElapsed() -> getSecondsElapsed
    float getDuration() -> getDuration
    float onUpdate(float,java.lang.Object) -> onUpdate
    void reset() -> reset
    void onModifierStarted(org.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierStarted
    void onModifierFinished(org.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierFinished
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.util.modifier.SequenceModifier -> org.andengine.util.modifier.SequenceModifier:
    org.andengine.util.modifier.SequenceModifier$ISubSequenceModifierListener mSubSequenceModifierListener -> mSubSequenceModifierListener
    org.andengine.util.modifier.IModifier[] mSubSequenceModifiers -> mSubSequenceModifiers
    int mCurrentSubSequenceModifierIndex -> mCurrentSubSequenceModifierIndex
    float mSecondsElapsed -> mSecondsElapsed
    float mDuration -> mDuration
    boolean mFinishedCached -> mFinishedCached
    org.andengine.util.modifier.SequenceModifier deepCopy() -> deepCopy
    org.andengine.util.modifier.SequenceModifier$ISubSequenceModifierListener getSubSequenceModifierListener() -> getSubSequenceModifierListener
    void setSubSequenceModifierListener(org.andengine.util.modifier.SequenceModifier$ISubSequenceModifierListener) -> setSubSequenceModifierListener
    float getSecondsElapsed() -> getSecondsElapsed
    float getDuration() -> getDuration
    float onUpdate(float,java.lang.Object) -> onUpdate
    void reset() -> reset
    void onModifierStarted(org.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierStarted
    void onModifierFinished(org.andengine.util.modifier.IModifier,java.lang.Object) -> onModifierFinished
    org.andengine.util.modifier.IModifier deepCopy() -> deepCopy
org.andengine.util.modifier.SequenceModifier$ISubSequenceModifierListener -> org.andengine.util.modifier.SequenceModifier$ISubSequenceModifierListener:
    void onSubSequenceStarted(org.andengine.util.modifier.IModifier,java.lang.Object,int) -> onSubSequenceStarted
    void onSubSequenceFinished(org.andengine.util.modifier.IModifier,java.lang.Object,int) -> onSubSequenceFinished
org.andengine.util.modifier.ease.EaseBackIn -> org.andengine.util.modifier.ease.EaseBackIn:
    float OVERSHOOT_CONSTANT -> OVERSHOOT_CONSTANT
    org.andengine.util.modifier.ease.EaseBackIn INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseBackIn getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseBackInOut -> org.andengine.util.modifier.ease.EaseBackInOut:
    org.andengine.util.modifier.ease.EaseBackInOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseBackInOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
org.andengine.util.modifier.ease.EaseBackOut -> org.andengine.util.modifier.ease.EaseBackOut:
    org.andengine.util.modifier.ease.EaseBackOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseBackOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseBounceIn -> org.andengine.util.modifier.ease.EaseBounceIn:
    org.andengine.util.modifier.ease.EaseBounceIn INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseBounceIn getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseBounceInOut -> org.andengine.util.modifier.ease.EaseBounceInOut:
    org.andengine.util.modifier.ease.EaseBounceInOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseBounceInOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
org.andengine.util.modifier.ease.EaseBounceOut -> org.andengine.util.modifier.ease.EaseBounceOut:
    org.andengine.util.modifier.ease.EaseBounceOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseBounceOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseCircularIn -> org.andengine.util.modifier.ease.EaseCircularIn:
    org.andengine.util.modifier.ease.EaseCircularIn INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseCircularIn getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseCircularInOut -> org.andengine.util.modifier.ease.EaseCircularInOut:
    org.andengine.util.modifier.ease.EaseCircularInOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseCircularInOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
org.andengine.util.modifier.ease.EaseCircularOut -> org.andengine.util.modifier.ease.EaseCircularOut:
    org.andengine.util.modifier.ease.EaseCircularOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseCircularOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseCubicIn -> org.andengine.util.modifier.ease.EaseCubicIn:
    org.andengine.util.modifier.ease.EaseCubicIn INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseCubicIn getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseCubicInOut -> org.andengine.util.modifier.ease.EaseCubicInOut:
    org.andengine.util.modifier.ease.EaseCubicInOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseCubicInOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
org.andengine.util.modifier.ease.EaseCubicOut -> org.andengine.util.modifier.ease.EaseCubicOut:
    org.andengine.util.modifier.ease.EaseCubicOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseCubicOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseElasticIn -> org.andengine.util.modifier.ease.EaseElasticIn:
    org.andengine.util.modifier.ease.EaseElasticIn INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseElasticIn getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float,float,float) -> getValue
org.andengine.util.modifier.ease.EaseElasticInOut -> org.andengine.util.modifier.ease.EaseElasticInOut:
    org.andengine.util.modifier.ease.EaseElasticInOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseElasticInOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
org.andengine.util.modifier.ease.EaseElasticOut -> org.andengine.util.modifier.ease.EaseElasticOut:
    org.andengine.util.modifier.ease.EaseElasticOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseElasticOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float,float,float) -> getValue
org.andengine.util.modifier.ease.EaseExponentialIn -> org.andengine.util.modifier.ease.EaseExponentialIn:
    org.andengine.util.modifier.ease.EaseExponentialIn INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseExponentialIn getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseExponentialInOut -> org.andengine.util.modifier.ease.EaseExponentialInOut:
    org.andengine.util.modifier.ease.EaseExponentialInOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseExponentialInOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
org.andengine.util.modifier.ease.EaseExponentialOut -> org.andengine.util.modifier.ease.EaseExponentialOut:
    org.andengine.util.modifier.ease.EaseExponentialOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseExponentialOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseLinear -> org.andengine.util.modifier.ease.EaseLinear:
    org.andengine.util.modifier.ease.EaseLinear INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseLinear getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
org.andengine.util.modifier.ease.EaseQuadIn -> org.andengine.util.modifier.ease.EaseQuadIn:
    org.andengine.util.modifier.ease.EaseQuadIn INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseQuadIn getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseQuadInOut -> org.andengine.util.modifier.ease.EaseQuadInOut:
    org.andengine.util.modifier.ease.EaseQuadInOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseQuadInOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
org.andengine.util.modifier.ease.EaseQuadOut -> org.andengine.util.modifier.ease.EaseQuadOut:
    org.andengine.util.modifier.ease.EaseQuadOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseQuadOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseQuartIn -> org.andengine.util.modifier.ease.EaseQuartIn:
    org.andengine.util.modifier.ease.EaseQuartIn INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseQuartIn getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseQuartInOut -> org.andengine.util.modifier.ease.EaseQuartInOut:
    org.andengine.util.modifier.ease.EaseQuartInOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseQuartInOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
org.andengine.util.modifier.ease.EaseQuartOut -> org.andengine.util.modifier.ease.EaseQuartOut:
    org.andengine.util.modifier.ease.EaseQuartOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseQuartOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseQuintIn -> org.andengine.util.modifier.ease.EaseQuintIn:
    org.andengine.util.modifier.ease.EaseQuintIn INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseQuintIn getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseQuintInOut -> org.andengine.util.modifier.ease.EaseQuintInOut:
    org.andengine.util.modifier.ease.EaseQuintInOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseQuintInOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
org.andengine.util.modifier.ease.EaseQuintOut -> org.andengine.util.modifier.ease.EaseQuintOut:
    org.andengine.util.modifier.ease.EaseQuintOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseQuintOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseSineIn -> org.andengine.util.modifier.ease.EaseSineIn:
    org.andengine.util.modifier.ease.EaseSineIn INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseSineIn getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseSineInOut -> org.andengine.util.modifier.ease.EaseSineInOut:
    org.andengine.util.modifier.ease.EaseSineInOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseSineInOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
org.andengine.util.modifier.ease.EaseSineOut -> org.andengine.util.modifier.ease.EaseSineOut:
    org.andengine.util.modifier.ease.EaseSineOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseSineOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseStrongIn -> org.andengine.util.modifier.ease.EaseStrongIn:
    org.andengine.util.modifier.ease.EaseStrongIn INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseStrongIn getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.EaseStrongInOut -> org.andengine.util.modifier.ease.EaseStrongInOut:
    org.andengine.util.modifier.ease.EaseStrongInOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseStrongInOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
org.andengine.util.modifier.ease.EaseStrongOut -> org.andengine.util.modifier.ease.EaseStrongOut:
    org.andengine.util.modifier.ease.EaseStrongOut INSTANCE -> INSTANCE
    org.andengine.util.modifier.ease.EaseStrongOut getInstance() -> getInstance
    float getPercentage(float,float) -> getPercentage
    float getValue(float) -> getValue
org.andengine.util.modifier.ease.IEaseFunction -> org.andengine.util.modifier.ease.IEaseFunction:
    float getPercentage(float,float) -> getPercentage
org.andengine.util.modifier.util.ModifierUtils -> org.andengine.util.modifier.util.ModifierUtils:
    float getSequenceDurationOfModifier(org.andengine.util.modifier.IModifier[]) -> getSequenceDurationOfModifier
org.andengine.util.preferences.SimplePreferences -> org.andengine.util.preferences.SimplePreferences:
    android.content.SharedPreferences INSTANCE -> INSTANCE
    android.content.SharedPreferences$Editor EDITORINSTANCE -> EDITORINSTANCE
    android.content.SharedPreferences getInstance(android.content.Context) -> getInstance
    android.content.SharedPreferences$Editor getEditorInstance(android.content.Context) -> getEditorInstance
    int incrementAccessCount(android.content.Context,java.lang.String) -> incrementAccessCount
    int incrementAccessCount(android.content.Context,java.lang.String,int) -> incrementAccessCount
    int getAccessCount(android.content.Context,java.lang.String) -> getAccessCount
org.andengine.util.progress.IProgressListener -> org.andengine.util.progress.IProgressListener:
    int PROGRESS_MIN -> PROGRESS_MIN
    int PROGRESS_MAX -> PROGRESS_MAX
    void onProgressChanged(int) -> onProgressChanged
org.andengine.util.progress.ProgressCallable -> org.andengine.util.progress.ProgressCallable:
    java.lang.Object call(org.andengine.util.progress.IProgressListener) -> call
org.andengine.util.progress.ProgressMonitor -> org.andengine.util.progress.ProgressMonitor:
    java.util.ArrayList mProgressListeners -> mProgressListeners
    java.util.HashMap mChildProgressMonitorToProgressListenerMap -> mChildProgressMonitorToProgressListenerMap
    void onProgressChanged(int) -> onProgressChanged
    void registerChildProgressMonitor(org.andengine.util.progress.ProgressMonitor,int,int) -> registerChildProgressMonitor
    void unregisterChildProgressMonitor(org.andengine.util.progress.ProgressMonitor) -> unregisterChildProgressMonitor
    void addProgressListener(org.andengine.util.progress.IProgressListener) -> addProgressListener
    void removeProgressListener(org.andengine.util.progress.IProgressListener) -> removeProgressListener
org.andengine.util.progress.ProgressMonitor$1 -> org.andengine.util.progress.ProgressMonitor$1:
    org.andengine.util.progress.ProgressMonitor this$0 -> this$0
    int val$pChildProgressMonitorRangeFrom -> val$pChildProgressMonitorRangeFrom
    int val$pChildProgressMonitorRangeTo -> val$pChildProgressMonitorRangeTo
    void onProgressChanged(int) -> onProgressChanged
org.andengine.util.system.CPUUsage -> org.andengine.util.system.CPUUsage:
    long mTotal -> mTotal
    long mIdle -> mIdle
    float mUsage -> mUsage
    float getUsage() -> getUsage
    void update() -> update
org.andengine.util.system.SystemUtils -> org.andengine.util.system.SystemUtils:
    boolean SDK_VERSION_ECLAIR_OR_LATER -> SDK_VERSION_ECLAIR_OR_LATER
    boolean SDK_VERSION_FROYO_OR_LATER -> SDK_VERSION_FROYO_OR_LATER
    boolean SDK_VERSION_GINGERBREAD_OR_LATER -> SDK_VERSION_GINGERBREAD_OR_LATER
    boolean SDK_VERSION_HONEYCOMB_OR_LATER -> SDK_VERSION_HONEYCOMB_OR_LATER
    boolean SDK_VERSION_ICE_CREAM_SANDWICH_OR_LATER -> SDK_VERSION_ICE_CREAM_SANDWICH_OR_LATER
    java.lang.String BOGOMIPS_PATTERN -> BOGOMIPS_PATTERN
    java.lang.String MEMTOTAL_PATTERN -> MEMTOTAL_PATTERN
    java.lang.String MEMFREE_PATTERN -> MEMFREE_PATTERN
    boolean isGoogleTV(android.content.Context) -> isGoogleTV
    int getPackageVersionCode(android.content.Context) -> getPackageVersionCode
    java.lang.String getPackageVersionName(android.content.Context) -> getPackageVersionName
    java.lang.String getPackageName(android.content.Context) -> getPackageName
    java.lang.String getApkFilePath(android.content.Context) -> getApkFilePath
    android.content.pm.PackageInfo getPackageInfo(android.content.Context) -> getPackageInfo
    boolean hasSystemFeature(android.content.Context,java.lang.String) -> hasSystemFeature
    boolean isAndroidVersionOrLower(int) -> isAndroidVersionOrLower
    boolean isAndroidVersionOrHigher(int) -> isAndroidVersionOrHigher
    boolean isAndroidVersion(int,int) -> isAndroidVersion
    float getCPUBogoMips() -> getCPUBogoMips
    int getMemoryTotal() -> getMemoryTotal
    int getMemoryFree() -> getMemoryFree
    int getCPUFrequencyCurrent() -> getCPUFrequencyCurrent
    int getCPUFrequencyMin() -> getCPUFrequencyMin
    int getCPUFrequencyMax() -> getCPUFrequencyMax
    int getCPUFrequencyMinScaling() -> getCPUFrequencyMinScaling
    int getCPUFrequencyMaxScaling() -> getCPUFrequencyMaxScaling
    java.util.regex.MatchResult matchSystemFile(java.lang.String,java.lang.String,int) -> matchSystemFile
    int readSystemFileAsInt(java.lang.String) -> readSystemFileAsInt
org.andengine.util.system.SystemUtils$SystemUtilsException -> org.andengine.util.system.SystemUtils$SystemUtilsException:
    long serialVersionUID -> serialVersionUID
org.andengine.util.texturepack.TexturePack -> org.andengine.util.texturepack.TexturePack:
    org.andengine.opengl.texture.ITexture mTexture -> mTexture
    org.andengine.util.texturepack.TexturePackTextureRegionLibrary mTexturePackTextureRegionLibrary -> mTexturePackTextureRegionLibrary
    org.andengine.opengl.texture.ITexture getTexture() -> getTexture
    org.andengine.util.texturepack.TexturePackTextureRegionLibrary getTexturePackTextureRegionLibrary() -> getTexturePackTextureRegionLibrary
    void loadTexture() -> loadTexture
    void unloadTexture() -> unloadTexture
org.andengine.util.texturepack.TexturePackLibrary -> org.andengine.util.texturepack.TexturePackLibrary:
    java.util.HashMap mTexturePackMapping -> mTexturePackMapping
    java.util.HashMap mTexturePackTextureRegionSourceMapping -> mTexturePackTextureRegionSourceMapping
    void put(java.lang.String,org.andengine.util.texturepack.TexturePack) -> put
    org.andengine.util.texturepack.TexturePackTextureRegion getTexturePackTextureRegion(java.lang.String) -> getTexturePackTextureRegion
org.andengine.util.texturepack.TexturePackLoader -> org.andengine.util.texturepack.TexturePackLoader:
    android.content.res.AssetManager mAssetManager -> mAssetManager
    org.andengine.opengl.texture.TextureManager mTextureManager -> mTextureManager
    org.andengine.util.texturepack.TexturePack loadFromAsset(java.lang.String,java.lang.String) -> loadFromAsset
    org.andengine.util.texturepack.TexturePack load(java.io.InputStream,java.lang.String) -> load
org.andengine.util.texturepack.TexturePackParser -> org.andengine.util.texturepack.TexturePackParser:
    java.lang.String TAG_TEXTURE -> TAG_TEXTURE
    java.lang.String TAG_TEXTURE_ATTRIBUTE_VERSION -> TAG_TEXTURE_ATTRIBUTE_VERSION
    java.lang.String TAG_TEXTURE_ATTRIBUTE_FILE -> TAG_TEXTURE_ATTRIBUTE_FILE
    java.lang.String TAG_TEXTURE_ATTRIBUTE_MINFILTER -> TAG_TEXTURE_ATTRIBUTE_MINFILTER
    java.lang.String TAG_TEXTURE_ATTRIBUTE_MINFILTER_VALUE_NEAREST -> TAG_TEXTURE_ATTRIBUTE_MINFILTER_VALUE_NEAREST
    java.lang.String TAG_TEXTURE_ATTRIBUTE_MINFILTER_VALUE_LINEAR -> TAG_TEXTURE_ATTRIBUTE_MINFILTER_VALUE_LINEAR
    java.lang.String TAG_TEXTURE_ATTRIBUTE_MINFILTER_VALUE_LINEAR_MIPMAP_LINEAR -> TAG_TEXTURE_ATTRIBUTE_MINFILTER_VALUE_LINEAR_MIPMAP_LINEAR
    java.lang.String TAG_TEXTURE_ATTRIBUTE_MINFILTER_VALUE_LINEAR_MIPMAP_NEAREST -> TAG_TEXTURE_ATTRIBUTE_MINFILTER_VALUE_LINEAR_MIPMAP_NEAREST
    java.lang.String TAG_TEXTURE_ATTRIBUTE_MINFILTER_VALUE_NEAREST_MIPMAP_LINEAR -> TAG_TEXTURE_ATTRIBUTE_MINFILTER_VALUE_NEAREST_MIPMAP_LINEAR
    java.lang.String TAG_TEXTURE_ATTRIBUTE_MINFILTER_VALUE_NEAREST_MIPMAP_NEAREST -> TAG_TEXTURE_ATTRIBUTE_MINFILTER_VALUE_NEAREST_MIPMAP_NEAREST
    java.lang.String TAG_TEXTURE_ATTRIBUTE_MAGFILTER -> TAG_TEXTURE_ATTRIBUTE_MAGFILTER
    java.lang.String TAG_TEXTURE_ATTRIBUTE_MAGFILTER_VALUE_NEAREST -> TAG_TEXTURE_ATTRIBUTE_MAGFILTER_VALUE_NEAREST
    java.lang.String TAG_TEXTURE_ATTRIBUTE_MAGFILTER_VALUE_LINEAR -> TAG_TEXTURE_ATTRIBUTE_MAGFILTER_VALUE_LINEAR
    java.lang.String TAG_TEXTURE_ATTRIBUTE_WRAPT -> TAG_TEXTURE_ATTRIBUTE_WRAPT
    java.lang.String TAG_TEXTURE_ATTRIBUTE_WRAPS -> TAG_TEXTURE_ATTRIBUTE_WRAPS
    java.lang.String TAG_TEXTURE_ATTRIBUTE_WRAP_VALUE_CLAMP -> TAG_TEXTURE_ATTRIBUTE_WRAP_VALUE_CLAMP
    java.lang.String TAG_TEXTURE_ATTRIBUTE_WRAP_VALUE_CLAMP_TO_EDGE -> TAG_TEXTURE_ATTRIBUTE_WRAP_VALUE_CLAMP_TO_EDGE
    java.lang.String TAG_TEXTURE_ATTRIBUTE_WRAP_VALUE_REPEAT -> TAG_TEXTURE_ATTRIBUTE_WRAP_VALUE_REPEAT
    java.lang.String TAG_TEXTURE_ATTRIBUTE_PREMULTIPLYALPHA -> TAG_TEXTURE_ATTRIBUTE_PREMULTIPLYALPHA
    java.lang.String TAG_TEXTURE_ATTRIBUTE_TYPE -> TAG_TEXTURE_ATTRIBUTE_TYPE
    java.lang.String TAG_TEXTURE_ATTRIBUTE_TYPE_VALUE_PVRCCZ -> TAG_TEXTURE_ATTRIBUTE_TYPE_VALUE_PVRCCZ
    java.lang.String TAG_TEXTURE_ATTRIBUTE_TYPE_VALUE_PVRGZ -> TAG_TEXTURE_ATTRIBUTE_TYPE_VALUE_PVRGZ
    java.lang.String TAG_TEXTURE_ATTRIBUTE_TYPE_VALUE_PVR -> TAG_TEXTURE_ATTRIBUTE_TYPE_VALUE_PVR
    java.lang.String TAG_TEXTURE_ATTRIBUTE_TYPE_VALUE_BITMAP -> TAG_TEXTURE_ATTRIBUTE_TYPE_VALUE_BITMAP
    java.lang.String TAG_TEXTURE_ATTRIBUTE_PIXELFORMAT -> TAG_TEXTURE_ATTRIBUTE_PIXELFORMAT
    java.lang.String TAG_TEXTUREREGION -> TAG_TEXTUREREGION
    java.lang.String TAG_TEXTUREREGION_ATTRIBUTE_ID -> TAG_TEXTUREREGION_ATTRIBUTE_ID
    java.lang.String TAG_TEXTUREREGION_ATTRIBUTE_X -> TAG_TEXTUREREGION_ATTRIBUTE_X
    java.lang.String TAG_TEXTUREREGION_ATTRIBUTE_Y -> TAG_TEXTUREREGION_ATTRIBUTE_Y
    java.lang.String TAG_TEXTUREREGION_ATTRIBUTE_WIDTH -> TAG_TEXTUREREGION_ATTRIBUTE_WIDTH
    java.lang.String TAG_TEXTUREREGION_ATTRIBUTE_HEIGHT -> TAG_TEXTUREREGION_ATTRIBUTE_HEIGHT
    java.lang.String TAG_TEXTUREREGION_ATTRIBUTE_ROTATED -> TAG_TEXTUREREGION_ATTRIBUTE_ROTATED
    java.lang.String TAG_TEXTUREREGION_ATTRIBUTE_TRIMMED -> TAG_TEXTUREREGION_ATTRIBUTE_TRIMMED
    java.lang.String TAG_TEXTUREREGION_ATTRIBUTE_SOURCE -> TAG_TEXTUREREGION_ATTRIBUTE_SOURCE
    java.lang.String TAG_TEXTUREREGION_ATTRIBUTE_SOURCE_X -> TAG_TEXTUREREGION_ATTRIBUTE_SOURCE_X
    java.lang.String TAG_TEXTUREREGION_ATTRIBUTE_SOURCE_Y -> TAG_TEXTUREREGION_ATTRIBUTE_SOURCE_Y
    java.lang.String TAG_TEXTUREREGION_ATTRIBUTE_SOURCE_WIDTH -> TAG_TEXTUREREGION_ATTRIBUTE_SOURCE_WIDTH
    java.lang.String TAG_TEXTUREREGION_ATTRIBUTE_SOURCE_HEIGHT -> TAG_TEXTUREREGION_ATTRIBUTE_SOURCE_HEIGHT
    android.content.res.AssetManager mAssetManager -> mAssetManager
    java.lang.String mAssetBasePath -> mAssetBasePath
    org.andengine.opengl.texture.TextureManager mTextureManager -> mTextureManager
    org.andengine.util.texturepack.TexturePack mTexturePack -> mTexturePack
    org.andengine.util.texturepack.TexturePackTextureRegionLibrary mTextureRegionLibrary -> mTextureRegionLibrary
    org.andengine.opengl.texture.ITexture mTexture -> mTexture
    int mVersion -> mVersion
    org.andengine.util.texturepack.TexturePack getTexturePack() -> getTexturePack
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    java.io.InputStream onGetInputStream(java.lang.String) -> onGetInputStream
    org.andengine.opengl.texture.ITexture parseTexture(org.xml.sax.Attributes) -> parseTexture
    org.andengine.opengl.texture.PixelFormat parsePixelFormat(org.xml.sax.Attributes) -> parsePixelFormat
    org.andengine.opengl.texture.TextureOptions parseTextureOptions(org.xml.sax.Attributes) -> parseTextureOptions
    int parseMinFilter(org.xml.sax.Attributes) -> parseMinFilter
    int parseMagFilter(org.xml.sax.Attributes) -> parseMagFilter
    int parseWrapT(org.xml.sax.Attributes) -> parseWrapT
    int parseWrapS(org.xml.sax.Attributes) -> parseWrapS
    int parseWrap(org.xml.sax.Attributes,java.lang.String) -> parseWrap
    boolean parsePremultiplyalpha(org.xml.sax.Attributes) -> parsePremultiplyalpha
org.andengine.util.texturepack.TexturePackParser$1 -> org.andengine.util.texturepack.TexturePackParser$1:
    org.andengine.util.texturepack.TexturePackParser this$0 -> this$0
    java.lang.String val$file -> val$file
    java.io.InputStream open() -> open
org.andengine.util.texturepack.TexturePackParser$2 -> org.andengine.util.texturepack.TexturePackParser$2:
    org.andengine.util.texturepack.TexturePackParser this$0 -> this$0
    java.lang.String val$file -> val$file
    java.io.InputStream onGetInputStream() -> onGetInputStream
org.andengine.util.texturepack.TexturePackParser$3 -> org.andengine.util.texturepack.TexturePackParser$3:
    org.andengine.util.texturepack.TexturePackParser this$0 -> this$0
    java.lang.String val$file -> val$file
    java.io.InputStream onGetInputStream() -> onGetInputStream
org.andengine.util.texturepack.TexturePackParser$4 -> org.andengine.util.texturepack.TexturePackParser$4:
    org.andengine.util.texturepack.TexturePackParser this$0 -> this$0
    java.lang.String val$file -> val$file
    java.io.InputStream onGetInputStream() -> onGetInputStream
org.andengine.util.texturepack.TexturePackTextureRegion -> org.andengine.util.texturepack.TexturePackTextureRegion:
    int mID -> mID
    java.lang.String mSource -> mSource
    boolean mTrimmed -> mTrimmed
    int mSourceX -> mSourceX
    int mSourceY -> mSourceY
    int mSourceWidth -> mSourceWidth
    int mSourceHeight -> mSourceHeight
    int getID() -> getID
    java.lang.String getSource() -> getSource
    boolean isTrimmed() -> isTrimmed
    int getSourceX() -> getSourceX
    int getSourceY() -> getSourceY
    int getSourceWidth() -> getSourceWidth
    int getSourceHeight() -> getSourceHeight
org.andengine.util.texturepack.TexturePackTextureRegionLibrary -> org.andengine.util.texturepack.TexturePackTextureRegionLibrary:
    android.util.SparseArray mIDMapping -> mIDMapping
    java.util.HashMap mSourceMapping -> mSourceMapping
    android.util.SparseArray getIDMapping() -> getIDMapping
    java.util.HashMap getSourceMapping() -> getSourceMapping
    void put(org.andengine.util.texturepack.TexturePackTextureRegion) -> put
    void remove(int) -> remove
    org.andengine.util.texturepack.TexturePackTextureRegion get(int) -> get
    org.andengine.util.texturepack.TexturePackTextureRegion get(java.lang.String) -> get
    org.andengine.util.texturepack.TexturePackTextureRegion get(java.lang.String,boolean) -> get
    void throwOnCollision(org.andengine.util.texturepack.TexturePackTextureRegion) -> throwOnCollision
org.andengine.util.texturepack.exception.TexturePackParseException -> org.andengine.util.texturepack.exception.TexturePackParseException:
    long serialVersionUID -> serialVersionUID
org.andengine.util.time.TimeConstants -> org.andengine.util.time.TimeConstants:
    int MONTHS_PER_YEAR -> MONTHS_PER_YEAR
    int DAYS_PER_WEEK -> DAYS_PER_WEEK
    int DAYS_PER_MONTH -> DAYS_PER_MONTH
    int HOURS_PER_DAY -> HOURS_PER_DAY
    int MINUTES_PER_HOUR -> MINUTES_PER_HOUR
    int MILLISECONDS_PER_SECOND -> MILLISECONDS_PER_SECOND
    int MICROSECONDS_PER_SECOND -> MICROSECONDS_PER_SECOND
    long NANOSECONDS_PER_SECOND -> NANOSECONDS_PER_SECOND
    long MICROSECONDS_PER_MILLISECOND -> MICROSECONDS_PER_MILLISECOND
    long NANOSECONDS_PER_MICROSECOND -> NANOSECONDS_PER_MICROSECOND
    long NANOSECONDS_PER_MILLISECOND -> NANOSECONDS_PER_MILLISECOND
    float SECONDS_PER_NANOSECOND -> SECONDS_PER_NANOSECOND
    float MICROSECONDS_PER_NANOSECOND -> MICROSECONDS_PER_NANOSECOND
    float MILLISECONDS_PER_NANOSECOND -> MILLISECONDS_PER_NANOSECOND
    float SECONDS_PER_MICROSECOND -> SECONDS_PER_MICROSECOND
    float MILLISECONDS_PER_MICROSECOND -> MILLISECONDS_PER_MICROSECOND
    float SECONDS_PER_MILLISECOND -> SECONDS_PER_MILLISECOND
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    int SECONDS_PER_WEEK -> SECONDS_PER_WEEK
    int SECONDS_PER_MONTH -> SECONDS_PER_MONTH
    int SECONDS_PER_YEAR -> SECONDS_PER_YEAR
